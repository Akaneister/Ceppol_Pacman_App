{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\AjouterRapport.js\",\n  _s = $RefreshSig$();\n/**\r\n==================================================================================\r\n==================================================================================\r\n@file AjouterRapport.js\r\n@location frontend/src/components/pages/AjouterRapport.js\r\n@description Composant de création d'un nouveau rapport d'incident maritime pour l'application MarineV3\r\nFONCTIONNALITÉS PRINCIPALES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Formulaire multi-sections pour la saisie complète d'un rapport d'incident\r\n• Carte interactive Leaflet pour la sélection de localisation géographique\r\n• Validation des données avant soumission avec feedback utilisateur\r\n• Gestion des types/sous-types d'événements avec filtrage dynamique\r\n• Sauvegarde automatique des coordonnées lors du clic sur la carte\r\n• Interface utilisateur animée avec Framer Motion\r\n• Réinitialisation complète du formulaire après soumission réussie\r\n\r\nSTRUCTURE DU FORMULAIRE :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Section Générale : Titre, date, heure, description globale\r\n• Section Classification : Type d'événement, sous-type, origine\r\n• Section Cible : Informations sur le navire/objet concerné\r\n• Section Localisation : Zone géographique, coordonnées GPS, carte interactive\r\n• Section Météo : Conditions météorologiques (vent, mer, marée, etc.)\r\n• Section Alertes : Contacts, moyens déployés, délais d'intervention\r\n• Section Description : Description détaillée de l'incident\r\n\r\nFONCTIONNALITÉS AVANCÉES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Carte Leaflet dynamique avec placement/déplacement de marqueurs\r\n• Synchronisation bidirectionnelle coordonnées manuelles ↔ carte\r\n• Filtrage automatique des sous-types selon le type d'événement sélectionné\r\n• Gestion des fuseaux horaires (conversion local → UTC)\r\n• Validation stricte des champs obligatoires\r\n• Messages de statut (succès/erreur) avec disparition automatique\r\n\r\nDÉPENDANCES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• React (hooks: useState, useEffect, useRef)\r\n• AuthContext (authentification utilisateur)\r\n• Axios (requêtes HTTP vers l'API)\r\n• Leaflet (cartographie interactive)\r\n• Framer Motion (animations et transitions)\r\n• Composants modulaires pour chaque section du formulaire\r\n\r\nAPI UTILISÉE :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• GET /rapports/type-evenement - Types d'événements\r\n• GET /rapports/sous-type-pollution - Sous-types d'événements\r\n• GET /rapports/origine-evenement - Origines des événements\r\n• GET /rapports/zone-geographique - Zones géographiques\r\n• POST /rapports - Création d'un nouveau rapport\r\n@author Oscar Vieujean\r\n==================================================================================\r\n*/\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport '../css/AjouterRapport.css';\nimport 'leaflet/dist/leaflet.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Import des composants modulaires pour chaque section du formulaire\nimport GeneralInfoSection from './AjouterRapport/GeneralInfoSection';\nimport ClassificationSection from './AjouterRapport/ClassificationSection';\nimport TargetSection from './AjouterRapport/TargetSection';\nimport LocalisationSection from './AjouterRapport/LocalisationSection';\nimport MeteoSection from './AjouterRapport/MeteoSection';\nimport AlertesSection from './AjouterRapport/AlertesSection';\nimport DescriptionSection from './AjouterRapport/DescriptionSection';\nimport FormActions from './AjouterRapport/FormActions';\n\n// URL de base de l'API depuis les variables d'environnement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL;\nconst AjouterRapport = () => {\n  _s();\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  // HOOKS ET ÉTAT DU COMPOSANT\n  // ═══════════════════════════════════════════════════════════════════════════════════\n\n  // Récupération des données d'authentification de l'utilisateur connecté\n  const {\n    authData\n  } = useAuth();\n\n  // États pour la gestion de la soumission du formulaire\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n\n  // Références pour la gestion de la carte Leaflet\n  const mapRef = useRef(null); // Référence vers l'élément DOM de la carte\n  const leafletMapRef = useRef(null); // Référence vers l'instance Leaflet\n  const [mapInitialized, setMapInitialized] = useState(false);\n  const [marker, setMarker] = useState(null); // Marqueur de position sur la carte\n\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  // INITIALISATION DU FORMULAIRE AVEC VALEURS PAR DÉFAUT\n  // ═══════════════════════════════════════════════════════════════════════════════════\n\n  const [formData, setFormData] = useState(() => {\n    // Récupération de la date et heure actuelles en fuseau horaire local\n    const now = new Date();\n\n    // Formatage de la date au format YYYY-MM-DD pour l'input date HTML\n    const formattedDate = now.toISOString().split('T')[0];\n\n    // Formatage de l'heure au format HH:MM en fuseau horaire local\n    const hours = String(now.getHours()).padStart(2, '0');\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n    const formattedTime = `${hours}:${minutes}`;\n    return {\n      // Informations générales de l'événement\n      titre: '',\n      date_evenement: formattedDate,\n      heure_evenement: formattedTime,\n      description_globale: '',\n      // Classification de l'événement\n      id_type_evenement: '',\n      id_sous_type_evenement: '',\n      id_origine_evenement: '',\n      // Informations sur la cible de l'événement (navire, objet, etc.)\n      libelle: '',\n      nom_cible: '',\n      pavillon_cible: '',\n      // Localisation géographique de l'incident\n      id_zone: '',\n      details_lieu: '',\n      latitude: '',\n      longitude: '',\n      // Conditions météorologiques au moment de l'incident\n      direction_vent: '',\n      force_vent: '',\n      etat_mer: '',\n      nebulosite: '',\n      maree: '',\n      // Alertes, contacts et moyens mobilisés (valeurs booléennes)\n      cedre_alerte: false,\n      cross_alerte: false,\n      photo: false,\n      message_polrep: false,\n      derive_mothy: false,\n      polmar_terre: false,\n      smp: false,\n      bsaa: false,\n      sensible_proximite: false,\n      // Informations complémentaires sur les moyens et risques\n      moyen_proximite: '',\n      risque_court_terme: '',\n      risque_moyen_long_terme: '',\n      moyen_marine_etat: '',\n      moyen_depeche: '',\n      delai_appareillage: ''\n    };\n  });\n\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  // ÉTATS POUR LES LISTES DÉROULANTES (OPTIONS DU FORMULAIRE)\n  // ═══════════════════════════════════════════════════════════════════════════════════\n\n  const [typesEvenement, setTypesEvenement] = useState([]); // Types d'événements disponibles\n  const [sousTypesEvenement, setSousTypesEvenement] = useState([]); // Sous-types d'événements\n  const [originesEvenement, setOriginesEvenement] = useState([]); // Origines possibles des événements\n  const [zonesGeographiques, setZonesGeographiques] = useState([]); // Zones géographiques prédéfinies\n  const [filteredSousTypes, setFilteredSousTypes] = useState([]); // Sous-types filtrés selon le type sélectionné\n\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  // RÉCUPÉRATION DES DONNÉES DE RÉFÉRENCE DEPUIS L'API\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  useEffect(() => {\n    const fetchOptionsData = async () => {\n      try {\n        // Récupération parallèle de toutes les données de référence nécessaires au formulaire\n        const [typesRes, sousTypesRes, originesRes, zonesRes] = await Promise.all([axios.get(`${API}/rapports/type-evenement`),\n        // Types d'événements\n        axios.get(`${API}/rapports/sous-type-pollution`),\n        // Sous-types de pollution\n        axios.get(`${API}/rapports/origine-evenement`),\n        // Origines des événements\n        axios.get(`${API}/rapports/zone-geographique`) // Zones géographiques\n        ]);\n\n        // Mise à jour des états avec les données récupérées\n        setTypesEvenement(typesRes.data);\n        setSousTypesEvenement(sousTypesRes.data);\n        setOriginesEvenement(originesRes.data);\n        setZonesGeographiques(zonesRes.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données:', error);\n      }\n    };\n    fetchOptionsData();\n  }, []); // Exécution unique au montage du composant\n\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  // INITIALISATION ET GESTION DE LA CARTE LEAFLET\n  // ═══════════════════════════════════════════════════════════════════════════════════\n  useEffect(() => {\n    /**\r\n     * Initialise la carte Leaflet si ce n'est pas déjà fait.\r\n     * Charge dynamiquement la librairie si nécessaire.\r\n     */\n    if (mapRef.current && !mapInitialized && typeof window !== 'undefined') {\n      // Charger Leaflet dynamiquement si absent\n      if (!window.L) {\n        const script = document.createElement('script');\n        script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\n        script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';\n        script.crossOrigin = '';\n\n        // Charger la feuille de style si absente\n        if (!document.querySelector('link[href*=\"leaflet.css\"]')) {\n          const link = document.createElement('link');\n          link.rel = 'stylesheet';\n          link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\n          link.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';\n          link.crossOrigin = '';\n          document.head.appendChild(link);\n        }\n        script.onload = initMap;\n        document.head.appendChild(script);\n      } else {\n        initMap();\n      }\n    }\n\n    /**\r\n     * Fonction d'initialisation de la carte.\r\n     * Centre la carte, ajoute la couche OSM et gère le clic utilisateur.\r\n     */\n    function initMap() {\n      try {\n        console.log(\"🗺️ Initialisation de la carte...\");\n        if (leafletMapRef.current) {\n          leafletMapRef.current.remove();\n        }\n        const defaultCenter = [48.3904, -4.4861];\n        leafletMapRef.current = window.L.map(mapRef.current).setView(defaultCenter, 10);\n        window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(leafletMapRef.current);\n\n        // Fonction pour activer le clic sur la carte\n        function enableMapClick() {\n          leafletMapRef.current.on('click', onMapClick);\n        }\n\n        // Fonction pour désactiver le clic sur la carte\n        function disableMapClick() {\n          leafletMapRef.current.off('click', onMapClick);\n        }\n\n        // Gestion du clic sur la carte\n        const onMapClick = function (e) {\n          const {\n            lat,\n            lng\n          } = e.latlng;\n          setFormData(prev => ({\n            ...prev,\n            latitude: lat.toFixed(6),\n            longitude: lng.toFixed(6)\n          }));\n\n          // Ajout ou déplacement du marqueur\n          if (marker) {\n            marker.setLatLng([lat, lng]);\n          } else {\n            const newMarker = window.L.marker([lat, lng]).addTo(leafletMapRef.current);\n            setMarker(newMarker);\n\n            // Ajoute un gestionnaire de clic sur le marqueur pour le supprimer\n            newMarker.on('click', function () {\n              leafletMapRef.current.removeLayer(newMarker);\n              setMarker(null);\n              setFormData(prev => ({\n                ...prev,\n                latitude: '',\n                longitude: ''\n              }));\n              enableMapClick(); // Réactive le clic sur la carte\n            });\n          }\n          disableMapClick(); // Désactive le clic sur la carte après sélection\n          console.log(`Position sélectionnée: ${lat.toFixed(6)}, ${lng.toFixed(6)}`);\n        };\n        enableMapClick();\n        setTimeout(() => {\n          if (leafletMapRef.current) {\n            leafletMapRef.current.invalidateSize();\n          }\n        }, 200);\n        setMapInitialized(true);\n        console.log(\"✅ Carte initialisée avec succès\");\n      } catch (error) {\n        console.error('Erreur lors de l\\'initialisation de la carte:', error);\n      }\n    }\n\n    // Nettoyage de la carte au démontage du composant\n    return () => {\n      if (leafletMapRef.current) {\n        leafletMapRef.current.remove();\n        leafletMapRef.current = null;\n      }\n    };\n  }, []); // Dépendances vides : exécution une seule fois au montage\n\n  // Mettre à jour la carte si les coordonnées sont modifiées manuellement\n  useEffect(() => {\n    if (mapInitialized && leafletMapRef.current && formData.latitude && formData.longitude) {\n      const lat = parseFloat(formData.latitude);\n      const lng = parseFloat(formData.longitude);\n      if (!isNaN(lat) && !isNaN(lng)) {\n        // Centre la carte sur les coordonnées saisies\n        leafletMapRef.current.setView([lat, lng], 12);\n\n        // Ajoute ou déplace le marqueur\n        if (marker) {\n          marker.setLatLng([lat, lng]);\n        } else {\n          const newMarker = window.L.marker([lat, lng]).addTo(leafletMapRef.current);\n          setMarker(newMarker);\n        }\n      }\n    }\n  }, [formData.latitude, formData.longitude, mapInitialized, marker]); // Ajout de mapInitialized et marker\n\n  // Filtrer les sous-types en fonction du type sélectionné\n  useEffect(() => {\n    if (formData.id_type_evenement) {\n      const filtered = sousTypesEvenement.filter(sousType => sousType.id_type_evenement === parseInt(formData.id_type_evenement));\n      setFilteredSousTypes(filtered);\n      // Réinitialiser le sous-type sélectionné si le type change\n      if (!filtered.find(st => st.id_sous_type_evenement === parseInt(formData.id_sous_type_evenement))) {\n        setFormData(prev => ({\n          ...prev,\n          id_sous_type_evenement: ''\n        }));\n      }\n    } else {\n      setFilteredSousTypes([]);\n      setFormData(prev => ({\n        ...prev,\n        id_sous_type_evenement: ''\n      }));\n    }\n  }, [formData.id_type_evenement, sousTypesEvenement, formData.id_sous_type_evenement]); // Ajout de formData.id_sous_type_evenement\n\n  // Afficher le champ de délai d'appareillage seulement si BSAA est coché\n  //const showDelaiAppareillage = formData.bsaa;\n\n  // Gérer les changements dans le formulaire\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n\n    // Pour les checkboxes, utiliser la valeur de \"checked\" au lieu de \"value\"\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n  };\n\n  // Valider le formulaire avant soumission\n  const validateForm = () => {\n    // Vérifier les champs obligatoires\n    if (!formData.titre || !formData.date_evenement || !formData.heure_evenement || !formData.id_type_evenement || !formData.description_globale || !formData.id_zone) {\n      setSubmitStatus({\n        type: 'error',\n        message: 'Veuillez remplir tous les champs obligatoires (marqués par *).'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  // Fonction pour gérer l'envoi du formulaire\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Valider le formulaire\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    setSubmitStatus(null);\n    try {\n      // Combiner la date et l'heure pour le backend\n      //const dateTimeString = `${formData.date_evenement}T${formData.heure_evenement}:00`;\n\n      // Créer une date locale\n      const localDate = new Date(`${formData.date_evenement}T${formData.heure_evenement}:00`);\n\n      // Convertir en UTC et formatter au format ISO\n      const dateTimeUTC = new Date(localDate.getTime() - localDate.getTimezoneOffset() * 60000).toISOString();\n      const rapport = {\n        titre: formData.titre,\n        date_evenement: dateTimeUTC,\n        description_globale: formData.description_globale,\n        id_operateur: authData.Opid,\n        id_type_evenement: formData.id_type_evenement ? parseInt(formData.id_type_evenement) : null,\n        id_sous_type_evenement: formData.id_sous_type_evenement ? parseInt(formData.id_sous_type_evenement) : null,\n        id_origine_evenement: formData.id_origine_evenement ? parseInt(formData.id_origine_evenement) : null\n      };\n\n      // Données associées pour les tables connexes\n      const metaData = {\n        cible: {\n          libelle: formData.libelle || null,\n          nom_cible: formData.nom_cible || null,\n          pavillon_cible: formData.pavillon_cible || null,\n          immatriculation: formData.immatriculation || null,\n          QuantiteProduit: formData.QuantiteProduit || null,\n          TypeProduit: formData.TypeProduit || null\n        },\n        localisation: {\n          id_zone: formData.id_zone ? parseInt(formData.id_zone) : null,\n          details_lieu: formData.details_lieu || null,\n          latitude: formData.latitude ? parseFloat(formData.latitude) : null,\n          longitude: formData.longitude ? parseFloat(formData.longitude) : null\n        },\n        meteo: {\n          direction_vent: formData.direction_vent || null,\n          force_vent: formData.force_vent ? parseInt(formData.force_vent) : null,\n          etat_mer: formData.etat_mer ? parseInt(formData.etat_mer) : null,\n          nebulosite: formData.nebulosite ? parseInt(formData.nebulosite) : null,\n          maree: formData.maree || null\n        },\n        alertes: {\n          cedre_alerte: formData.cedre_alerte ? 1 : 0,\n          cross_alerte: formData.cross_alerte ? 1 : 0,\n          photo: formData.photo ? 1 : 0,\n          message_polrep: formData.message_polrep ? 1 : 0,\n          derive_mothy: formData.derive_mothy ? 1 : 0,\n          polmar_terre: formData.polmar_terre ? 1 : 0,\n          smp: formData.smp ? 1 : 0,\n          bsaa: formData.bsaa ? 1 : 0,\n          sensible_proximite: formData.sensible_proximite ? 1 : 0,\n          delai_appareillage: formData.delai_appareillage || null,\n          moyen_proximite: formData.moyen_proximite || null,\n          risque_court_terme: formData.risque_court_terme || null,\n          risque_moyen_long_terme: formData.risque_moyen_long_terme || null,\n          moyen_depeche: formData.moyen_depeche || null,\n          moyen_marine_etat: formData.moyen_marine_etat || null\n        }\n      };\n      console.log(\"Données envoyées au backend:\", {\n        rapport,\n        metaData\n      });\n\n      // Envoi des données au backend\n      const response = await axios.post(`${API}/rapports`, {\n        rapport,\n        metaData\n      });\n      console.log('Rapport créé avec succès:', response.data);\n      setSubmitStatus({\n        type: 'success',\n        message: 'Rapport enregistré avec succès!'\n      });\n\n      // Réinitialisation du formulaire après succès\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erreur lors de la création du rapport:', error);\n      setSubmitStatus({\n        type: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Une erreur est survenue lors de l\\'enregistrement du rapport.'\n      });\n    } finally {\n      setIsSubmitting(false);\n\n      // Effacer le message de statut après 5 secondes si c'est un succès\n      if ((submitStatus === null || submitStatus === void 0 ? void 0 : submitStatus.type) === 'success') {\n        setTimeout(() => {\n          setSubmitStatus(null);\n        }, 5000);\n      }\n    }\n  };\n\n  // Fonction pour réinitialiser le formulaire\n  const resetForm = () => {\n    setFormData({\n      titre: '',\n      date_evenement: new Date().toISOString().split('T')[0],\n      heure_evenement: new Date().toISOString().split('T')[1].substring(0, 5),\n      description_globale: '',\n      id_type_evenement: '',\n      id_sous_type_evenement: '',\n      id_origine_evenement: '',\n      libelle: '',\n      nom_cible: '',\n      pavillon_cible: '',\n      id_zone: '',\n      details_lieu: '',\n      latitude: '',\n      longitude: '',\n      direction_vent: '',\n      force_vent: '',\n      etat_mer: '',\n      nebulosite: '',\n      maree: '',\n      cedre_alerte: false,\n      cross_alerte: false,\n      photo: false,\n      message_polrep: false,\n      derive_mothy: false,\n      polmar_terre: false,\n      smp: false,\n      bsaa: false,\n      sensible_proximite: false,\n      moyen_proximite: '',\n      risque_court_terme: '',\n      risque_moyen_long_terme: '',\n      moyen_marine_etat: '',\n      moyen_depeche: '',\n      delai_appareillage: '',\n      immatriculation: '',\n      QuantiteProduit: '',\n      TypeProduit: ''\n    });\n\n    // Supprimer le marqueur de la carte\n    if (marker && leafletMapRef.current) {\n      leafletMapRef.current.removeLayer(marker);\n      setMarker(null);\n    }\n\n    // Recentrer la carte\n    if (leafletMapRef.current) {\n      leafletMapRef.current.setView([48.3904, -4.4861], 10);\n    }\n  };\n\n  // Reste du code (rendu du formulaire)...\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"rapport-container\",\n    initial: {\n      opacity: 0,\n      y: 30\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.6,\n      ease: \"easeOut\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"rapport-header\",\n      initial: {\n        opacity: 0,\n        y: -20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        delay: 0.2,\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rapport-subtitle\",\n        style: {\n          fontSize: '0.9em',\n          fontStyle: 'italic'\n        },\n        children: \"Compl\\xE9tez tous les champs obligatoires (*) pour soumettre un nouveau rapport\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.form, {\n      className: \"rapport-form\",\n      onSubmit: handleSubmit,\n      initial: {\n        opacity: 0,\n        scale: 0.98\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        delay: 0.3,\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: -20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.4\n        },\n        children: /*#__PURE__*/_jsxDEV(GeneralInfoSection, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(ClassificationSection, {\n          formData: formData,\n          handleChange: handleChange,\n          typesEvenement: typesEvenement,\n          filteredSousTypes: filteredSousTypes,\n          originesEvenement: originesEvenement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: -20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.6\n        },\n        children: /*#__PURE__*/_jsxDEV(TargetSection, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.7\n        },\n        children: /*#__PURE__*/_jsxDEV(LocalisationSection, {\n          formData: formData,\n          handleChange: handleChange,\n          mapRef: mapRef,\n          mapInitialized: mapInitialized,\n          zonesGeographiques: zonesGeographiques\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: -20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.8\n        },\n        children: /*#__PURE__*/_jsxDEV(MeteoSection, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          delay: 0.9\n        },\n        children: /*#__PURE__*/_jsxDEV(AlertesSection, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 1.0\n        },\n        children: /*#__PURE__*/_jsxDEV(DescriptionSection, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          scale: 0.95\n        },\n        animate: {\n          opacity: 1,\n          scale: 1\n        },\n        transition: {\n          delay: 1.1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormActions, {\n          isSubmitting: isSubmitting,\n          handleSubmit: handleSubmit,\n          resetForm: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: submitStatus && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: `status-message ${submitStatus.type}`,\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: 20\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: submitStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 557,\n    columnNumber: 5\n  }, this);\n};\n_s(AjouterRapport, \"Qinr4noJY6BMNItGMHvxaJwLpwE=\", false, function () {\n  return [useAuth];\n});\n_c = AjouterRapport;\nexport default AjouterRapport;\nvar _c;\n$RefreshReg$(_c, \"AjouterRapport\");","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","axios","motion","AnimatePresence","GeneralInfoSection","ClassificationSection","TargetSection","LocalisationSection","MeteoSection","AlertesSection","DescriptionSection","FormActions","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","AjouterRapport","_s","authData","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","mapRef","leafletMapRef","mapInitialized","setMapInitialized","marker","setMarker","formData","setFormData","now","Date","formattedDate","toISOString","split","hours","String","getHours","padStart","minutes","getMinutes","formattedTime","titre","date_evenement","heure_evenement","description_globale","id_type_evenement","id_sous_type_evenement","id_origine_evenement","libelle","nom_cible","pavillon_cible","id_zone","details_lieu","latitude","longitude","direction_vent","force_vent","etat_mer","nebulosite","maree","cedre_alerte","cross_alerte","photo","message_polrep","derive_mothy","polmar_terre","smp","bsaa","sensible_proximite","moyen_proximite","risque_court_terme","risque_moyen_long_terme","moyen_marine_etat","moyen_depeche","delai_appareillage","typesEvenement","setTypesEvenement","sousTypesEvenement","setSousTypesEvenement","originesEvenement","setOriginesEvenement","zonesGeographiques","setZonesGeographiques","filteredSousTypes","setFilteredSousTypes","fetchOptionsData","typesRes","sousTypesRes","originesRes","zonesRes","Promise","all","get","data","error","console","current","window","L","script","document","createElement","src","integrity","crossOrigin","querySelector","link","rel","href","head","appendChild","onload","initMap","log","remove","defaultCenter","map","setView","tileLayer","attribution","addTo","enableMapClick","on","onMapClick","disableMapClick","off","e","lat","lng","latlng","prev","toFixed","setLatLng","newMarker","removeLayer","setTimeout","invalidateSize","parseFloat","isNaN","filtered","filter","sousType","parseInt","find","st","handleChange","name","value","type","checked","target","newValue","validateForm","message","handleSubmit","preventDefault","localDate","dateTimeUTC","getTime","getTimezoneOffset","rapport","id_operateur","Opid","metaData","cible","immatriculation","QuantiteProduit","TypeProduit","localisation","meteo","alertes","response","post","resetForm","_error$response","_error$response$data","substring","div","className","initial","opacity","y","animate","transition","duration","ease","children","delay","style","fontSize","fontStyle","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","scale","x","exit","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/AjouterRapport.js"],"sourcesContent":["/**\r\n==================================================================================\r\n==================================================================================\r\n@file AjouterRapport.js\r\n@location frontend/src/components/pages/AjouterRapport.js\r\n@description Composant de création d'un nouveau rapport d'incident maritime pour l'application MarineV3\r\nFONCTIONNALITÉS PRINCIPALES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Formulaire multi-sections pour la saisie complète d'un rapport d'incident\r\n• Carte interactive Leaflet pour la sélection de localisation géographique\r\n• Validation des données avant soumission avec feedback utilisateur\r\n• Gestion des types/sous-types d'événements avec filtrage dynamique\r\n• Sauvegarde automatique des coordonnées lors du clic sur la carte\r\n• Interface utilisateur animée avec Framer Motion\r\n• Réinitialisation complète du formulaire après soumission réussie\r\n\r\nSTRUCTURE DU FORMULAIRE :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Section Générale : Titre, date, heure, description globale\r\n• Section Classification : Type d'événement, sous-type, origine\r\n• Section Cible : Informations sur le navire/objet concerné\r\n• Section Localisation : Zone géographique, coordonnées GPS, carte interactive\r\n• Section Météo : Conditions météorologiques (vent, mer, marée, etc.)\r\n• Section Alertes : Contacts, moyens déployés, délais d'intervention\r\n• Section Description : Description détaillée de l'incident\r\n\r\nFONCTIONNALITÉS AVANCÉES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• Carte Leaflet dynamique avec placement/déplacement de marqueurs\r\n• Synchronisation bidirectionnelle coordonnées manuelles ↔ carte\r\n• Filtrage automatique des sous-types selon le type d'événement sélectionné\r\n• Gestion des fuseaux horaires (conversion local → UTC)\r\n• Validation stricte des champs obligatoires\r\n• Messages de statut (succès/erreur) avec disparition automatique\r\n\r\nDÉPENDANCES :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• React (hooks: useState, useEffect, useRef)\r\n• AuthContext (authentification utilisateur)\r\n• Axios (requêtes HTTP vers l'API)\r\n• Leaflet (cartographie interactive)\r\n• Framer Motion (animations et transitions)\r\n• Composants modulaires pour chaque section du formulaire\r\n\r\nAPI UTILISÉE :\r\n────────────────────────────────────────────────────────────────────────────────\r\n• GET /rapports/type-evenement - Types d'événements\r\n• GET /rapports/sous-type-pollution - Sous-types d'événements\r\n• GET /rapports/origine-evenement - Origines des événements\r\n• GET /rapports/zone-geographique - Zones géographiques\r\n• POST /rapports - Création d'un nouveau rapport\r\n@author Oscar Vieujean\r\n==================================================================================\r\n*/\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport '../css/AjouterRapport.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\n// Import des composants modulaires pour chaque section du formulaire\r\nimport GeneralInfoSection from './AjouterRapport/GeneralInfoSection';\r\nimport ClassificationSection from './AjouterRapport/ClassificationSection';\r\nimport TargetSection from './AjouterRapport/TargetSection';\r\nimport LocalisationSection from './AjouterRapport/LocalisationSection';\r\nimport MeteoSection from './AjouterRapport/MeteoSection';\r\nimport AlertesSection from './AjouterRapport/AlertesSection';\r\nimport DescriptionSection from './AjouterRapport/DescriptionSection';\r\nimport FormActions from './AjouterRapport/FormActions';\r\n\r\n// URL de base de l'API depuis les variables d'environnement\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\nconst AjouterRapport = () => {\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  // HOOKS ET ÉTAT DU COMPOSANT\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  \r\n  // Récupération des données d'authentification de l'utilisateur connecté\r\n  const { authData } = useAuth();\r\n  \r\n  // États pour la gestion de la soumission du formulaire\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState(null);\r\n  \r\n  // Références pour la gestion de la carte Leaflet\r\n  const mapRef = useRef(null);          // Référence vers l'élément DOM de la carte\r\n  const leafletMapRef = useRef(null);   // Référence vers l'instance Leaflet\r\n  const [mapInitialized, setMapInitialized] = useState(false);\r\n  const [marker, setMarker] = useState(null); // Marqueur de position sur la carte\r\n\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  // INITIALISATION DU FORMULAIRE AVEC VALEURS PAR DÉFAUT\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  \r\n  const [formData, setFormData] = useState(() => {\r\n    // Récupération de la date et heure actuelles en fuseau horaire local\r\n    const now = new Date();\r\n\r\n    // Formatage de la date au format YYYY-MM-DD pour l'input date HTML\r\n    const formattedDate = now.toISOString().split('T')[0];\r\n\r\n    // Formatage de l'heure au format HH:MM en fuseau horaire local\r\n    const hours = String(now.getHours()).padStart(2, '0');\r\n    const minutes = String(now.getMinutes()).padStart(2, '0');\r\n    const formattedTime = `${hours}:${minutes}`;\r\n\r\n    return {\r\n      // Informations générales de l'événement\r\n      titre: '',\r\n      date_evenement: formattedDate,\r\n      heure_evenement: formattedTime,\r\n      description_globale: '',\r\n      \r\n      // Classification de l'événement\r\n      id_type_evenement: '',\r\n      id_sous_type_evenement: '',\r\n      id_origine_evenement: '',\r\n      \r\n      // Informations sur la cible de l'événement (navire, objet, etc.)\r\n      libelle: '',\r\n      nom_cible: '',\r\n      pavillon_cible: '',\r\n      \r\n      // Localisation géographique de l'incident\r\n      id_zone: '',\r\n      details_lieu: '',\r\n      latitude: '',\r\n      longitude: '',\r\n      \r\n      // Conditions météorologiques au moment de l'incident\r\n      direction_vent: '',\r\n      force_vent: '',\r\n      etat_mer: '',\r\n      nebulosite: '',\r\n      maree: '',\r\n      \r\n      // Alertes, contacts et moyens mobilisés (valeurs booléennes)\r\n      cedre_alerte: false,\r\n      cross_alerte: false,\r\n      photo: false,\r\n      message_polrep: false,\r\n      derive_mothy: false,\r\n      polmar_terre: false,\r\n      smp: false,\r\n      bsaa: false,\r\n      sensible_proximite: false,\r\n      \r\n      // Informations complémentaires sur les moyens et risques\r\n      moyen_proximite: '',\r\n      risque_court_terme: '',\r\n      risque_moyen_long_terme: '',\r\n      moyen_marine_etat: '',\r\n      moyen_depeche: '',\r\n      delai_appareillage: ''\r\n    };\r\n  });\r\n\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  // ÉTATS POUR LES LISTES DÉROULANTES (OPTIONS DU FORMULAIRE)\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  \r\n  const [typesEvenement, setTypesEvenement] = useState([]);        // Types d'événements disponibles\r\n  const [sousTypesEvenement, setSousTypesEvenement] = useState([]); // Sous-types d'événements\r\n  const [originesEvenement, setOriginesEvenement] = useState([]);   // Origines possibles des événements\r\n  const [zonesGeographiques, setZonesGeographiques] = useState([]); // Zones géographiques prédéfinies\r\n  const [filteredSousTypes, setFilteredSousTypes] = useState([]);   // Sous-types filtrés selon le type sélectionné\r\n\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  // RÉCUPÉRATION DES DONNÉES DE RÉFÉRENCE DEPUIS L'API\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  useEffect(() => {\r\n    const fetchOptionsData = async () => {\r\n      try {\r\n        // Récupération parallèle de toutes les données de référence nécessaires au formulaire\r\n        const [typesRes, sousTypesRes, originesRes, zonesRes] = await Promise.all([\r\n          axios.get(`${API}/rapports/type-evenement`),      // Types d'événements\r\n          axios.get(`${API}/rapports/sous-type-pollution`), // Sous-types de pollution\r\n          axios.get(`${API}/rapports/origine-evenement`),   // Origines des événements\r\n          axios.get(`${API}/rapports/zone-geographique`)    // Zones géographiques\r\n        ]);\r\n\r\n        // Mise à jour des états avec les données récupérées\r\n        setTypesEvenement(typesRes.data);\r\n        setSousTypesEvenement(sousTypesRes.data);\r\n        setOriginesEvenement(originesRes.data);\r\n        setZonesGeographiques(zonesRes.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des données:', error);\r\n      }\r\n    };\r\n\r\n    fetchOptionsData();\r\n  }, []); // Exécution unique au montage du composant\r\n\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  // INITIALISATION ET GESTION DE LA CARTE LEAFLET\r\n  // ═══════════════════════════════════════════════════════════════════════════════════\r\n  useEffect(() => {\r\n    /**\r\n     * Initialise la carte Leaflet si ce n'est pas déjà fait.\r\n     * Charge dynamiquement la librairie si nécessaire.\r\n     */\r\n    if (mapRef.current && !mapInitialized && typeof window !== 'undefined') {\r\n      // Charger Leaflet dynamiquement si absent\r\n      if (!window.L) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';\r\n        script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';\r\n        script.crossOrigin = '';\r\n\r\n        // Charger la feuille de style si absente\r\n        if (!document.querySelector('link[href*=\"leaflet.css\"]')) {\r\n          const link = document.createElement('link');\r\n          link.rel = 'stylesheet';\r\n          link.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';\r\n          link.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';\r\n          link.crossOrigin = '';\r\n          document.head.appendChild(link);\r\n        }\r\n\r\n        script.onload = initMap;\r\n        document.head.appendChild(script);\r\n      } else {\r\n        initMap();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fonction d'initialisation de la carte.\r\n     * Centre la carte, ajoute la couche OSM et gère le clic utilisateur.\r\n     */\r\n    function initMap() {\r\n      try {\r\n        console.log(\"🗺️ Initialisation de la carte...\");\r\n\r\n        if (leafletMapRef.current) {\r\n          leafletMapRef.current.remove();\r\n        }\r\n\r\n        const defaultCenter = [48.3904, -4.4861];\r\n        leafletMapRef.current = window.L.map(mapRef.current).setView(defaultCenter, 10);\r\n\r\n        window.L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(leafletMapRef.current);\r\n\r\n        // Fonction pour activer le clic sur la carte\r\n        function enableMapClick() {\r\n          leafletMapRef.current.on('click', onMapClick);\r\n        }\r\n\r\n        // Fonction pour désactiver le clic sur la carte\r\n        function disableMapClick() {\r\n          leafletMapRef.current.off('click', onMapClick);\r\n        }\r\n\r\n        // Gestion du clic sur la carte\r\n        const onMapClick = function (e) {\r\n          const { lat, lng } = e.latlng;\r\n\r\n          setFormData(prev => ({\r\n            ...prev,\r\n            latitude: lat.toFixed(6),\r\n            longitude: lng.toFixed(6)\r\n          }));\r\n\r\n          // Ajout ou déplacement du marqueur\r\n          if (marker) {\r\n            marker.setLatLng([lat, lng]);\r\n          } else {\r\n            const newMarker = window.L.marker([lat, lng]).addTo(leafletMapRef.current);\r\n            setMarker(newMarker);\r\n\r\n            // Ajoute un gestionnaire de clic sur le marqueur pour le supprimer\r\n            newMarker.on('click', function () {\r\n              leafletMapRef.current.removeLayer(newMarker);\r\n              setMarker(null);\r\n              setFormData(prev => ({\r\n                ...prev,\r\n                latitude: '',\r\n                longitude: ''\r\n              }));\r\n              enableMapClick(); // Réactive le clic sur la carte\r\n            });\r\n          }\r\n\r\n          disableMapClick(); // Désactive le clic sur la carte après sélection\r\n          console.log(`Position sélectionnée: ${lat.toFixed(6)}, ${lng.toFixed(6)}`);\r\n        };\r\n\r\n        enableMapClick();\r\n\r\n        setTimeout(() => {\r\n          if (leafletMapRef.current) {\r\n            leafletMapRef.current.invalidateSize();\r\n          }\r\n        }, 200);\r\n\r\n        setMapInitialized(true);\r\n        console.log(\"✅ Carte initialisée avec succès\");\r\n      } catch (error) {\r\n        console.error('Erreur lors de l\\'initialisation de la carte:', error);\r\n      }\r\n    }\r\n\r\n    // Nettoyage de la carte au démontage du composant\r\n    return () => {\r\n      if (leafletMapRef.current) {\r\n        leafletMapRef.current.remove();\r\n        leafletMapRef.current = null;\r\n      }\r\n    };\r\n  }, []); // Dépendances vides : exécution une seule fois au montage\r\n\r\n  // Mettre à jour la carte si les coordonnées sont modifiées manuellement\r\n  useEffect(() => {\r\n    if (\r\n      mapInitialized &&\r\n      leafletMapRef.current &&\r\n      formData.latitude &&\r\n      formData.longitude\r\n    ) {\r\n      const lat = parseFloat(formData.latitude);\r\n      const lng = parseFloat(formData.longitude);\r\n\r\n      if (!isNaN(lat) && !isNaN(lng)) {\r\n        // Centre la carte sur les coordonnées saisies\r\n        leafletMapRef.current.setView([lat, lng], 12);\r\n\r\n        // Ajoute ou déplace le marqueur\r\n        if (marker) {\r\n          marker.setLatLng([lat, lng]);\r\n        } else {\r\n          const newMarker = window.L.marker([lat, lng]).addTo(leafletMapRef.current);\r\n          setMarker(newMarker);\r\n        }\r\n      }\r\n    }\r\n  }, [formData.latitude, formData.longitude, mapInitialized, marker]); // Ajout de mapInitialized et marker\r\n\r\n  // Filtrer les sous-types en fonction du type sélectionné\r\n  useEffect(() => {\r\n    if (formData.id_type_evenement) {\r\n      const filtered = sousTypesEvenement.filter(\r\n        sousType => sousType.id_type_evenement === parseInt(formData.id_type_evenement)\r\n      );\r\n      setFilteredSousTypes(filtered);\r\n      // Réinitialiser le sous-type sélectionné si le type change\r\n      if (!filtered.find(st => st.id_sous_type_evenement === parseInt(formData.id_sous_type_evenement))) {\r\n        setFormData(prev => ({ ...prev, id_sous_type_evenement: '' }));\r\n      }\r\n    } else {\r\n      setFilteredSousTypes([]);\r\n      setFormData(prev => ({ ...prev, id_sous_type_evenement: '' }));\r\n    }\r\n  }, [formData.id_type_evenement, sousTypesEvenement, formData.id_sous_type_evenement]); // Ajout de formData.id_sous_type_evenement\r\n\r\n  // Afficher le champ de délai d'appareillage seulement si BSAA est coché\r\n  //const showDelaiAppareillage = formData.bsaa;\r\n\r\n  // Gérer les changements dans le formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    // Pour les checkboxes, utiliser la valeur de \"checked\" au lieu de \"value\"\r\n    const newValue = type === 'checkbox' ? checked : value;\r\n\r\n    setFormData(prev => ({ ...prev, [name]: newValue }));\r\n  };\r\n\r\n  // Valider le formulaire avant soumission\r\n  const validateForm = () => {\r\n    // Vérifier les champs obligatoires\r\n    if (!formData.titre || !formData.date_evenement || !formData.heure_evenement ||\r\n      !formData.id_type_evenement || !formData.description_globale || !formData.id_zone) {\r\n      setSubmitStatus({\r\n        type: 'error',\r\n        message: 'Veuillez remplir tous les champs obligatoires (marqués par *).'\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Fonction pour gérer l'envoi du formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Valider le formulaire\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    setSubmitStatus(null);\r\n\r\n    try {\r\n      // Combiner la date et l'heure pour le backend\r\n      //const dateTimeString = `${formData.date_evenement}T${formData.heure_evenement}:00`;\r\n\r\n      // Créer une date locale\r\n      const localDate = new Date(`${formData.date_evenement}T${formData.heure_evenement}:00`);\r\n\r\n      // Convertir en UTC et formatter au format ISO\r\n      const dateTimeUTC = new Date(localDate.getTime() - localDate.getTimezoneOffset() * 60000).toISOString();\r\n\r\n\r\n\r\n\r\n\r\n      const rapport = {\r\n        titre: formData.titre,\r\n        date_evenement: dateTimeUTC,\r\n        description_globale: formData.description_globale,\r\n        id_operateur: authData.Opid,\r\n        id_type_evenement: formData.id_type_evenement ? parseInt(formData.id_type_evenement) : null,\r\n        id_sous_type_evenement: formData.id_sous_type_evenement ? parseInt(formData.id_sous_type_evenement) : null,\r\n        id_origine_evenement: formData.id_origine_evenement ? parseInt(formData.id_origine_evenement) : null,\r\n      };\r\n\r\n\r\n      // Données associées pour les tables connexes\r\n      const metaData = {\r\n        cible: {\r\n          libelle: formData.libelle || null,\r\n          nom_cible: formData.nom_cible || null,\r\n          pavillon_cible: formData.pavillon_cible || null,\r\n          immatriculation: formData.immatriculation || null,\r\n          QuantiteProduit: formData.QuantiteProduit || null,\r\n          TypeProduit: formData.TypeProduit || null,\r\n        },\r\n        localisation: {\r\n          id_zone: formData.id_zone ? parseInt(formData.id_zone) : null,\r\n          details_lieu: formData.details_lieu || null,\r\n          latitude: formData.latitude ? parseFloat(formData.latitude) : null,\r\n          longitude: formData.longitude ? parseFloat(formData.longitude) : null,\r\n        },\r\n        meteo: {\r\n          direction_vent: formData.direction_vent || null,\r\n          force_vent: formData.force_vent ? parseInt(formData.force_vent) : null,\r\n          etat_mer: formData.etat_mer ? parseInt(formData.etat_mer) : null,\r\n          nebulosite: formData.nebulosite ? parseInt(formData.nebulosite) : null,\r\n          maree: formData.maree || null,\r\n        },\r\n        alertes: {\r\n          cedre_alerte: formData.cedre_alerte ? 1 : 0,\r\n          cross_alerte: formData.cross_alerte ? 1 : 0,\r\n          photo: formData.photo ? 1 : 0,\r\n          message_polrep: formData.message_polrep ? 1 : 0,\r\n          derive_mothy: formData.derive_mothy ? 1 : 0,\r\n          polmar_terre: formData.polmar_terre ? 1 : 0,\r\n          smp: formData.smp ? 1 : 0,\r\n          bsaa: formData.bsaa ? 1 : 0,\r\n          sensible_proximite: formData.sensible_proximite ? 1 : 0,\r\n          delai_appareillage: formData.delai_appareillage || null,\r\n          moyen_proximite: formData.moyen_proximite || null,\r\n          risque_court_terme: formData.risque_court_terme || null,\r\n          risque_moyen_long_terme: formData.risque_moyen_long_terme || null,\r\n          moyen_depeche: formData.moyen_depeche || null,\r\n          moyen_marine_etat: formData.moyen_marine_etat || null,\r\n        }\r\n      };\r\n\r\n      console.log(\"Données envoyées au backend:\", { rapport, metaData });\r\n\r\n      // Envoi des données au backend\r\n      const response = await axios.post(`${API}/rapports`, {\r\n        rapport,\r\n        metaData\r\n      });\r\n\r\n\r\n\r\n\r\n      console.log('Rapport créé avec succès:', response.data);\r\n      setSubmitStatus({ type: 'success', message: 'Rapport enregistré avec succès!' });\r\n\r\n      // Réinitialisation du formulaire après succès\r\n      resetForm();\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création du rapport:', error);\r\n      setSubmitStatus({\r\n        type: 'error',\r\n        message: error.response?.data?.message || 'Une erreur est survenue lors de l\\'enregistrement du rapport.'\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n\r\n      // Effacer le message de statut après 5 secondes si c'est un succès\r\n      if (submitStatus?.type === 'success') {\r\n        setTimeout(() => {\r\n          setSubmitStatus(null);\r\n        }, 5000);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fonction pour réinitialiser le formulaire\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      date_evenement: new Date().toISOString().split('T')[0],\r\n      heure_evenement: new Date().toISOString().split('T')[1].substring(0, 5),\r\n      description_globale: '',\r\n      id_type_evenement: '',\r\n      id_sous_type_evenement: '',\r\n      id_origine_evenement: '',\r\n      libelle: '',\r\n      nom_cible: '',\r\n      pavillon_cible: '',\r\n      id_zone: '',\r\n      details_lieu: '',\r\n      latitude: '',\r\n      longitude: '',\r\n      direction_vent: '',\r\n      force_vent: '',\r\n      etat_mer: '',\r\n      nebulosite: '',\r\n      maree: '',\r\n      cedre_alerte: false,\r\n      cross_alerte: false,\r\n      photo: false,\r\n      message_polrep: false,\r\n      derive_mothy: false,\r\n      polmar_terre: false,\r\n      smp: false,\r\n      bsaa: false,\r\n      sensible_proximite: false,\r\n      moyen_proximite: '',\r\n      risque_court_terme: '',\r\n      risque_moyen_long_terme: '',\r\n      moyen_marine_etat: '',\r\n      moyen_depeche: '',\r\n      delai_appareillage: '',\r\n      immatriculation: '',\r\n      QuantiteProduit: '',\r\n      TypeProduit: ''\r\n    });\r\n\r\n    // Supprimer le marqueur de la carte\r\n    if (marker && leafletMapRef.current) {\r\n      leafletMapRef.current.removeLayer(marker);\r\n      setMarker(null);\r\n    }\r\n\r\n    // Recentrer la carte\r\n    if (leafletMapRef.current) {\r\n      leafletMapRef.current.setView([48.3904, -4.4861], 10);\r\n    }\r\n  };\r\n\r\n  // Reste du code (rendu du formulaire)...\r\n  return (\r\n    <motion.div\r\n      className=\"rapport-container\"\r\n      initial={{ opacity: 0, y: 30 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n    >\r\n      <motion.div\r\n        className=\"rapport-header\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.2, duration: 0.5 }}\r\n      >\r\n        <p className=\"rapport-subtitle\" style={{ fontSize: '0.9em', fontStyle: 'italic' }}>\r\n          Complétez tous les champs obligatoires (*) pour soumettre un nouveau rapport\r\n        </p>\r\n      </motion.div>\r\n\r\n      <motion.form\r\n        className=\"rapport-form\"\r\n        onSubmit={handleSubmit}\r\n        initial={{ opacity: 0, scale: 0.98 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ delay: 0.3, duration: 0.5 }}\r\n      >\r\n        <motion.div initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.4 }}>\r\n          <GeneralInfoSection formData={formData} handleChange={handleChange} />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, x: 20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.5 }}>\r\n          <ClassificationSection\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            typesEvenement={typesEvenement}\r\n            filteredSousTypes={filteredSousTypes}\r\n            originesEvenement={originesEvenement}\r\n          />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.6 }}>\r\n          <TargetSection formData={formData} handleChange={handleChange} />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, x: 20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.7 }}>\r\n          <LocalisationSection\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            mapRef={mapRef}\r\n            mapInitialized={mapInitialized}\r\n            zonesGeographiques={zonesGeographiques}\r\n          />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.8 }}>\r\n          <MeteoSection formData={formData} handleChange={handleChange} />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, x: 20 }} animate={{ opacity: 1, x: 0 }} transition={{ delay: 0.9 }}>\r\n          <AlertesSection formData={formData} handleChange={handleChange} />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ delay: 1.0 }}>\r\n          <DescriptionSection formData={formData} handleChange={handleChange} />\r\n        </motion.div>\r\n        <motion.div initial={{ opacity: 0, scale: 0.95 }} animate={{ opacity: 1, scale: 1 }} transition={{ delay: 1.1 }}>\r\n          <FormActions\r\n            isSubmitting={isSubmitting}\r\n            handleSubmit={handleSubmit}\r\n            resetForm={resetForm}\r\n          />\r\n        </motion.div>\r\n      </motion.form>\r\n      <br />\r\n      <AnimatePresence>\r\n        {submitStatus && (\r\n          <motion.div\r\n            className={`status-message ${submitStatus.type}`}\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0, y: 20 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            {submitStatus.message}\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AjouterRapport;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,OAAO,0BAA0B;AACjC,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;;AAEvD;AACA,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,qBAAqB,MAAM,wCAAwC;AAC1E,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,WAAW,MAAM,8BAA8B;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAEzC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA;EACA;;EAEA;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGpB,OAAO,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM4B,MAAM,GAAG1B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAU;EACtC,MAAM2B,aAAa,GAAG3B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAG;EACtC,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA;EACA;;EAEA,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMoC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;;IAEtB;IACA,MAAMC,aAAa,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErD;IACA,MAAMC,KAAK,GAAGC,MAAM,CAACN,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACrD,MAAMC,OAAO,GAAGH,MAAM,CAACN,GAAG,CAACU,UAAU,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMG,aAAa,GAAG,GAAGN,KAAK,IAAII,OAAO,EAAE;IAE3C,OAAO;MACL;MACAG,KAAK,EAAE,EAAE;MACTC,cAAc,EAAEX,aAAa;MAC7BY,eAAe,EAAEH,aAAa;MAC9BI,mBAAmB,EAAE,EAAE;MAEvB;MACAC,iBAAiB,EAAE,EAAE;MACrBC,sBAAsB,EAAE,EAAE;MAC1BC,oBAAoB,EAAE,EAAE;MAExB;MACAC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,EAAE;MAElB;MACAC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MAEb;MACAC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MAET;MACAC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,KAAK;MACZC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,KAAK;MACnBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,kBAAkB,EAAE,KAAK;MAEzB;MACAC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE,EAAE;MACtBC,uBAAuB,EAAE,EAAE;MAC3BC,iBAAiB,EAAE,EAAE;MACrBC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAQ;EACjE,MAAM,CAACoF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAACsF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;EAClE,MAAM,CAACwF,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClE,MAAM,CAAC0F,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3F,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;;EAElE;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACd,MAAM2F,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA,MAAM,CAACC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACxE9F,KAAK,CAAC+F,GAAG,CAAC,GAAGlF,GAAG,0BAA0B,CAAC;QAAO;QAClDb,KAAK,CAAC+F,GAAG,CAAC,GAAGlF,GAAG,+BAA+B,CAAC;QAAE;QAClDb,KAAK,CAAC+F,GAAG,CAAC,GAAGlF,GAAG,6BAA6B,CAAC;QAAI;QAClDb,KAAK,CAAC+F,GAAG,CAAC,GAAGlF,GAAG,6BAA6B,CAAC,CAAI;QAAA,CACnD,CAAC;;QAEF;QACAkE,iBAAiB,CAACU,QAAQ,CAACO,IAAI,CAAC;QAChCf,qBAAqB,CAACS,YAAY,CAACM,IAAI,CAAC;QACxCb,oBAAoB,CAACQ,WAAW,CAACK,IAAI,CAAC;QACtCX,qBAAqB,CAACO,QAAQ,CAACI,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACrE;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA;EACA;EACA3F,SAAS,CAAC,MAAM;IACd;AACJ;AACA;AACA;IACI,IAAI2B,MAAM,CAAC2E,OAAO,IAAI,CAACzE,cAAc,IAAI,OAAO0E,MAAM,KAAK,WAAW,EAAE;MACtE;MACA,IAAI,CAACA,MAAM,CAACC,CAAC,EAAE;QACb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,GAAG,GAAG,iDAAiD;QAC9DH,MAAM,CAACI,SAAS,GAAG,qDAAqD;QACxEJ,MAAM,CAACK,WAAW,GAAG,EAAE;;QAEvB;QACA,IAAI,CAACJ,QAAQ,CAACK,aAAa,CAAC,2BAA2B,CAAC,EAAE;UACxD,MAAMC,IAAI,GAAGN,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;UAC3CK,IAAI,CAACC,GAAG,GAAG,YAAY;UACvBD,IAAI,CAACE,IAAI,GAAG,kDAAkD;UAC9DF,IAAI,CAACH,SAAS,GAAG,qDAAqD;UACtEG,IAAI,CAACF,WAAW,GAAG,EAAE;UACrBJ,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACJ,IAAI,CAAC;QACjC;QAEAP,MAAM,CAACY,MAAM,GAAGC,OAAO;QACvBZ,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,MAAM,CAAC;MACnC,CAAC,MAAM;QACLa,OAAO,CAAC,CAAC;MACX;IACF;;IAEA;AACJ;AACA;AACA;IACI,SAASA,OAAOA,CAAA,EAAG;MACjB,IAAI;QACFjB,OAAO,CAACkB,GAAG,CAAC,mCAAmC,CAAC;QAEhD,IAAI3F,aAAa,CAAC0E,OAAO,EAAE;UACzB1E,aAAa,CAAC0E,OAAO,CAACkB,MAAM,CAAC,CAAC;QAChC;QAEA,MAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;QACxC7F,aAAa,CAAC0E,OAAO,GAAGC,MAAM,CAACC,CAAC,CAACkB,GAAG,CAAC/F,MAAM,CAAC2E,OAAO,CAAC,CAACqB,OAAO,CAACF,aAAa,EAAE,EAAE,CAAC;QAE/ElB,MAAM,CAACC,CAAC,CAACoB,SAAS,CAAC,oDAAoD,EAAE;UACvEC,WAAW,EAAE;QACf,CAAC,CAAC,CAACC,KAAK,CAAClG,aAAa,CAAC0E,OAAO,CAAC;;QAE/B;QACA,SAASyB,cAAcA,CAAA,EAAG;UACxBnG,aAAa,CAAC0E,OAAO,CAAC0B,EAAE,CAAC,OAAO,EAAEC,UAAU,CAAC;QAC/C;;QAEA;QACA,SAASC,eAAeA,CAAA,EAAG;UACzBtG,aAAa,CAAC0E,OAAO,CAAC6B,GAAG,CAAC,OAAO,EAAEF,UAAU,CAAC;QAChD;;QAEA;QACA,MAAMA,UAAU,GAAG,SAAAA,CAAUG,CAAC,EAAE;UAC9B,MAAM;YAAEC,GAAG;YAAEC;UAAI,CAAC,GAAGF,CAAC,CAACG,MAAM;UAE7BrG,WAAW,CAACsG,IAAI,KAAK;YACnB,GAAGA,IAAI;YACP7E,QAAQ,EAAE0E,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;YACxB7E,SAAS,EAAE0E,GAAG,CAACG,OAAO,CAAC,CAAC;UAC1B,CAAC,CAAC,CAAC;;UAEH;UACA,IAAI1G,MAAM,EAAE;YACVA,MAAM,CAAC2G,SAAS,CAAC,CAACL,GAAG,EAAEC,GAAG,CAAC,CAAC;UAC9B,CAAC,MAAM;YACL,MAAMK,SAAS,GAAGpC,MAAM,CAACC,CAAC,CAACzE,MAAM,CAAC,CAACsG,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACR,KAAK,CAAClG,aAAa,CAAC0E,OAAO,CAAC;YAC1EtE,SAAS,CAAC2G,SAAS,CAAC;;YAEpB;YACAA,SAAS,CAACX,EAAE,CAAC,OAAO,EAAE,YAAY;cAChCpG,aAAa,CAAC0E,OAAO,CAACsC,WAAW,CAACD,SAAS,CAAC;cAC5C3G,SAAS,CAAC,IAAI,CAAC;cACfE,WAAW,CAACsG,IAAI,KAAK;gBACnB,GAAGA,IAAI;gBACP7E,QAAQ,EAAE,EAAE;gBACZC,SAAS,EAAE;cACb,CAAC,CAAC,CAAC;cACHmE,cAAc,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC,CAAC;UACJ;UAEAG,eAAe,CAAC,CAAC,CAAC,CAAC;UACnB7B,OAAO,CAACkB,GAAG,CAAC,0BAA0Bc,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,KAAKH,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5E,CAAC;QAEDV,cAAc,CAAC,CAAC;QAEhBc,UAAU,CAAC,MAAM;UACf,IAAIjH,aAAa,CAAC0E,OAAO,EAAE;YACzB1E,aAAa,CAAC0E,OAAO,CAACwC,cAAc,CAAC,CAAC;UACxC;QACF,CAAC,EAAE,GAAG,CAAC;QAEPhH,iBAAiB,CAAC,IAAI,CAAC;QACvBuE,OAAO,CAACkB,GAAG,CAAC,iCAAiC,CAAC;MAChD,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF;;IAEA;IACA,OAAO,MAAM;MACX,IAAIxE,aAAa,CAAC0E,OAAO,EAAE;QACzB1E,aAAa,CAAC0E,OAAO,CAACkB,MAAM,CAAC,CAAC;QAC9B5F,aAAa,CAAC0E,OAAO,GAAG,IAAI;MAC9B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAtG,SAAS,CAAC,MAAM;IACd,IACE6B,cAAc,IACdD,aAAa,CAAC0E,OAAO,IACrBrE,QAAQ,CAAC0B,QAAQ,IACjB1B,QAAQ,CAAC2B,SAAS,EAClB;MACA,MAAMyE,GAAG,GAAGU,UAAU,CAAC9G,QAAQ,CAAC0B,QAAQ,CAAC;MACzC,MAAM2E,GAAG,GAAGS,UAAU,CAAC9G,QAAQ,CAAC2B,SAAS,CAAC;MAE1C,IAAI,CAACoF,KAAK,CAACX,GAAG,CAAC,IAAI,CAACW,KAAK,CAACV,GAAG,CAAC,EAAE;QAC9B;QACA1G,aAAa,CAAC0E,OAAO,CAACqB,OAAO,CAAC,CAACU,GAAG,EAAEC,GAAG,CAAC,EAAE,EAAE,CAAC;;QAE7C;QACA,IAAIvG,MAAM,EAAE;UACVA,MAAM,CAAC2G,SAAS,CAAC,CAACL,GAAG,EAAEC,GAAG,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL,MAAMK,SAAS,GAAGpC,MAAM,CAACC,CAAC,CAACzE,MAAM,CAAC,CAACsG,GAAG,EAAEC,GAAG,CAAC,CAAC,CAACR,KAAK,CAAClG,aAAa,CAAC0E,OAAO,CAAC;UAC1EtE,SAAS,CAAC2G,SAAS,CAAC;QACtB;MACF;IACF;EACF,CAAC,EAAE,CAAC1G,QAAQ,CAAC0B,QAAQ,EAAE1B,QAAQ,CAAC2B,SAAS,EAAE/B,cAAc,EAAEE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAErE;EACA/B,SAAS,CAAC,MAAM;IACd,IAAIiC,QAAQ,CAACkB,iBAAiB,EAAE;MAC9B,MAAM8F,QAAQ,GAAG9D,kBAAkB,CAAC+D,MAAM,CACxCC,QAAQ,IAAIA,QAAQ,CAAChG,iBAAiB,KAAKiG,QAAQ,CAACnH,QAAQ,CAACkB,iBAAiB,CAChF,CAAC;MACDuC,oBAAoB,CAACuD,QAAQ,CAAC;MAC9B;MACA,IAAI,CAACA,QAAQ,CAACI,IAAI,CAACC,EAAE,IAAIA,EAAE,CAAClG,sBAAsB,KAAKgG,QAAQ,CAACnH,QAAQ,CAACmB,sBAAsB,CAAC,CAAC,EAAE;QACjGlB,WAAW,CAACsG,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAEpF,sBAAsB,EAAE;QAAG,CAAC,CAAC,CAAC;MAChE;IACF,CAAC,MAAM;MACLsC,oBAAoB,CAAC,EAAE,CAAC;MACxBxD,WAAW,CAACsG,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEpF,sBAAsB,EAAE;MAAG,CAAC,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,CAACnB,QAAQ,CAACkB,iBAAiB,EAAEgC,kBAAkB,EAAElD,QAAQ,CAACmB,sBAAsB,CAAC,CAAC,CAAC,CAAC;;EAEvF;EACA;;EAEA;EACA,MAAMmG,YAAY,GAAInB,CAAC,IAAK;IAC1B,MAAM;MAAEoB,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGvB,CAAC,CAACwB,MAAM;;IAE/C;IACA,MAAMC,QAAQ,GAAGH,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF,KAAK;IAEtDvH,WAAW,CAACsG,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACgB,IAAI,GAAGK;IAAS,CAAC,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IAAI,CAAC7H,QAAQ,CAACc,KAAK,IAAI,CAACd,QAAQ,CAACe,cAAc,IAAI,CAACf,QAAQ,CAACgB,eAAe,IAC1E,CAAChB,QAAQ,CAACkB,iBAAiB,IAAI,CAAClB,QAAQ,CAACiB,mBAAmB,IAAI,CAACjB,QAAQ,CAACwB,OAAO,EAAE;MACnF/B,eAAe,CAAC;QACdgI,IAAI,EAAE,OAAO;QACbK,OAAO,EAAE;MACX,CAAC,CAAC;MACF,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAO5B,CAAC,IAAK;IAChCA,CAAC,CAAC6B,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACH,YAAY,CAAC,CAAC,EAAE;MACnB;IACF;IAEAtI,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF;MACA;;MAEA;MACA,MAAMwI,SAAS,GAAG,IAAI9H,IAAI,CAAC,GAAGH,QAAQ,CAACe,cAAc,IAAIf,QAAQ,CAACgB,eAAe,KAAK,CAAC;;MAEvF;MACA,MAAMkH,WAAW,GAAG,IAAI/H,IAAI,CAAC8H,SAAS,CAACE,OAAO,CAAC,CAAC,GAAGF,SAAS,CAACG,iBAAiB,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC/H,WAAW,CAAC,CAAC;MAMvG,MAAMgI,OAAO,GAAG;QACdvH,KAAK,EAAEd,QAAQ,CAACc,KAAK;QACrBC,cAAc,EAAEmH,WAAW;QAC3BjH,mBAAmB,EAAEjB,QAAQ,CAACiB,mBAAmB;QACjDqH,YAAY,EAAEjJ,QAAQ,CAACkJ,IAAI;QAC3BrH,iBAAiB,EAAElB,QAAQ,CAACkB,iBAAiB,GAAGiG,QAAQ,CAACnH,QAAQ,CAACkB,iBAAiB,CAAC,GAAG,IAAI;QAC3FC,sBAAsB,EAAEnB,QAAQ,CAACmB,sBAAsB,GAAGgG,QAAQ,CAACnH,QAAQ,CAACmB,sBAAsB,CAAC,GAAG,IAAI;QAC1GC,oBAAoB,EAAEpB,QAAQ,CAACoB,oBAAoB,GAAG+F,QAAQ,CAACnH,QAAQ,CAACoB,oBAAoB,CAAC,GAAG;MAClG,CAAC;;MAGD;MACA,MAAMoH,QAAQ,GAAG;QACfC,KAAK,EAAE;UACLpH,OAAO,EAAErB,QAAQ,CAACqB,OAAO,IAAI,IAAI;UACjCC,SAAS,EAAEtB,QAAQ,CAACsB,SAAS,IAAI,IAAI;UACrCC,cAAc,EAAEvB,QAAQ,CAACuB,cAAc,IAAI,IAAI;UAC/CmH,eAAe,EAAE1I,QAAQ,CAAC0I,eAAe,IAAI,IAAI;UACjDC,eAAe,EAAE3I,QAAQ,CAAC2I,eAAe,IAAI,IAAI;UACjDC,WAAW,EAAE5I,QAAQ,CAAC4I,WAAW,IAAI;QACvC,CAAC;QACDC,YAAY,EAAE;UACZrH,OAAO,EAAExB,QAAQ,CAACwB,OAAO,GAAG2F,QAAQ,CAACnH,QAAQ,CAACwB,OAAO,CAAC,GAAG,IAAI;UAC7DC,YAAY,EAAEzB,QAAQ,CAACyB,YAAY,IAAI,IAAI;UAC3CC,QAAQ,EAAE1B,QAAQ,CAAC0B,QAAQ,GAAGoF,UAAU,CAAC9G,QAAQ,CAAC0B,QAAQ,CAAC,GAAG,IAAI;UAClEC,SAAS,EAAE3B,QAAQ,CAAC2B,SAAS,GAAGmF,UAAU,CAAC9G,QAAQ,CAAC2B,SAAS,CAAC,GAAG;QACnE,CAAC;QACDmH,KAAK,EAAE;UACLlH,cAAc,EAAE5B,QAAQ,CAAC4B,cAAc,IAAI,IAAI;UAC/CC,UAAU,EAAE7B,QAAQ,CAAC6B,UAAU,GAAGsF,QAAQ,CAACnH,QAAQ,CAAC6B,UAAU,CAAC,GAAG,IAAI;UACtEC,QAAQ,EAAE9B,QAAQ,CAAC8B,QAAQ,GAAGqF,QAAQ,CAACnH,QAAQ,CAAC8B,QAAQ,CAAC,GAAG,IAAI;UAChEC,UAAU,EAAE/B,QAAQ,CAAC+B,UAAU,GAAGoF,QAAQ,CAACnH,QAAQ,CAAC+B,UAAU,CAAC,GAAG,IAAI;UACtEC,KAAK,EAAEhC,QAAQ,CAACgC,KAAK,IAAI;QAC3B,CAAC;QACD+G,OAAO,EAAE;UACP9G,YAAY,EAAEjC,QAAQ,CAACiC,YAAY,GAAG,CAAC,GAAG,CAAC;UAC3CC,YAAY,EAAElC,QAAQ,CAACkC,YAAY,GAAG,CAAC,GAAG,CAAC;UAC3CC,KAAK,EAAEnC,QAAQ,CAACmC,KAAK,GAAG,CAAC,GAAG,CAAC;UAC7BC,cAAc,EAAEpC,QAAQ,CAACoC,cAAc,GAAG,CAAC,GAAG,CAAC;UAC/CC,YAAY,EAAErC,QAAQ,CAACqC,YAAY,GAAG,CAAC,GAAG,CAAC;UAC3CC,YAAY,EAAEtC,QAAQ,CAACsC,YAAY,GAAG,CAAC,GAAG,CAAC;UAC3CC,GAAG,EAAEvC,QAAQ,CAACuC,GAAG,GAAG,CAAC,GAAG,CAAC;UACzBC,IAAI,EAAExC,QAAQ,CAACwC,IAAI,GAAG,CAAC,GAAG,CAAC;UAC3BC,kBAAkB,EAAEzC,QAAQ,CAACyC,kBAAkB,GAAG,CAAC,GAAG,CAAC;UACvDM,kBAAkB,EAAE/C,QAAQ,CAAC+C,kBAAkB,IAAI,IAAI;UACvDL,eAAe,EAAE1C,QAAQ,CAAC0C,eAAe,IAAI,IAAI;UACjDC,kBAAkB,EAAE3C,QAAQ,CAAC2C,kBAAkB,IAAI,IAAI;UACvDC,uBAAuB,EAAE5C,QAAQ,CAAC4C,uBAAuB,IAAI,IAAI;UACjEE,aAAa,EAAE9C,QAAQ,CAAC8C,aAAa,IAAI,IAAI;UAC7CD,iBAAiB,EAAE7C,QAAQ,CAAC6C,iBAAiB,IAAI;QACnD;MACF,CAAC;MAEDuB,OAAO,CAACkB,GAAG,CAAC,8BAA8B,EAAE;QAAE+C,OAAO;QAAEG;MAAS,CAAC,CAAC;;MAElE;MACA,MAAMQ,QAAQ,GAAG,MAAM9K,KAAK,CAAC+K,IAAI,CAAC,GAAGlK,GAAG,WAAW,EAAE;QACnDsJ,OAAO;QACPG;MACF,CAAC,CAAC;MAKFpE,OAAO,CAACkB,GAAG,CAAC,2BAA2B,EAAE0D,QAAQ,CAAC9E,IAAI,CAAC;MACvDzE,eAAe,CAAC;QAAEgI,IAAI,EAAE,SAAS;QAAEK,OAAO,EAAE;MAAkC,CAAC,CAAC;;MAEhF;MACAoB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAO/E,KAAK,EAAE;MAAA,IAAAgF,eAAA,EAAAC,oBAAA;MACdhF,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D1E,eAAe,CAAC;QACdgI,IAAI,EAAE,OAAO;QACbK,OAAO,EAAE,EAAAqB,eAAA,GAAAhF,KAAK,CAAC6E,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBjF,IAAI,cAAAkF,oBAAA,uBAApBA,oBAAA,CAAsBtB,OAAO,KAAI;MAC5C,CAAC,CAAC;IACJ,CAAC,SAAS;MACRvI,eAAe,CAAC,KAAK,CAAC;;MAEtB;MACA,IAAI,CAAAC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEiI,IAAI,MAAK,SAAS,EAAE;QACpCb,UAAU,CAAC,MAAM;UACfnH,eAAe,CAAC,IAAI,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC;;EAED;EACA,MAAMyJ,SAAS,GAAGA,CAAA,KAAM;IACtBjJ,WAAW,CAAC;MACVa,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,IAAIZ,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtDU,eAAe,EAAE,IAAIb,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC+I,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;MACvEpI,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,sBAAsB,EAAE,EAAE;MAC1BC,oBAAoB,EAAE,EAAE;MACxBC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,KAAK;MACnBC,KAAK,EAAE,KAAK;MACZC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,KAAK;MACnBC,YAAY,EAAE,KAAK;MACnBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,kBAAkB,EAAE,KAAK;MACzBC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE,EAAE;MACtBC,uBAAuB,EAAE,EAAE;MAC3BC,iBAAiB,EAAE,EAAE;MACrBC,aAAa,EAAE,EAAE;MACjBC,kBAAkB,EAAE,EAAE;MACtB2F,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE;IACf,CAAC,CAAC;;IAEF;IACA,IAAI9I,MAAM,IAAIH,aAAa,CAAC0E,OAAO,EAAE;MACnC1E,aAAa,CAAC0E,OAAO,CAACsC,WAAW,CAAC7G,MAAM,CAAC;MACzCC,SAAS,CAAC,IAAI,CAAC;IACjB;;IAEA;IACA,IAAIJ,aAAa,CAAC0E,OAAO,EAAE;MACzB1E,aAAa,CAAC0E,OAAO,CAACqB,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;IACvD;EACF,CAAC;;EAED;EACA,oBACE5G,OAAA,CAACX,MAAM,CAACmL,GAAG;IACTC,SAAS,EAAC,mBAAmB;IAC7BC,OAAO,EAAE;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAG,CAAE;IAC/BC,OAAO,EAAE;MAAEF,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAC9BE,UAAU,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAU,CAAE;IAAAC,QAAA,gBAE/CjL,OAAA,CAACX,MAAM,CAACmL,GAAG;MACTC,SAAS,EAAC,gBAAgB;MAC1BC,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;MAAG,CAAE;MAChCC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAC9BE,UAAU,EAAE;QAAEI,KAAK,EAAE,GAAG;QAAEH,QAAQ,EAAE;MAAI,CAAE;MAAAE,QAAA,eAE1CjL,OAAA;QAAGyK,SAAS,EAAC,kBAAkB;QAACU,KAAK,EAAE;UAAEC,QAAQ,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAJ,QAAA,EAAC;MAEnF;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eAEbzL,OAAA,CAACX,MAAM,CAACqM,IAAI;MACVjB,SAAS,EAAC,cAAc;MACxBkB,QAAQ,EAAE1C,YAAa;MACvByB,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEiB,KAAK,EAAE;MAAK,CAAE;MACrCf,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEiB,KAAK,EAAE;MAAE,CAAE;MAClCd,UAAU,EAAE;QAAEI,KAAK,EAAE,GAAG;QAAEH,QAAQ,EAAE;MAAI,CAAE;MAAAE,QAAA,gBAE1CjL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE,CAAC;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACrGjL,OAAA,CAACT,kBAAkB;UAAC2B,QAAQ,EAAEA,QAAS;UAACsH,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACpGjL,OAAA,CAACR,qBAAqB;UACpB0B,QAAQ,EAAEA,QAAS;UACnBsH,YAAY,EAAEA,YAAa;UAC3BtE,cAAc,EAAEA,cAAe;UAC/BQ,iBAAiB,EAAEA,iBAAkB;UACrCJ,iBAAiB,EAAEA;QAAkB;UAAAgH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE,CAAC;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACrGjL,OAAA,CAACP,aAAa;UAACyB,QAAQ,EAAEA,QAAS;UAACsH,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACpGjL,OAAA,CAACN,mBAAmB;UAClBwB,QAAQ,EAAEA,QAAS;UACnBsH,YAAY,EAAEA,YAAa;UAC3B5H,MAAM,EAAEA,MAAO;UACfE,cAAc,EAAEA,cAAe;UAC/B0D,kBAAkB,EAAEA;QAAmB;UAAA8G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE,CAAC;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACrGjL,OAAA,CAACL,YAAY;UAACuB,QAAQ,EAAEA,QAAS;UAACsH,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAG,CAAE;QAAChB,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEkB,CAAC,EAAE;QAAE,CAAE;QAACf,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACpGjL,OAAA,CAACJ,cAAc;UAACsB,QAAQ,EAAEA,QAAS;UAACsH,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAG,CAAE;QAACC,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAACE,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eACpGjL,OAAA,CAACH,kBAAkB;UAACqB,QAAQ,EAAEA,QAAS;UAACsH,YAAY,EAAEA;QAAa;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACbzL,OAAA,CAACX,MAAM,CAACmL,GAAG;QAACE,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEiB,KAAK,EAAE;QAAK,CAAE;QAACf,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEiB,KAAK,EAAE;QAAE,CAAE;QAACd,UAAU,EAAE;UAAEI,KAAK,EAAE;QAAI,CAAE;QAAAD,QAAA,eAC9GjL,OAAA,CAACF,WAAW;UACVU,YAAY,EAAEA,YAAa;UAC3ByI,YAAY,EAAEA,YAAa;UAC3BmB,SAAS,EAAEA;QAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACdzL,OAAA;MAAAsL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzL,OAAA,CAACV,eAAe;MAAA2L,QAAA,EACbvK,YAAY,iBACXV,OAAA,CAACX,MAAM,CAACmL,GAAG;QACTC,SAAS,EAAE,kBAAkB/J,YAAY,CAACiI,IAAI,EAAG;QACjD+B,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAG,CAAE;QAC/BC,OAAO,EAAE;UAAEF,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAE;QAC9BkB,IAAI,EAAE;UAAEnB,OAAO,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAG,CAAE;QAC5BE,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAE,QAAA,EAE7BvK,YAAY,CAACsI;MAAO;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEjB,CAAC;AAACnL,EAAA,CAljBID,cAAc;EAAA,QAMGlB,OAAO;AAAA;AAAA4M,EAAA,GANxB1L,cAAc;AAojBpB,eAAeA,cAAc;AAAC,IAAA0L,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}