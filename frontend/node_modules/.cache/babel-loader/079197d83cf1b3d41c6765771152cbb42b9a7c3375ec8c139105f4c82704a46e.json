{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import{useAuth}from'../context/AuthContext';import axios from'axios';import'../css/ListeRapport.css';import{Eye,// Détails\nHistory,// Historique\nPencil,// Modifier\nShare2,// Gérer accès\nDownload// Télécharger\n}from'lucide-react';import Filtres from'./ListeRapport/Filtres';import RapportsTable from\"./ListeRapport/RapportsTable\";import DetailsRapport from'./ListeRapport/DetailsRapport';import GestionAccesModal from'./ListeRapport/GestionAccessModal';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ListeRapport=()=>{const[rapports,setRapports]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[typeEvenements,setTypeEvenements]=useState([]);const[sousTypeEvenements,setSousTypeEvenements]=useState([]);const[origineEvenements,setOrigineEvenements]=useState([]);const[zones,setZones]=useState([]);const[operateurs,setOperateurs]=useState([]);// Liste des opérateurs pour l'attribution d'accès\nconst[filtreActif,setFiltreActif]=useState(false);const[searchTerm,setSearchTerm]=useState('');const[filtres,setFiltres]=useState({type:'',sousType:'',origine:'',zone:'',dateDebut:'',dateFin:'',archive:'0'});const[rapportSelectionne,setRapportSelectionne]=useState(null);const[afficherHistorique,setAfficherHistorique]=useState(false);const[afficherGestionAcces,setAfficherGestionAcces]=useState(false);const[operateursAvecAcces,setOperateursAvecAcces]=useState([]);const[nouvelOperateurAcces,setNouvelOperateurAcces]=useState('');const[historiqueData,setHistoriqueData]=useState(null);// Ajout d'un état pour stocker les droits d'accès\nconst[droitsAcces,setDroitsAcces]=useState({});//new\nconst[afficherAjoutHistorique,setAfficherAjoutHistorique]=useState(false);const[nouvelHistorique,setNouvelHistorique]=useState({type_action:'',detail_action:''});const{authData}=useAuth();const modalRef=useRef(null);const accessModalRef=useRef(null);const API_BASE_URL=process.env.REACT_APP_API_URL;// Fonction pour charger tous les rapports\nconst fetchRapports=async()=>{try{setLoading(true);const response=await axios.get(`${API_BASE_URL}/rapports`);setRapports(response.data);// Charger les droits d'accès pour tous les rapports\nawait fetchDroitsAcces();}catch(err){console.error(\"Erreur lors de la récupération des rapports:\",err);setError(\"Une erreur est survenue lors du chargement des rapports.\");}finally{setLoading(false);}};const fetchHistorique=async idRapport=>{try{const response=await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);return response.data;}catch(err){console.error(\"Erreur lors de la récupération de l'historique:\",err);setError(\"Une erreur est survenue lors du chargement de l'historique.\");return[];// Retourner un tableau vide en cas d'erreur\n}};// Nouvelle fonction pour charger les droits d'accès\nconst fetchDroitsAcces=async()=>{try{// Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\nconst response=await axios.get(`${API_BASE_URL}/rapports/acces/all`);// Organiser les droits d'accès par rapport\nconst droits={};response.data.forEach(droit=>{if(!droits[droit.id_rapport]){droits[droit.id_rapport]=[];}droits[droit.id_rapport].push(droit.id_operateur);});setDroitsAcces(droits);}catch(err){console.error(\"Erreur lors de la récupération des droits d'accès:\",err);}};const telechargerHistorique=async rapport=>{try{// Charger l'historique du rapport\nconst historique=await fetchHistorique(rapport.id_rapport);if(historique&&historique.length>0){// Définir l'en-tête du fichier texte\nlet txtContent=\"Type d'action       | Détails                             | Opérateur         | Date\\n\";txtContent+=\"--------------------|-------------------------------------|-------------------|---------------------\\n\";historique.forEach(action=>{const operateurNom=getOperateurNom(action.id_operateur);const dateFormatee=formatDate(action.date_action);const detailAction=action.detail_action?action.detail_action.replace(/[\\r\\n]+/g,' ').replace(/\\s+/g,' ').trim():\"\";// Ajuster les longueurs pour aligner le tout (padding à droite)\nconst typeAction=action.type_action.padEnd(20);const details=detailAction.slice(0,35).padEnd(35);const operateur=operateurNom.padEnd(19);const date=dateFormatee.padEnd(20);txtContent+=`${typeAction}| ${details}| ${operateur}| ${date}\\n`;});// Créer un objet Blob avec le contenu texte\nconst blob=new Blob([txtContent],{type:'text/plain;charset=utf-8;'});const url=URL.createObjectURL(blob);// Créer un lien pour télécharger le fichier\nconst link=document.createElement('a');link.setAttribute('href',url);link.setAttribute('download',`historique_rapport_${rapport.id_rapport}.txt`);link.style.visibility='hidden';// Ajouter le lien au DOM, cliquer dessus, puis le supprimer\ndocument.body.appendChild(link);link.click();document.body.removeChild(link);// Libérer l'URL\nURL.revokeObjectURL(url);}else{alert(\"Aucun historique disponible pour ce rapport.\");}}catch(error){console.error(\"Erreur lors du téléchargement de l'historique :\",error);alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");}};//new 558\nconst[filtresOuverts,setFiltresOuverts]=useState(false);// Fonction pour basculer l'état des filtres\nconst toggleFiltres=()=>{setFiltresOuverts(prevState=>!prevState);};// Charger les données au montage du composant\nuseEffect(()=>{const fetchData=async()=>{try{setLoading(true);// Récupérer tous les rapports\nconst rapportsResponse=await axios.get(`${API_BASE_URL}/rapports`);// Récupérer les données pour les filtres\nconst typeEvenementsResponse=await axios.get(`${API_BASE_URL}/rapports/type-evenement`);const sousTypeEvenementsResponse=await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);const origineEvenementsResponse=await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);const zonesResponse=await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);const operateursResponse=await axios.get(`${API_BASE_URL}/rapports/operateurs`);setRapports(rapportsResponse.data);setTypeEvenements(typeEvenementsResponse.data);setSousTypeEvenements(sousTypeEvenementsResponse.data);setOrigineEvenements(origineEvenementsResponse.data);setZones(zonesResponse.data);setOperateurs(operateursResponse.data);// Charger les droits d'accès\nawait fetchDroitsAcces();}catch(err){console.error(\"Erreur lors de la récupération des données:\",err);setError(\"Une erreur est survenue lors du chargement des données.\");}finally{setLoading(false);}};fetchData();},[]);// Fonctions utilitaires pour obtenir les libellés\nconst getTypeEvenementLibelle=id=>{const type=typeEvenements.find(t=>t.id_type_evenement===id);return type?type.libelle:'Non défini';};const getSousTypeEvenementLibelle=id=>{const sousType=sousTypeEvenements.find(st=>st.id_sous_type_evenement===id);return sousType?sousType.libelle:'Non défini';};const getOrigineEvenementLibelle=id=>{const origine=origineEvenements.find(o=>o.id_origine_evenement===id);return origine?origine.libelle:'Non défini';};const getZoneNom=id=>{const zone=zones.find(z=>z.id_zone===id);return zone?zone.nom_zone:'Non définie';};const getOperateurNom=id=>{const operateur=operateurs.find(o=>o.id_operateur===id);return operateur?`${operateur.prenom} ${operateur.nom}`:`Opérateur ID ${id}`;};// Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\nconst userPeutModifier=rapport=>{if(!authData||!rapport)return false;const userId=authData.Opid;// Vérifie si l'utilisateur est le créateur\nif(rapport.id_operateur===userId){return true;}// Vérifie s'il a reçu un accès dans acces_rapport\nconst operateursAvecAcces=droitsAcces[rapport.id_rapport]||[];return operateursAvecAcces.includes(userId);};const formatDate=dateString=>{const date=new Date(dateString);return date.toLocaleDateString('fr-FR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});};const handleSearchChange=e=>{setSearchTerm(e.target.value);};const handleFiltreChange=e=>{const{name,value}=e.target;setFiltres(prev=>({...prev,[name]:value}));};const handleHistoriqueChange=e=>{const{name,value}=e.target;setNouvelHistorique(prev=>({...prev,[name]:value}));};const reinitialiserFiltres=async()=>{setFiltres({type:'',sousType:'',origine:'',zone:'',dateDebut:'',dateFin:''});setSearchTerm('');setFiltreActif(false);// Recharger tous les rapports\nawait fetchRapports();};const voirDetails=async rapport=>{setRapportSelectionne(rapport);setAfficherHistorique(false);setAfficherGestionAcces(false);// Charger l'historique du rapport sélectionné\nconst historique=await fetchHistorique(rapport.id_rapport);setHistoriqueData(historique);// Ouvrir la modal\nif(modalRef.current){modalRef.current.classList.add('active');}};// Modifier la fonction voirHistorique pour charger immédiatement l'historique\nconst voirHistorique=async rapport=>{setRapportSelectionne(rapport);setAfficherHistorique(true);setAfficherGestionAcces(false);try{// Charger l'historique dès qu'on clique sur le bouton\nconst historique=await fetchHistorique(rapport.id_rapport);setHistoriqueData(historique);}catch(err){console.error(\"Erreur lors du chargement de l'historique:\",err);}// Ouvrir la modal\nif(modalRef.current){modalRef.current.classList.add('active');}};const fermerModal=()=>{if(modalRef.current){modalRef.current.classList.remove('active');}};// Nouvelles fonctions pour la gestion des accès\nconst ouvrirGestionAcces=async rapport=>{setRapportSelectionne(rapport);try{// Récupérer la liste des opérateurs ayant accès au rapport\nconst response=await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);setOperateursAvecAcces(response.data);setAfficherGestionAcces(true);// Ouvrir la modal\nif(accessModalRef.current){accessModalRef.current.classList.add('active');}}catch(err){console.error(\"Erreur lors de la récupération des accès:\",err);setError(\"Une erreur est survenue lors du chargement des accès.\");}};const fermerGestionAcces=()=>{if(accessModalRef.current){accessModalRef.current.classList.remove('active');}setNouvelOperateurAcces('');};const handleNouvelOperateurChange=e=>{setNouvelOperateurAcces(e.target.value);};const ajouterAccesOperateur=async()=>{if(!nouvelOperateurAcces||!rapportSelectionne)return;try{await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`,{id_operateur:nouvelOperateurAcces,peut_modifier:true// Définir à true pour permettre la modification\n});// Ajouter une entrée dans l'historique\nawait axios.post(`${API_BASE_URL}/rapports/historique`,{id_rapport:rapportSelectionne.id_rapport,id_operateur:nouvelOperateurAcces,type_action:'AJOUT_D_ACCES',date_action:new Date(new Date().getTime()+2*60*60*1000).toISOString(),detail_action:''});// Rafraîchir la liste des opérateurs avec accès\nconst response=await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);setOperateursAvecAcces(response.data);// Mettre à jour les droits d'accès globaux\nawait fetchDroitsAcces();setNouvelOperateurAcces('');}catch(err){console.error(\"Erreur lors de l'ajout d'accès:\",err);setError(\"Une erreur est survenue lors de l'ajout d'accès.\");}};const ajouterHistoriqueManuel=async()=>{try{await axios.post(`${API_BASE_URL}/rapports/historique`,{id_rapport:rapportSelectionne.id_rapport,id_operateur:authData.Opid,type_action:nouvelHistorique.type_action,date_action:new Date(new Date().getTime()+2*60*60*1000).toISOString(),detail_action:nouvelHistorique.detail_action});// Recharger l'historique après l'ajout\nconst historique=await fetchHistorique(rapportSelectionne.id_rapport);setHistoriqueData(historique);// Réinitialiser le formulaire\nsetNouvelHistorique({type_action:'',detail_action:''});// Revenir à l'affichage de l'historique\nsetAfficherAjoutHistorique(false);setAfficherHistorique(true);}catch(err){console.error(\"Erreur lors de l'ajout d'un historique manuel:\",err);setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");}};const retirerAccesOperateur=async idOperateur=>{try{await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);// Rafraîchir la liste des opérateurs avec accès\nconst response=await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);setOperateursAvecAcces(response.data);// Ajouter une entrée dans l'historique\nawait axios.post(`${API_BASE_URL}/rapports/historique`,{id_rapport:rapportSelectionne.id_rapport,id_operateur:idOperateur,type_action:'RETRAIT_D_ACCES',date_action:new Date(new Date().getTime()+2*60*60*1000).toISOString(),detail_action:''});// Mettre à jour les droits d'accès globaux\nawait fetchDroitsAcces();}catch(err){console.error(\"Erreur lors du retrait d'accès:\",err);setError(\"Une erreur est survenue lors du retrait d'accès.\");}};// Rediriger vers la page de modification du rapport\nconst modifierRapport=idRapport=>{window.location.href=`/modifier-rapport/${idRapport}`;};// Filtrer les rapports en fonction du terme de recherche\nconst rapportsFiltres=rapports.filter(rapport=>{const correspond=(!filtres.type||rapport.id_type_evenement==filtres.type)&&(!filtres.sousType||rapport.id_sous_type_evenement==filtres.sousType)&&(!filtres.origine||rapport.id_origine_evenement==filtres.origine)&&(!filtres.zone||rapport.id_zone==filtres.zone)&&(!filtres.dateDebut||new Date(rapport.date_evenement)>=new Date(filtres.dateDebut))&&(!filtres.dateFin||new Date(rapport.date_evenement)<=new Date(filtres.dateFin))&&(!filtres.archive||rapport.archive==filtres.archive);const rechercheTexte=searchTerm?rapport.titre.toLowerCase().includes(searchTerm.toLowerCase())||rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase())||getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase())||getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase())||getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase()):true;return correspond&&rechercheTexte;});return/*#__PURE__*/_jsxs(\"div\",{className:\"liste-rapport-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Liste des Rapports\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Rechercher un rapport...\",value:searchTerm,onChange:handleSearchChange,className:\"search-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary search-btn\",children:/*#__PURE__*/_jsx(\"i\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"})})]}),/*#__PURE__*/_jsx(Filtres,{filtres:filtres,handleFiltreChange:handleFiltreChange,toggleFiltres:toggleFiltres,filtresOuverts:filtresOuverts,reinitialiserFiltres:reinitialiserFiltres,filtreActif:filtreActif,typeEvenements:typeEvenements,sousTypeEvenements:sousTypeEvenements,origineEvenements:origineEvenements,zones:zones}),/*#__PURE__*/_jsx(RapportsTable,{loading:loading,error:error,rapportsFiltres:rapportsFiltres,getTypeEvenementLibelle:getTypeEvenementLibelle,getSousTypeEvenementLibelle:getSousTypeEvenementLibelle,getOrigineEvenementLibelle:getOrigineEvenementLibelle,formatDate:formatDate,getOperateurNom:getOperateurNom,voirDetails:voirDetails,voirHistorique:voirHistorique,userPeutModifier:userPeutModifier,modifierRapport:modifierRapport,authData:authData,ouvrirGestionAcces:ouvrirGestionAcces}),/*#__PURE__*/_jsx(\"div\",{className:\"modal\",ref:modalRef,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:afficherHistorique?\"Historique du rapport\":afficherAjoutHistorique?\"Ajouter un historique\":\"Détails du rapport\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:fermerModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:rapportSelectionne&&/*#__PURE__*/_jsx(_Fragment,{children:afficherHistorique?/*#__PURE__*/_jsxs(\"div\",{className:\"historique-rapport\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Historique des actions\"}),historiqueData?historiqueData.length>0?historiqueData.map((action,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"historique-item\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Action:\"}),\" \",action.type_action]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"D\\xE9tails:\"}),\" \",action.detail_action]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Op\\xE9rateur:\"}),\" \",getOperateurNom(action.id_operateur)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",formatDate(action.date_action)]})]},index)):/*#__PURE__*/_jsx(\"p\",{children:\"Aucun historique disponible.\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Chargement de l'historique...\"})]}):afficherAjoutHistorique?/*#__PURE__*/_jsxs(\"div\",{className:\"ajout-historique-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ajouter un \\xE9l\\xE9ment d'historique\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"type_action\",children:\"Type d'action:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"type_action\",name:\"type_action\",value:nouvelHistorique.type_action,onChange:handleHistoriqueChange,className:\"form-control\",placeholder:\"Ex: OBSERVATION, INTERVENTION, SUIVI...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"detail_action\",children:\"D\\xE9tails:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"detail_action\",name:\"detail_action\",value:nouvelHistorique.detail_action,onChange:handleHistoriqueChange,className:\"form-control\",rows:\"4\",placeholder:\"D\\xE9crivez l'action ou l'observation en d\\xE9tail...\"})]})]}):/*#__PURE__*/_jsx(DetailsRapport,{rapportSelectionne:rapportSelectionne,formatDate:formatDate,getOperateurNom:getOperateurNom,getTypeEvenementLibelle:getTypeEvenementLibelle,getSousTypeEvenementLibelle:getSousTypeEvenementLibelle,getOrigineEvenementLibelle:getOrigineEvenementLibelle,getZoneNom:getZoneNom,historique:historiqueData// <-- Ajout ici\n})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[rapportSelectionne&&!afficherHistorique&&!afficherAjoutHistorique&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:async()=>{setAfficherHistorique(true);setAfficherAjoutHistorique(false);const historique=await fetchHistorique(rapportSelectionne.id_rapport);setHistoriqueData(historique);},children:\"Voir l'historique\"}),rapportSelectionne&&!afficherAjoutHistorique&&userPeutModifier(rapportSelectionne)&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>{setAfficherHistorique(false);setAfficherAjoutHistorique(true);},children:\"Ajouter un historique manuel\"}),rapportSelectionne&&afficherHistorique&&/*#__PURE__*/_jsx(\"button\",{className:\"btn-icon text-info\",onClick:()=>telechargerHistorique(rapportSelectionne),title:\"T\\xE9l\\xE9charger l'historique\",children:/*#__PURE__*/_jsx(Download,{size:18})}),rapportSelectionne&&afficherAjoutHistorique&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:ajouterHistoriqueManuel,children:\"Enregistrer\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>{setAfficherAjoutHistorique(false);setAfficherHistorique(false);},children:\"Annuler\"})]}),rapportSelectionne&&userPeutModifier(rapportSelectionne)&&!afficherAjoutHistorique&&!afficherHistorique&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>modifierRapport(rapportSelectionne.id_rapport),children:\"Modifier\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:fermerModal,children:\"Fermer\"})]})]})}),/*#__PURE__*/_jsx(GestionAccesModal,{accessModalRef:accessModalRef,rapportSelectionne:rapportSelectionne,operateurs:operateurs,operateursAvecAcces:operateursAvecAcces,nouvelOperateurAcces:nouvelOperateurAcces,handleNouvelOperateurChange:handleNouvelOperateurChange,ajouterAccesOperateur:ajouterAccesOperateur,retirerAccesOperateur:retirerAccesOperateur,fermerGestionAcces:fermerGestionAcces,afficherAjoutHistorique:afficherAjoutHistorique,afficherHistorique:afficherHistorique,setAfficherAjoutHistorique:setAfficherAjoutHistorique,setAfficherHistorique:setAfficherHistorique,nouvelHistorique:nouvelHistorique,handleHistoriqueChange:handleHistoriqueChange,ajouterHistoriqueManuel:ajouterHistoriqueManuel,fetchHistorique:fetchHistorique,setHistoriqueData:setHistoriqueData})]});};export default ListeRapport;","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","axios","Eye","History","Pencil","Share2","Download","Filtres","RapportsTable","DetailsRapport","GestionAccesModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListeRapport","rapports","setRapports","loading","setLoading","error","setError","typeEvenements","setTypeEvenements","sousTypeEvenements","setSousTypeEvenements","origineEvenements","setOrigineEvenements","zones","setZones","operateurs","setOperateurs","filtreActif","setFiltreActif","searchTerm","setSearchTerm","filtres","setFiltres","type","sousType","origine","zone","dateDebut","dateFin","archive","rapportSelectionne","setRapportSelectionne","afficherHistorique","setAfficherHistorique","afficherGestionAcces","setAfficherGestionAcces","operateursAvecAcces","setOperateursAvecAcces","nouvelOperateurAcces","setNouvelOperateurAcces","historiqueData","setHistoriqueData","droitsAcces","setDroitsAcces","afficherAjoutHistorique","setAfficherAjoutHistorique","nouvelHistorique","setNouvelHistorique","type_action","detail_action","authData","modalRef","accessModalRef","API_BASE_URL","process","env","REACT_APP_API_URL","fetchRapports","response","get","data","fetchDroitsAcces","err","console","fetchHistorique","idRapport","droits","forEach","droit","id_rapport","push","id_operateur","telechargerHistorique","rapport","historique","length","txtContent","action","operateurNom","getOperateurNom","dateFormatee","formatDate","date_action","detailAction","replace","trim","typeAction","padEnd","details","slice","operateur","date","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","alert","filtresOuverts","setFiltresOuverts","toggleFiltres","prevState","fetchData","rapportsResponse","typeEvenementsResponse","sousTypeEvenementsResponse","origineEvenementsResponse","zonesResponse","operateursResponse","getTypeEvenementLibelle","id","find","t","id_type_evenement","libelle","getSousTypeEvenementLibelle","st","id_sous_type_evenement","getOrigineEvenementLibelle","o","id_origine_evenement","getZoneNom","z","id_zone","nom_zone","prenom","nom","userPeutModifier","userId","Opid","includes","dateString","Date","toLocaleDateString","day","month","year","hour","minute","handleSearchChange","e","target","value","handleFiltreChange","name","prev","handleHistoriqueChange","reinitialiserFiltres","voirDetails","current","classList","add","voirHistorique","fermerModal","remove","ouvrirGestionAcces","fermerGestionAcces","handleNouvelOperateurChange","ajouterAccesOperateur","post","peut_modifier","getTime","toISOString","ajouterHistoriqueManuel","retirerAccesOperateur","idOperateur","delete","modifierRapport","window","location","href","rapportsFiltres","filter","correspond","date_evenement","rechercheTexte","titre","toLowerCase","description_globale","className","children","placeholder","onChange","ref","onClick","map","index","htmlFor","rows","title","size"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/ListeRapport.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport '../css/ListeRapport.css';\r\nimport {\r\n  Eye,              // Détails\r\n  History,          // Historique\r\n  Pencil,           // Modifier\r\n  Share2,           // Gérer accès\r\n  Download,        // Télécharger\r\n} from 'lucide-react'\r\n\r\n\r\nimport Filtres from './ListeRapport/Filtres';\r\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\r\nimport DetailsRapport from './ListeRapport/DetailsRapport';\r\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\r\n\r\n\r\nconst ListeRapport = () => {\r\n\r\n  const [rapports, setRapports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [typeEvenements, setTypeEvenements] = useState([]);\r\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\r\n  const [origineEvenements, setOrigineEvenements] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [operateurs, setOperateurs] = useState([]); // Liste des opérateurs pour l'attribution d'accès\r\n  const [filtreActif, setFiltreActif] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filtres, setFiltres] = useState({\r\n    type: '',\r\n    sousType: '',\r\n    origine: '',\r\n    zone: '',\r\n    dateDebut: '',\r\n    dateFin: '',\r\n    archive: '0'\r\n  });\r\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\r\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\r\n  const [afficherGestionAcces, setAfficherGestionAcces] = useState(false);\r\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\r\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\r\n  const [historiqueData, setHistoriqueData] = useState(null);\r\n  // Ajout d'un état pour stocker les droits d'accès\r\n  const [droitsAcces, setDroitsAcces] = useState({});\r\n  //new\r\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\r\n  const [nouvelHistorique, setNouvelHistorique] = useState({\r\n    type_action: '',\r\n    detail_action: ''\r\n  });\r\n\r\n  const { authData } = useAuth();\r\n\r\n  const modalRef = useRef(null);\r\n  const accessModalRef = useRef(null);\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Fonction pour charger tous les rapports\r\n  const fetchRapports = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\r\n      setRapports(response.data);\r\n\r\n      // Charger les droits d'accès pour tous les rapports\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchHistorique = async (idRapport) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\r\n      return []; // Retourner un tableau vide en cas d'erreur\r\n    }\r\n  };\r\n\r\n  // Nouvelle fonction pour charger les droits d'accès\r\n  const fetchDroitsAcces = async () => {\r\n    try {\r\n      // Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\r\n\r\n      // Organiser les droits d'accès par rapport\r\n      const droits = {};\r\n      response.data.forEach(droit => {\r\n        if (!droits[droit.id_rapport]) {\r\n          droits[droit.id_rapport] = [];\r\n        }\r\n        droits[droit.id_rapport].push(droit.id_operateur);\r\n      });\r\n\r\n      setDroitsAcces(droits);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\r\n    }\r\n  };\r\n\r\n  const telechargerHistorique = async (rapport) => {\r\n    try {\r\n      // Charger l'historique du rapport\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n\r\n      if (historique && historique.length > 0) {\r\n        // Définir l'en-tête du fichier texte\r\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\r\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\r\n\r\n        historique.forEach(action => {\r\n          const operateurNom = getOperateurNom(action.id_operateur);\r\n          const dateFormatee = formatDate(action.date_action);\r\n          const detailAction = action.detail_action\r\n            ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim()\r\n            : \"\";\r\n\r\n          // Ajuster les longueurs pour aligner le tout (padding à droite)\r\n          const typeAction = action.type_action.padEnd(20);\r\n          const details = detailAction.slice(0, 35).padEnd(35);\r\n          const operateur = operateurNom.padEnd(19);\r\n          const date = dateFormatee.padEnd(20);\r\n\r\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\r\n        });\r\n\r\n        // Créer un objet Blob avec le contenu texte\r\n        const blob = new Blob([txtContent], { type: 'text/plain;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Créer un lien pour télécharger le fichier\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\r\n        link.style.visibility = 'hidden';\r\n\r\n        // Ajouter le lien au DOM, cliquer dessus, puis le supprimer\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        // Libérer l'URL\r\n        URL.revokeObjectURL(url);\r\n      } else {\r\n        alert(\"Aucun historique disponible pour ce rapport.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\r\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //new 558\r\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\r\n\r\n  // Fonction pour basculer l'état des filtres\r\n  const toggleFiltres = () => {\r\n    setFiltresOuverts(prevState => !prevState);\r\n  };\r\n\r\n\r\n  // Charger les données au montage du composant\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Récupérer tous les rapports\r\n        const rapportsResponse = await axios.get(`${API_BASE_URL}/rapports`);\r\n\r\n        // Récupérer les données pour les filtres\r\n        const typeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/type-evenement`);\r\n        const sousTypeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);\r\n        const origineEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);\r\n        const zonesResponse = await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);\r\n        const operateursResponse = await axios.get(`${API_BASE_URL}/rapports/operateurs`);\r\n\r\n        setRapports(rapportsResponse.data);\r\n        setTypeEvenements(typeEvenementsResponse.data);\r\n        setSousTypeEvenements(sousTypeEvenementsResponse.data);\r\n        setOrigineEvenements(origineEvenementsResponse.data);\r\n        setZones(zonesResponse.data);\r\n        setOperateurs(operateursResponse.data);\r\n\r\n        // Charger les droits d'accès\r\n        await fetchDroitsAcces();\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des données:\", err);\r\n        setError(\"Une erreur est survenue lors du chargement des données.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fonctions utilitaires pour obtenir les libellés\r\n  const getTypeEvenementLibelle = (id) => {\r\n    const type = typeEvenements.find(t => t.id_type_evenement === id);\r\n    return type ? type.libelle : 'Non défini';\r\n  };\r\n\r\n  const getSousTypeEvenementLibelle = (id) => {\r\n    const sousType = sousTypeEvenements.find(st => st.id_sous_type_evenement === id);\r\n    return sousType ? sousType.libelle : 'Non défini';\r\n  };\r\n\r\n  const getOrigineEvenementLibelle = (id) => {\r\n    const origine = origineEvenements.find(o => o.id_origine_evenement === id);\r\n    return origine ? origine.libelle : 'Non défini';\r\n  };\r\n\r\n  const getZoneNom = (id) => {\r\n    const zone = zones.find(z => z.id_zone === id);\r\n    return zone ? zone.nom_zone : 'Non définie';\r\n  };\r\n\r\n  const getOperateurNom = (id) => {\r\n    const operateur = operateurs.find(o => o.id_operateur === id);\r\n    return operateur ? `${operateur.prenom} ${operateur.nom}` : `Opérateur ID ${id}`;\r\n  };\r\n\r\n  // Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\r\n  const userPeutModifier = (rapport) => {\r\n    if (!authData || !rapport) return false;\r\n\r\n    const userId = authData.Opid;\r\n\r\n    // Vérifie si l'utilisateur est le créateur\r\n    if (rapport.id_operateur === userId) {\r\n      return true;\r\n    }\r\n\r\n    // Vérifie s'il a reçu un accès dans acces_rapport\r\n    const operateursAvecAcces = droitsAcces[rapport.id_rapport] || [];\r\n    return operateursAvecAcces.includes(userId);\r\n  };\r\n\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleFiltreChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltres(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleHistoriqueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNouvelHistorique(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n\r\n\r\n  const reinitialiserFiltres = async () => {\r\n    setFiltres({\r\n      type: '',\r\n      sousType: '',\r\n      origine: '',\r\n      zone: '',\r\n      dateDebut: '',\r\n      dateFin: ''\r\n    });\r\n    setSearchTerm('');\r\n    setFiltreActif(false);\r\n\r\n    // Recharger tous les rapports\r\n    await fetchRapports();\r\n  };\r\n\r\n  const voirDetails = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(false);\r\n    setAfficherGestionAcces(false);\r\n\r\n    // Charger l'historique du rapport sélectionné\r\n    const historique = await fetchHistorique(rapport.id_rapport);\r\n    setHistoriqueData(historique);\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  // Modifier la fonction voirHistorique pour charger immédiatement l'historique\r\n  const voirHistorique = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(true);\r\n    setAfficherGestionAcces(false);\r\n\r\n    try {\r\n      // Charger l'historique dès qu'on clique sur le bouton\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n      setHistoriqueData(historique);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du chargement de l'historique:\", err);\r\n    }\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const fermerModal = () => {\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.remove('active');\r\n    }\r\n  };\r\n\r\n  // Nouvelles fonctions pour la gestion des accès\r\n  const ouvrirGestionAcces = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n\r\n    try {\r\n      // Récupérer la liste des opérateurs ayant accès au rapport\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      setAfficherGestionAcces(true);\r\n\r\n      // Ouvrir la modal\r\n      if (accessModalRef.current) {\r\n        accessModalRef.current.classList.add('active');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des accès:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\r\n    }\r\n  };\r\n\r\n  const fermerGestionAcces = () => {\r\n    if (accessModalRef.current) {\r\n      accessModalRef.current.classList.remove('active');\r\n    }\r\n    setNouvelOperateurAcces('');\r\n  };\r\n\r\n  const handleNouvelOperateurChange = (e) => {\r\n    setNouvelOperateurAcces(e.target.value);\r\n  };\r\n\r\n  const ajouterAccesOperateur = async () => {\r\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\r\n\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\r\n        id_operateur: nouvelOperateurAcces,\r\n        peut_modifier: true  // Définir à true pour permettre la modification\r\n      });\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: nouvelOperateurAcces,\r\n        type_action: 'AJOUT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n\r\n      setNouvelOperateurAcces('');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\r\n    }\r\n  };\r\n\r\n  const ajouterHistoriqueManuel = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: authData.Opid,\r\n        type_action: nouvelHistorique.type_action,\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: nouvelHistorique.detail_action\r\n      });\r\n\r\n      // Recharger l'historique après l'ajout\r\n      const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n      setHistoriqueData(historique);\r\n\r\n      // Réinitialiser le formulaire\r\n      setNouvelHistorique({\r\n        type_action: '',\r\n        detail_action: ''\r\n      });\r\n\r\n      // Revenir à l'affichage de l'historique\r\n      setAfficherAjoutHistorique(false);\r\n      setAfficherHistorique(true);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\r\n    }\r\n  };\r\n\r\n  const retirerAccesOperateur = async (idOperateur) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: idOperateur,\r\n        type_action: 'RETRAIT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du retrait d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\r\n    }\r\n  };\r\n\r\n  // Rediriger vers la page de modification du rapport\r\n  const modifierRapport = (idRapport) => {\r\n    window.location.href = `/modifier-rapport/${idRapport}`;\r\n  };\r\n\r\n  // Filtrer les rapports en fonction du terme de recherche\r\n  const rapportsFiltres = rapports.filter(rapport => {\r\n    const correspond = (\r\n      (!filtres.type || rapport.id_type_evenement == filtres.type) &&\r\n      (!filtres.sousType || rapport.id_sous_type_evenement == filtres.sousType) &&\r\n      (!filtres.origine || rapport.id_origine_evenement == filtres.origine) &&\r\n      (!filtres.zone || rapport.id_zone == filtres.zone) &&\r\n      (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) &&\r\n      (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) &&\r\n      (!filtres.archive || rapport.archive == filtres.archive)\r\n    );\r\n\r\n    const rechercheTexte = searchTerm\r\n      ? (\r\n        rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      : true;\r\n\r\n    return correspond && rechercheTexte;\r\n  });\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"liste-rapport-container\">\r\n      <h1>Liste des Rapports</h1>\r\n\r\n      {/* Barre de recherche */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un rapport...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n        />\r\n        <button className=\"btn btn-primary search-btn\">\r\n          <i className=\"search-icon\">🔍</i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtres */}\r\n      <Filtres\r\n        filtres={filtres}\r\n        handleFiltreChange={handleFiltreChange}\r\n        toggleFiltres={toggleFiltres}\r\n        filtresOuverts={filtresOuverts}\r\n        reinitialiserFiltres={reinitialiserFiltres}\r\n        filtreActif={filtreActif}\r\n        typeEvenements={typeEvenements}\r\n        sousTypeEvenements={sousTypeEvenements}\r\n        origineEvenements={origineEvenements}\r\n        zones={zones}\r\n      />\r\n\r\n      {/* Liste des rapports */}\r\n      <RapportsTable\r\n        loading={loading}\r\n        error={error}\r\n        rapportsFiltres={rapportsFiltres}\r\n        getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n        getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n        getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n        formatDate={formatDate}\r\n        getOperateurNom={getOperateurNom}\r\n        voirDetails={voirDetails}\r\n        voirHistorique={voirHistorique}\r\n        userPeutModifier={userPeutModifier}\r\n        modifierRapport={modifierRapport}\r\n        authData={authData}\r\n        ouvrirGestionAcces={ouvrirGestionAcces}\r\n      />\r\n\r\n      {/* Modal pour détails et historique */}\r\n      <div className=\"modal\" ref={modalRef}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h2>\r\n              {afficherHistorique\r\n                ? \"Historique du rapport\"\r\n                : afficherAjoutHistorique\r\n                  ? \"Ajouter un historique\"\r\n                  : \"Détails du rapport\"}\r\n            </h2>\r\n            <button className=\"close-btn\" onClick={fermerModal}>&times;</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {rapportSelectionne && (\r\n              <>\r\n                {afficherHistorique ? (\r\n                  <div className=\"historique-rapport\">\r\n                    <h3>Historique des actions</h3>\r\n                    {historiqueData ? (\r\n                      historiqueData.length > 0 ? (\r\n                        historiqueData.map((action, index) => (\r\n                          <div key={index} className=\"historique-item\">\r\n                            <p><strong>Action:</strong> {action.type_action}</p>\r\n                            <p><strong>Détails:</strong> {action.detail_action}</p>\r\n                            <p><strong>Opérateur:</strong> {getOperateurNom(action.id_operateur)}</p>\r\n                            <p><strong>Date:</strong> {formatDate(action.date_action)}</p>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>Aucun historique disponible.</p>\r\n                      )\r\n                    ) : (\r\n                      <p>Chargement de l'historique...</p>\r\n                    )}\r\n                  </div>\r\n                ) : afficherAjoutHistorique ? (\r\n                  <div className=\"ajout-historique-form\">\r\n                    <h3>Ajouter un élément d'historique</h3>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"type_action\">Type d'action:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"type_action\"\r\n                        name=\"type_action\"\r\n                        value={nouvelHistorique.type_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"detail_action\">Détails:</label>\r\n                      <textarea\r\n                        id=\"detail_action\"\r\n                        name=\"detail_action\"\r\n                        value={nouvelHistorique.detail_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Décrivez l'action ou l'observation en détail...\"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <DetailsRapport\r\n                    rapportSelectionne={rapportSelectionne}\r\n                    formatDate={formatDate}\r\n                    getOperateurNom={getOperateurNom}\r\n                    getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n                    getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n                    getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n                    getZoneNom={getZoneNom}\r\n                    historique={historiqueData} // <-- Ajout ici\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                  setAfficherHistorique(true);\r\n                  setAfficherAjoutHistorique(false);\r\n                  const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n                  setHistoriqueData(historique);\r\n                }}\r\n              >\r\n                Voir l'historique\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setAfficherHistorique(false);\r\n                  setAfficherAjoutHistorique(true);\r\n                }}\r\n              >\r\n                Ajouter un historique manuel\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherHistorique && (\r\n              <button\r\n                className=\"btn-icon text-info\"\r\n                onClick={() => telechargerHistorique(rapportSelectionne)}\r\n                title=\"Télécharger l'historique\"\r\n              >\r\n                <Download size={18} />\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherAjoutHistorique && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={ajouterHistoriqueManuel}\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setAfficherAjoutHistorique(false);\r\n                    setAfficherHistorique(false);\r\n                  }}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </>\r\n            )}\r\n            {rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => modifierRapport(rapportSelectionne.id_rapport)}\r\n              >\r\n                Modifier\r\n              </button>\r\n            )}\r\n            <button className=\"btn btn-primary\" onClick={fermerModal}>Fermer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal pour la gestion des accès */}\r\n      <GestionAccesModal\r\n        accessModalRef={accessModalRef}\r\n        rapportSelectionne={rapportSelectionne}\r\n        operateurs={operateurs}\r\n        operateursAvecAcces={operateursAvecAcces}\r\n        nouvelOperateurAcces={nouvelOperateurAcces}\r\n        handleNouvelOperateurChange={handleNouvelOperateurChange}\r\n        ajouterAccesOperateur={ajouterAccesOperateur}\r\n        retirerAccesOperateur={retirerAccesOperateur}\r\n        fermerGestionAcces={fermerGestionAcces}\r\n        afficherAjoutHistorique={afficherAjoutHistorique}\r\n        afficherHistorique={afficherHistorique}\r\n        setAfficherAjoutHistorique={setAfficherAjoutHistorique}\r\n        setAfficherHistorique={setAfficherHistorique}\r\n        nouvelHistorique={nouvelHistorique}\r\n        handleHistoriqueChange={handleHistoriqueChange}\r\n        ajouterHistoriqueManuel={ajouterHistoriqueManuel}\r\n        fetchHistorique={fetchHistorique}\r\n        setHistoriqueData={setHistoriqueData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeRapport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}