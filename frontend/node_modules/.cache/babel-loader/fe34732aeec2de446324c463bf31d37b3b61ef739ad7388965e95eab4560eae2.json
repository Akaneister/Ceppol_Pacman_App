{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\ListeRapport.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport '../css/ListeRapport.css';\nimport { Download } from 'lucide-react';\nimport Filtres from './ListeRapport/Filtres';\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\nimport DetailsRapport from './ListeRapport/DetailsRapport';\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\n\n/**\r\n * Composant principal pour la gestion et l'affichage des rapports.\r\n * Permet la recherche, le filtrage, la gestion des accès et l'historique.\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListeRapport = () => {\n  _s();\n  // =========================\n  // States principaux\n  // =========================\n  const [rapports, setRapports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Données pour les filtres\n  const [typeEvenements, setTypeEvenements] = useState([]);\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\n  const [origineEvenements, setOrigineEvenements] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [operateurs, setOperateurs] = useState([]);\n\n  // Filtres et recherche\n  const [filtreActif, setFiltreActif] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtres, setFiltres] = useState({\n    type: '',\n    sousType: '',\n    origine: '',\n    zone: '',\n    dateDebut: '',\n    dateFin: '',\n    archive: '0'\n  });\n\n  // Sélection et affichage\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\n  const [afficherGestionAcces, setAfficherGestionAcces] = useState(false);\n\n  // Gestion des accès\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\n  const [droitsAcces, setDroitsAcces] = useState({});\n\n  // Historique\n  const [historiqueData, setHistoriqueData] = useState(null);\n  const [nouvelHistorique, setNouvelHistorique] = useState({\n    type_action: '',\n    detail_action: ''\n  });\n\n  // UI\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\n\n  // Authentification\n  const {\n    authData\n  } = useAuth();\n\n  // Références pour les modals\n  const modalRef = useRef(null);\n  const accessModalRef = useRef(null);\n\n  // Base URL API\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n\n  // =========================\n  // Effets de chargement initial\n  // =========================\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Récupération des données principales\n        const [rapportsRes, typeEvRes, sousTypeEvRes, origineEvRes, zonesRes, operateursRes] = await Promise.all([axios.get(`${API_BASE_URL}/rapports`), axios.get(`${API_BASE_URL}/rapports/type-evenement`), axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`), axios.get(`${API_BASE_URL}/rapports/origine-evenement`), axios.get(`${API_BASE_URL}/rapports/zone-geographique`), axios.get(`${API_BASE_URL}/rapports/operateurs`)]);\n        setRapports(rapportsRes.data);\n        setTypeEvenements(typeEvRes.data);\n        setSousTypeEvenements(sousTypeEvRes.data);\n        setOrigineEvenements(origineEvRes.data);\n        setZones(zonesRes.data);\n        setOperateurs(operateursRes.data);\n        await fetchDroitsAcces();\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des données:\", err);\n        setError(\"Une erreur est survenue lors du chargement des données.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // =========================\n  // Fonctions utilitaires\n  // =========================\n\n  // Récupère le libellé d'un type d'événement\n  const getTypeEvenementLibelle = id => {\n    var _typeEvenements$find;\n    return ((_typeEvenements$find = typeEvenements.find(t => t.id_type_evenement === id)) === null || _typeEvenements$find === void 0 ? void 0 : _typeEvenements$find.libelle) || 'Non défini';\n  };\n\n  // Récupère le libellé d'un sous-type d'événement\n  const getSousTypeEvenementLibelle = id => {\n    var _sousTypeEvenements$f;\n    return ((_sousTypeEvenements$f = sousTypeEvenements.find(st => st.id_sous_type_evenement === id)) === null || _sousTypeEvenements$f === void 0 ? void 0 : _sousTypeEvenements$f.libelle) || 'Non défini';\n  };\n\n  // Récupère le libellé d'une origine d'événement\n  const getOrigineEvenementLibelle = id => {\n    var _origineEvenements$fi;\n    return ((_origineEvenements$fi = origineEvenements.find(o => o.id_origine_evenement === id)) === null || _origineEvenements$fi === void 0 ? void 0 : _origineEvenements$fi.libelle) || 'Non défini';\n  };\n\n  // Récupère le nom d'une zone\n  const getZoneNom = id => {\n    var _zones$find;\n    return ((_zones$find = zones.find(z => z.id_zone === id)) === null || _zones$find === void 0 ? void 0 : _zones$find.nom_zone) || 'Non définie';\n  };\n\n  // Récupère le nom complet d'un opérateur\n  const getOperateurNom = id => {\n    const op = operateurs.find(o => o.id_operateur === id);\n    return op ? `${op.prenom} ${op.nom}` : `Opérateur ID ${id}`;\n  };\n\n  // Formate une date en français\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Vérifie si l'utilisateur courant peut modifier le rapport\n  const userPeutModifier = rapport => {\n    if (!authData || !rapport) return false;\n    const userId = authData.Opid;\n    if (rapport.id_operateur === userId) return true;\n    const acces = droitsAcces[rapport.id_rapport] || [];\n    return acces.includes(userId);\n  };\n\n  // =========================\n  // Fonctions de gestion API\n  // =========================\n\n  // Récupère tous les droits d'accès\n  const fetchDroitsAcces = async () => {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\n      const droits = {};\n      res.data.forEach(droit => {\n        if (!droits[droit.id_rapport]) droits[droit.id_rapport] = [];\n        droits[droit.id_rapport].push(droit.id_operateur);\n      });\n      setDroitsAcces(droits);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\n    }\n  };\n\n  // Récupère l'historique d'un rapport\n  const fetchHistorique = async idRapport => {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\n      return res.data;\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\n      return [];\n    }\n  };\n\n  // Récupère tous les rapports (utile pour réinitialiser)\n  const fetchRapports = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`${API_BASE_URL}/rapports`);\n      setRapports(res.data);\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // =========================\n  // Handlers UI et actions\n  // =========================\n\n  // Gestion de la recherche\n  const handleSearchChange = e => setSearchTerm(e.target.value);\n\n  // Gestion des filtres\n  const handleFiltreChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFiltres(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Réinitialise tous les filtres\n  const reinitialiserFiltres = async () => {\n    setFiltres({\n      type: '',\n      sousType: '',\n      origine: '',\n      zone: '',\n      dateDebut: '',\n      dateFin: ''\n    });\n    setSearchTerm('');\n    setFiltreActif(false);\n    await fetchRapports();\n  };\n\n  // Bascule l'affichage des filtres\n  const toggleFiltres = () => setFiltresOuverts(prev => !prev);\n\n  // Gestion du formulaire d'ajout d'historique\n  const handleHistoriqueChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNouvelHistorique(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Ouvre la modal de détails d'un rapport\n  const voirDetails = async rapport => {\n    var _modalRef$current;\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(false);\n    setAfficherGestionAcces(false);\n    setHistoriqueData(await fetchHistorique(rapport.id_rapport));\n    (_modalRef$current = modalRef.current) === null || _modalRef$current === void 0 ? void 0 : _modalRef$current.classList.add('active');\n  };\n\n  // Ouvre la modal d'historique d'un rapport\n  const voirHistorique = async rapport => {\n    var _modalRef$current2;\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(true);\n    setAfficherGestionAcces(false);\n    setHistoriqueData(await fetchHistorique(rapport.id_rapport));\n    (_modalRef$current2 = modalRef.current) === null || _modalRef$current2 === void 0 ? void 0 : _modalRef$current2.classList.add('active');\n  };\n\n  // Ferme la modal principale\n  const fermerModal = () => {\n    var _modalRef$current3;\n    return (_modalRef$current3 = modalRef.current) === null || _modalRef$current3 === void 0 ? void 0 : _modalRef$current3.classList.remove('active');\n  };\n\n  // Ouvre la modal de gestion des accès\n  const ouvrirGestionAcces = async rapport => {\n    setRapportSelectionne(rapport);\n    try {\n      var _accessModalRef$curre;\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\n      setOperateursAvecAcces(res.data);\n      setAfficherGestionAcces(true);\n      (_accessModalRef$curre = accessModalRef.current) === null || _accessModalRef$curre === void 0 ? void 0 : _accessModalRef$curre.classList.add('active');\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des accès:\", err);\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\n    }\n  };\n\n  // Ferme la modal de gestion des accès\n  const fermerGestionAcces = () => {\n    var _accessModalRef$curre2;\n    (_accessModalRef$curre2 = accessModalRef.current) === null || _accessModalRef$curre2 === void 0 ? void 0 : _accessModalRef$curre2.classList.remove('active');\n    setNouvelOperateurAcces('');\n  };\n\n  // Gestion du champ opérateur à ajouter\n  const handleNouvelOperateurChange = e => setNouvelOperateurAcces(e.target.value);\n\n  // Ajoute un accès opérateur à un rapport\n  const ajouterAccesOperateur = async () => {\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\n        id_operateur: nouvelOperateurAcces,\n        peut_modifier: true\n      });\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: nouvelOperateurAcces,\n        type_action: 'AJOUT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(res.data);\n      await fetchDroitsAcces();\n      setNouvelOperateurAcces('');\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\n    }\n  };\n\n  // Retire un accès opérateur d'un rapport\n  const retirerAccesOperateur = async idOperateur => {\n    try {\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(res.data);\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: idOperateur,\n        type_action: 'RETRAIT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors du retrait d'accès:\", err);\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\n    }\n  };\n\n  // Ajoute un historique manuel à un rapport\n  const ajouterHistoriqueManuel = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: authData.Opid,\n        type_action: nouvelHistorique.type_action,\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: nouvelHistorique.detail_action\n      });\n      setHistoriqueData(await fetchHistorique(rapportSelectionne.id_rapport));\n      setNouvelHistorique({\n        type_action: '',\n        detail_action: ''\n      });\n      setAfficherAjoutHistorique(false);\n      setAfficherHistorique(true);\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\n    }\n  };\n\n  // Redirige vers la page de modification du rapport\n  const modifierRapport = idRapport => {\n    window.location.href = `/modifier-rapport/${idRapport}`;\n  };\n\n  // Télécharge l'historique d'un rapport au format texte\n  const telechargerHistorique = async rapport => {\n    try {\n      const historique = await fetchHistorique(rapport.id_rapport);\n      if (historique && historique.length > 0) {\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\n        historique.forEach(action => {\n          const operateurNom = getOperateurNom(action.id_operateur);\n          const dateFormatee = formatDate(action.date_action);\n          const detailAction = action.detail_action ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim() : \"\";\n          const typeAction = action.type_action.padEnd(20);\n          const details = detailAction.slice(0, 35).padEnd(35);\n          const operateur = operateurNom.padEnd(19);\n          const date = dateFormatee.padEnd(20);\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\n        });\n        const blob = new Blob([txtContent], {\n          type: 'text/plain;charset=utf-8;'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      } else {\n        alert(\"Aucun historique disponible pour ce rapport.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\n    }\n  };\n\n  // =========================\n  // Filtrage des rapports\n  // =========================\n  const rapportsFiltres = rapports.filter(rapport => {\n    const correspond = (!filtres.type || rapport.id_type_evenement === Number(filtres.type)) && (!filtres.sousType || rapport.id_sous_type_evenement === Number(filtres.sousType)) && (!filtres.origine || rapport.id_origine_evenement === Number(filtres.origine)) && (!filtres.zone || rapport.id_zone === Number(filtres.zone)) && (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) && (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) && (!filtres.archive || rapport.archive == filtres.archive);\n    const rechercheTexte = searchTerm ? rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) || rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) || getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase()) : true;\n    return correspond && rechercheTexte;\n  });\n\n  // =========================\n  // Rendu du composant\n  // =========================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste-rapport-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des Rapports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher un rapport...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary search-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search-icon\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filtres, {\n      filtres: filtres,\n      handleFiltreChange: handleFiltreChange,\n      toggleFiltres: toggleFiltres,\n      filtresOuverts: filtresOuverts,\n      reinitialiserFiltres: reinitialiserFiltres,\n      filtreActif: filtreActif,\n      typeEvenements: typeEvenements,\n      sousTypeEvenements: sousTypeEvenements,\n      origineEvenements: origineEvenements,\n      zones: zones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RapportsTable, {\n      loading: loading,\n      error: error,\n      rapportsFiltres: rapportsFiltres,\n      getTypeEvenementLibelle: getTypeEvenementLibelle,\n      getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n      getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n      formatDate: formatDate,\n      getOperateurNom: getOperateurNom,\n      voirDetails: voirDetails,\n      voirHistorique: voirHistorique,\n      userPeutModifier: userPeutModifier,\n      modifierRapport: modifierRapport,\n      authData: authData,\n      ouvrirGestionAcces: ouvrirGestionAcces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: afficherHistorique ? \"Historique du rapport\" : afficherAjoutHistorique ? \"Ajouter un historique\" : \"Détails du rapport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: fermerModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: rapportSelectionne && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: afficherHistorique ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"historique-rapport\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Historique des actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this), historiqueData ? historiqueData.length > 0 ? historiqueData.map((action, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"historique-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Action:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 32\n                  }, this), \" \", action.type_action]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"D\\xE9tails:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 32\n                  }, this), \" \", action.detail_action]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Op\\xE9rateur:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 32\n                  }, this), \" \", getOperateurNom(action.id_operateur)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 32\n                  }, this), \" \", formatDate(action.date_action)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 27\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Aucun historique disponible.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Chargement de l'historique...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this) : afficherAjoutHistorique ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ajout-historique-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Ajouter un \\xE9l\\xE9ment d'historique\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"type_action\",\n                  children: \"Type d'action:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"type_action\",\n                  name: \"type_action\",\n                  value: nouvelHistorique.type_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  placeholder: \"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"detail_action\",\n                  children: \"D\\xE9tails:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"detail_action\",\n                  name: \"detail_action\",\n                  value: nouvelHistorique.detail_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  rows: \"4\",\n                  placeholder: \"D\\xE9crivez l'action ou l'observation en d\\xE9tail...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(DetailsRapport, {\n              rapportSelectionne: rapportSelectionne,\n              formatDate: formatDate,\n              getOperateurNom: getOperateurNom,\n              getTypeEvenementLibelle: getTypeEvenementLibelle,\n              getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n              getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n              getZoneNom: getZoneNom,\n              historique: historiqueData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: async () => {\n              setAfficherHistorique(true);\n              setAfficherAjoutHistorique(false);\n              setHistoriqueData(await fetchHistorique(rapportSelectionne.id_rapport));\n            },\n            children: \"Voir l'historique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => {\n              setAfficherHistorique(false);\n              setAfficherAjoutHistorique(true);\n            },\n            children: \"Ajouter un historique manuel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-icon text-info\",\n            onClick: () => telechargerHistorique(rapportSelectionne),\n            title: \"T\\xE9l\\xE9charger l'historique\",\n            children: /*#__PURE__*/_jsxDEV(Download, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: ajouterHistoriqueManuel,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => {\n                setAfficherAjoutHistorique(false);\n                setAfficherHistorique(false);\n              },\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => modifierRapport(rapportSelectionne.id_rapport),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: fermerModal,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GestionAccesModal, {\n      accessModalRef: accessModalRef,\n      rapportSelectionne: rapportSelectionne,\n      operateurs: operateurs,\n      operateursAvecAcces: operateursAvecAcces,\n      nouvelOperateurAcces: nouvelOperateurAcces,\n      handleNouvelOperateurChange: handleNouvelOperateurChange,\n      ajouterAccesOperateur: ajouterAccesOperateur,\n      retirerAccesOperateur: retirerAccesOperateur,\n      fermerGestionAcces: fermerGestionAcces,\n      afficherAjoutHistorique: afficherAjoutHistorique,\n      afficherHistorique: afficherHistorique,\n      setAfficherAjoutHistorique: setAfficherAjoutHistorique,\n      setAfficherHistorique: setAfficherHistorique,\n      nouvelHistorique: nouvelHistorique,\n      handleHistoriqueChange: handleHistoriqueChange,\n      ajouterHistoriqueManuel: ajouterHistoriqueManuel,\n      fetchHistorique: fetchHistorique,\n      setHistoriqueData: setHistoriqueData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeRapport, \"Cl/Nnh9uJnW89OfbiBIB8XK5FIA=\", false, function () {\n  return [useAuth];\n});\n_c = ListeRapport;\nexport default ListeRapport;\nvar _c;\n$RefreshReg$(_c, \"ListeRapport\");","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","axios","Download","Filtres","RapportsTable","DetailsRapport","GestionAccesModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ListeRapport","_s","rapports","setRapports","loading","setLoading","error","setError","typeEvenements","setTypeEvenements","sousTypeEvenements","setSousTypeEvenements","origineEvenements","setOrigineEvenements","zones","setZones","operateurs","setOperateurs","filtreActif","setFiltreActif","searchTerm","setSearchTerm","filtres","setFiltres","type","sousType","origine","zone","dateDebut","dateFin","archive","rapportSelectionne","setRapportSelectionne","afficherHistorique","setAfficherHistorique","afficherAjoutHistorique","setAfficherAjoutHistorique","afficherGestionAcces","setAfficherGestionAcces","operateursAvecAcces","setOperateursAvecAcces","nouvelOperateurAcces","setNouvelOperateurAcces","droitsAcces","setDroitsAcces","historiqueData","setHistoriqueData","nouvelHistorique","setNouvelHistorique","type_action","detail_action","filtresOuverts","setFiltresOuverts","authData","modalRef","accessModalRef","API_BASE_URL","process","env","REACT_APP_API_URL","fetchData","rapportsRes","typeEvRes","sousTypeEvRes","origineEvRes","zonesRes","operateursRes","Promise","all","get","data","fetchDroitsAcces","err","console","getTypeEvenementLibelle","id","_typeEvenements$find","find","t","id_type_evenement","libelle","getSousTypeEvenementLibelle","_sousTypeEvenements$f","st","id_sous_type_evenement","getOrigineEvenementLibelle","_origineEvenements$fi","o","id_origine_evenement","getZoneNom","_zones$find","z","id_zone","nom_zone","getOperateurNom","op","id_operateur","prenom","nom","formatDate","dateString","date","Date","toLocaleDateString","day","month","year","hour","minute","userPeutModifier","rapport","userId","Opid","acces","id_rapport","includes","res","droits","forEach","droit","push","fetchHistorique","idRapport","fetchRapports","handleSearchChange","e","target","value","handleFiltreChange","name","prev","reinitialiserFiltres","toggleFiltres","handleHistoriqueChange","voirDetails","_modalRef$current","current","classList","add","voirHistorique","_modalRef$current2","fermerModal","_modalRef$current3","remove","ouvrirGestionAcces","_accessModalRef$curre","fermerGestionAcces","_accessModalRef$curre2","handleNouvelOperateurChange","ajouterAccesOperateur","post","peut_modifier","date_action","getTime","toISOString","retirerAccesOperateur","idOperateur","delete","ajouterHistoriqueManuel","modifierRapport","window","location","href","telechargerHistorique","historique","length","txtContent","action","operateurNom","dateFormatee","detailAction","replace","trim","typeAction","padEnd","details","slice","operateur","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","alert","rapportsFiltres","filter","correspond","Number","date_evenement","rechercheTexte","titre","toLowerCase","description_globale","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","ref","onClick","map","index","htmlFor","rows","title","size","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/ListeRapport.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport '../css/ListeRapport.css';\r\nimport { Download } from 'lucide-react';\r\n\r\nimport Filtres from './ListeRapport/Filtres';\r\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\r\nimport DetailsRapport from './ListeRapport/DetailsRapport';\r\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\r\n\r\n/**\r\n * Composant principal pour la gestion et l'affichage des rapports.\r\n * Permet la recherche, le filtrage, la gestion des accès et l'historique.\r\n */\r\nconst ListeRapport = () => {\r\n  // =========================\r\n  // States principaux\r\n  // =========================\r\n  const [rapports, setRapports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Données pour les filtres\r\n  const [typeEvenements, setTypeEvenements] = useState([]);\r\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\r\n  const [origineEvenements, setOrigineEvenements] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [operateurs, setOperateurs] = useState([]);\r\n\r\n  // Filtres et recherche\r\n  const [filtreActif, setFiltreActif] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filtres, setFiltres] = useState({\r\n    type: '',\r\n    sousType: '',\r\n    origine: '',\r\n    zone: '',\r\n    dateDebut: '',\r\n    dateFin: '',\r\n    archive: '0'\r\n  });\r\n\r\n  // Sélection et affichage\r\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\r\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\r\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\r\n  const [afficherGestionAcces, setAfficherGestionAcces] = useState(false);\r\n\r\n  // Gestion des accès\r\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\r\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\r\n  const [droitsAcces, setDroitsAcces] = useState({});\r\n\r\n  // Historique\r\n  const [historiqueData, setHistoriqueData] = useState(null);\r\n  const [nouvelHistorique, setNouvelHistorique] = useState({\r\n    type_action: '',\r\n    detail_action: ''\r\n  });\r\n\r\n  // UI\r\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\r\n\r\n  // Authentification\r\n  const { authData } = useAuth();\r\n\r\n  // Références pour les modals\r\n  const modalRef = useRef(null);\r\n  const accessModalRef = useRef(null);\r\n\r\n  // Base URL API\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // =========================\r\n  // Effets de chargement initial\r\n  // =========================\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Récupération des données principales\r\n        const [\r\n          rapportsRes,\r\n          typeEvRes,\r\n          sousTypeEvRes,\r\n          origineEvRes,\r\n          zonesRes,\r\n          operateursRes\r\n        ] = await Promise.all([\r\n          axios.get(`${API_BASE_URL}/rapports`),\r\n          axios.get(`${API_BASE_URL}/rapports/type-evenement`),\r\n          axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`),\r\n          axios.get(`${API_BASE_URL}/rapports/origine-evenement`),\r\n          axios.get(`${API_BASE_URL}/rapports/zone-geographique`),\r\n          axios.get(`${API_BASE_URL}/rapports/operateurs`)\r\n        ]);\r\n        setRapports(rapportsRes.data);\r\n        setTypeEvenements(typeEvRes.data);\r\n        setSousTypeEvenements(sousTypeEvRes.data);\r\n        setOrigineEvenements(origineEvRes.data);\r\n        setZones(zonesRes.data);\r\n        setOperateurs(operateursRes.data);\r\n\r\n        await fetchDroitsAcces();\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des données:\", err);\r\n        setError(\"Une erreur est survenue lors du chargement des données.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // =========================\r\n  // Fonctions utilitaires\r\n  // =========================\r\n\r\n  // Récupère le libellé d'un type d'événement\r\n  const getTypeEvenementLibelle = (id) =>\r\n    typeEvenements.find(t => t.id_type_evenement === id)?.libelle || 'Non défini';\r\n\r\n  // Récupère le libellé d'un sous-type d'événement\r\n  const getSousTypeEvenementLibelle = (id) =>\r\n    sousTypeEvenements.find(st => st.id_sous_type_evenement === id)?.libelle || 'Non défini';\r\n\r\n  // Récupère le libellé d'une origine d'événement\r\n  const getOrigineEvenementLibelle = (id) =>\r\n    origineEvenements.find(o => o.id_origine_evenement === id)?.libelle || 'Non défini';\r\n\r\n  // Récupère le nom d'une zone\r\n  const getZoneNom = (id) =>\r\n    zones.find(z => z.id_zone === id)?.nom_zone || 'Non définie';\r\n\r\n  // Récupère le nom complet d'un opérateur\r\n  const getOperateurNom = (id) => {\r\n    const op = operateurs.find(o => o.id_operateur === id);\r\n    return op ? `${op.prenom} ${op.nom}` : `Opérateur ID ${id}`;\r\n  };\r\n\r\n  // Formate une date en français\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Vérifie si l'utilisateur courant peut modifier le rapport\r\n  const userPeutModifier = (rapport) => {\r\n    if (!authData || !rapport) return false;\r\n    const userId = authData.Opid;\r\n    if (rapport.id_operateur === userId) return true;\r\n    const acces = droitsAcces[rapport.id_rapport] || [];\r\n    return acces.includes(userId);\r\n  };\r\n\r\n  // =========================\r\n  // Fonctions de gestion API\r\n  // =========================\r\n\r\n  // Récupère tous les droits d'accès\r\n  const fetchDroitsAcces = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\r\n      const droits = {};\r\n      res.data.forEach(droit => {\r\n        if (!droits[droit.id_rapport]) droits[droit.id_rapport] = [];\r\n        droits[droit.id_rapport].push(droit.id_operateur);\r\n      });\r\n      setDroitsAcces(droits);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\r\n    }\r\n  };\r\n\r\n  // Récupère l'historique d'un rapport\r\n  const fetchHistorique = async (idRapport) => {\r\n    try {\r\n      const res = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Récupère tous les rapports (utile pour réinitialiser)\r\n  const fetchRapports = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(`${API_BASE_URL}/rapports`);\r\n      setRapports(res.data);\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // Handlers UI et actions\r\n  // =========================\r\n\r\n  // Gestion de la recherche\r\n  const handleSearchChange = (e) => setSearchTerm(e.target.value);\r\n\r\n  // Gestion des filtres\r\n  const handleFiltreChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltres(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Réinitialise tous les filtres\r\n  const reinitialiserFiltres = async () => {\r\n    setFiltres({\r\n      type: '',\r\n      sousType: '',\r\n      origine: '',\r\n      zone: '',\r\n      dateDebut: '',\r\n      dateFin: ''\r\n    });\r\n    setSearchTerm('');\r\n    setFiltreActif(false);\r\n    await fetchRapports();\r\n  };\r\n\r\n  // Bascule l'affichage des filtres\r\n  const toggleFiltres = () => setFiltresOuverts(prev => !prev);\r\n\r\n  // Gestion du formulaire d'ajout d'historique\r\n  const handleHistoriqueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNouvelHistorique(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Ouvre la modal de détails d'un rapport\r\n  const voirDetails = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(false);\r\n    setAfficherGestionAcces(false);\r\n    setHistoriqueData(await fetchHistorique(rapport.id_rapport));\r\n    modalRef.current?.classList.add('active');\r\n  };\r\n\r\n  // Ouvre la modal d'historique d'un rapport\r\n  const voirHistorique = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(true);\r\n    setAfficherGestionAcces(false);\r\n    setHistoriqueData(await fetchHistorique(rapport.id_rapport));\r\n    modalRef.current?.classList.add('active');\r\n  };\r\n\r\n  // Ferme la modal principale\r\n  const fermerModal = () => modalRef.current?.classList.remove('active');\r\n\r\n  // Ouvre la modal de gestion des accès\r\n  const ouvrirGestionAcces = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    try {\r\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\r\n      setOperateursAvecAcces(res.data);\r\n      setAfficherGestionAcces(true);\r\n      accessModalRef.current?.classList.add('active');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des accès:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\r\n    }\r\n  };\r\n\r\n  // Ferme la modal de gestion des accès\r\n  const fermerGestionAcces = () => {\r\n    accessModalRef.current?.classList.remove('active');\r\n    setNouvelOperateurAcces('');\r\n  };\r\n\r\n  // Gestion du champ opérateur à ajouter\r\n  const handleNouvelOperateurChange = (e) => setNouvelOperateurAcces(e.target.value);\r\n\r\n  // Ajoute un accès opérateur à un rapport\r\n  const ajouterAccesOperateur = async () => {\r\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\r\n        id_operateur: nouvelOperateurAcces,\r\n        peut_modifier: true\r\n      });\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: nouvelOperateurAcces,\r\n        type_action: 'AJOUT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(res.data);\r\n      await fetchDroitsAcces();\r\n      setNouvelOperateurAcces('');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\r\n    }\r\n  };\r\n\r\n  // Retire un accès opérateur d'un rapport\r\n  const retirerAccesOperateur = async (idOperateur) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\r\n      const res = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(res.data);\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: idOperateur,\r\n        type_action: 'RETRAIT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du retrait d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\r\n    }\r\n  };\r\n\r\n  // Ajoute un historique manuel à un rapport\r\n  const ajouterHistoriqueManuel = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: authData.Opid,\r\n        type_action: nouvelHistorique.type_action,\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: nouvelHistorique.detail_action\r\n      });\r\n      setHistoriqueData(await fetchHistorique(rapportSelectionne.id_rapport));\r\n      setNouvelHistorique({ type_action: '', detail_action: '' });\r\n      setAfficherAjoutHistorique(false);\r\n      setAfficherHistorique(true);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\r\n    }\r\n  };\r\n\r\n  // Redirige vers la page de modification du rapport\r\n  const modifierRapport = (idRapport) => {\r\n    window.location.href = `/modifier-rapport/${idRapport}`;\r\n  };\r\n\r\n  // Télécharge l'historique d'un rapport au format texte\r\n  const telechargerHistorique = async (rapport) => {\r\n    try {\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n      if (historique && historique.length > 0) {\r\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\r\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\r\n        historique.forEach(action => {\r\n          const operateurNom = getOperateurNom(action.id_operateur);\r\n          const dateFormatee = formatDate(action.date_action);\r\n          const detailAction = action.detail_action\r\n            ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim()\r\n            : \"\";\r\n          const typeAction = action.type_action.padEnd(20);\r\n          const details = detailAction.slice(0, 35).padEnd(35);\r\n          const operateur = operateurNom.padEnd(19);\r\n          const date = dateFormatee.padEnd(20);\r\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\r\n        });\r\n        const blob = new Blob([txtContent], { type: 'text/plain;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n      } else {\r\n        alert(\"Aucun historique disponible pour ce rapport.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\r\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\r\n    }\r\n  };\r\n\r\n  // =========================\r\n  // Filtrage des rapports\r\n  // =========================\r\n  const rapportsFiltres = rapports.filter(rapport => {\r\n    const correspond = (\r\n      (!filtres.type || rapport.id_type_evenement === Number(filtres.type)) &&\r\n      (!filtres.sousType || rapport.id_sous_type_evenement === Number(filtres.sousType)) &&\r\n      (!filtres.origine || rapport.id_origine_evenement === Number(filtres.origine)) &&\r\n      (!filtres.zone || rapport.id_zone === Number(filtres.zone)) &&\r\n      (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) &&\r\n      (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) &&\r\n      (!filtres.archive || rapport.archive == filtres.archive)\r\n    );\r\n    const rechercheTexte = searchTerm\r\n      ? (\r\n        rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      : true;\r\n    return correspond && rechercheTexte;\r\n  });\r\n\r\n  // =========================\r\n  // Rendu du composant\r\n  // =========================\r\n  return (\r\n    <div className=\"liste-rapport-container\">\r\n      <h1>Liste des Rapports</h1>\r\n\r\n      {/* Barre de recherche */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un rapport...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n        />\r\n        <button className=\"btn btn-primary search-btn\">\r\n          <i className=\"search-icon\">🔍</i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtres */}\r\n      <Filtres\r\n        filtres={filtres}\r\n        handleFiltreChange={handleFiltreChange}\r\n        toggleFiltres={toggleFiltres}\r\n        filtresOuverts={filtresOuverts}\r\n        reinitialiserFiltres={reinitialiserFiltres}\r\n        filtreActif={filtreActif}\r\n        typeEvenements={typeEvenements}\r\n        sousTypeEvenements={sousTypeEvenements}\r\n        origineEvenements={origineEvenements}\r\n        zones={zones}\r\n      />\r\n\r\n      {/* Liste des rapports */}\r\n      <RapportsTable\r\n        loading={loading}\r\n        error={error}\r\n        rapportsFiltres={rapportsFiltres}\r\n        getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n        getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n        getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n        formatDate={formatDate}\r\n        getOperateurNom={getOperateurNom}\r\n        voirDetails={voirDetails}\r\n        voirHistorique={voirHistorique}\r\n        userPeutModifier={userPeutModifier}\r\n        modifierRapport={modifierRapport}\r\n        authData={authData}\r\n        ouvrirGestionAcces={ouvrirGestionAcces}\r\n      />\r\n\r\n      {/* Modal pour détails et historique */}\r\n      <div className=\"modal\" ref={modalRef}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h2>\r\n              {afficherHistorique\r\n                ? \"Historique du rapport\"\r\n                : afficherAjoutHistorique\r\n                  ? \"Ajouter un historique\"\r\n                  : \"Détails du rapport\"}\r\n            </h2>\r\n            <button className=\"close-btn\" onClick={fermerModal}>&times;</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {rapportSelectionne && (\r\n              <>\r\n                {afficherHistorique ? (\r\n                  <div className=\"historique-rapport\">\r\n                    <h3>Historique des actions</h3>\r\n                    {historiqueData ? (\r\n                      historiqueData.length > 0 ? (\r\n                        historiqueData.map((action, index) => (\r\n                          <div key={index} className=\"historique-item\">\r\n                            <p><strong>Action:</strong> {action.type_action}</p>\r\n                            <p><strong>Détails:</strong> {action.detail_action}</p>\r\n                            <p><strong>Opérateur:</strong> {getOperateurNom(action.id_operateur)}</p>\r\n                            <p><strong>Date:</strong> {formatDate(action.date_action)}</p>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>Aucun historique disponible.</p>\r\n                      )\r\n                    ) : (\r\n                      <p>Chargement de l'historique...</p>\r\n                    )}\r\n                  </div>\r\n                ) : afficherAjoutHistorique ? (\r\n                  <div className=\"ajout-historique-form\">\r\n                    <h3>Ajouter un élément d'historique</h3>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"type_action\">Type d'action:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"type_action\"\r\n                        name=\"type_action\"\r\n                        value={nouvelHistorique.type_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"detail_action\">Détails:</label>\r\n                      <textarea\r\n                        id=\"detail_action\"\r\n                        name=\"detail_action\"\r\n                        value={nouvelHistorique.detail_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Décrivez l'action ou l'observation en détail...\"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <DetailsRapport\r\n                    rapportSelectionne={rapportSelectionne}\r\n                    formatDate={formatDate}\r\n                    getOperateurNom={getOperateurNom}\r\n                    getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n                    getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n                    getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n                    getZoneNom={getZoneNom}\r\n                    historique={historiqueData}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                  setAfficherHistorique(true);\r\n                  setAfficherAjoutHistorique(false);\r\n                  setHistoriqueData(await fetchHistorique(rapportSelectionne.id_rapport));\r\n                }}\r\n              >\r\n                Voir l'historique\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setAfficherHistorique(false);\r\n                  setAfficherAjoutHistorique(true);\r\n                }}\r\n              >\r\n                Ajouter un historique manuel\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherHistorique && (\r\n              <button\r\n                className=\"btn-icon text-info\"\r\n                onClick={() => telechargerHistorique(rapportSelectionne)}\r\n                title=\"Télécharger l'historique\"\r\n              >\r\n                <Download size={18} />\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherAjoutHistorique && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={ajouterHistoriqueManuel}\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setAfficherAjoutHistorique(false);\r\n                    setAfficherHistorique(false);\r\n                  }}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </>\r\n            )}\r\n            {rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => modifierRapport(rapportSelectionne.id_rapport)}\r\n              >\r\n                Modifier\r\n              </button>\r\n            )}\r\n            <button className=\"btn btn-primary\" onClick={fermerModal}>Fermer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal pour la gestion des accès */}\r\n      <GestionAccesModal\r\n        accessModalRef={accessModalRef}\r\n        rapportSelectionne={rapportSelectionne}\r\n        operateurs={operateurs}\r\n        operateursAvecAcces={operateursAvecAcces}\r\n        nouvelOperateurAcces={nouvelOperateurAcces}\r\n        handleNouvelOperateurChange={handleNouvelOperateurChange}\r\n        ajouterAccesOperateur={ajouterAccesOperateur}\r\n        retirerAccesOperateur={retirerAccesOperateur}\r\n        fermerGestionAcces={fermerGestionAcces}\r\n        afficherAjoutHistorique={afficherAjoutHistorique}\r\n        afficherHistorique={afficherHistorique}\r\n        setAfficherAjoutHistorique={setAfficherAjoutHistorique}\r\n        setAfficherHistorique={setAfficherHistorique}\r\n        nouvelHistorique={nouvelHistorique}\r\n        handleHistoriqueChange={handleHistoriqueChange}\r\n        ajouterHistoriqueManuel={ajouterHistoriqueManuel}\r\n        fetchHistorique={fetchHistorique}\r\n        setHistoriqueData={setHistoriqueData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeRapport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}