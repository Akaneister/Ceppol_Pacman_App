{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport ResourceCategory from './Home/ResourceCategory';\nimport Loading from './Home/Loading';\nimport ErrorMessage from './Home/ErrorMessage';\nimport '../css/home.css';\n\n// Récupère l'URL de base de l'API depuis les variables d'environnement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\nconst Home = () => {\n  _s();\n  // Récupère les données d'authentification de l'utilisateur\n  const {\n    authData\n  } = useAuth();\n\n  // State pour stocker les ressources récupérées\n  const [ressources, setRessources] = useState([]);\n\n  // State pour gérer l'affichage du chargement\n  const [loading, setLoading] = useState(true);\n\n  // State pour gérer les erreurs éventuelles\n  const [error, setError] = useState(null);\n\n  // useEffect pour charger les ressources au montage du composant\n  useEffect(() => {\n    const fetchRessources = async () => {\n      try {\n        // Appel à l'API pour récupérer les ressources\n        const response = await fetch(`${API_BASE_URL}/ressources`);\n        if (!response.ok) throw new Error('Erreur serveur');\n        const data = await response.json();\n        setRessources(data); // Stocke les ressources dans le state\n        setError(null); // Réinitialise l'erreur\n      } catch (err) {\n        console.error(err);\n        setError(\"Impossible de charger les ressources.\"); // Gère l'erreur\n      } finally {\n        setLoading(false); // Désactive le chargement\n      }\n    };\n    fetchRessources();\n  }, []);\n\n  // Regroupe les ressources par type pour l'affichage\n  const ressourcesByType = ressources.reduce((acc, res) => {\n    const type = res.type || 'Autre';\n    acc[type] = acc[type] || [];\n    acc[type].push(res);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Bonjour \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: authData.selectedOperateur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resources-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ressources disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), Object.keys(ressourcesByType).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-resources\",\n          children: \"Aucune ressource disponible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this) :\n        // Affiche chaque catégorie de ressources\n        Object.entries(ressourcesByType).map(([type, items]) => /*#__PURE__*/_jsxDEV(ResourceCategory, {\n          type: type,\n          items: items,\n          apiUrl: API_BASE_URL\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mVm2ZJWFbk4OEx3l0k7aH0uXv+M=\", false, function () {\n  return [useAuth];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useAuth","ResourceCategory","Loading","ErrorMessage","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","Home","_s","authData","ressources","setRessources","loading","setLoading","error","setError","fetchRessources","response","fetch","ok","Error","data","json","err","console","ressourcesByType","reduce","acc","res","type","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedOperateur","message","Object","keys","length","entries","map","items","apiUrl","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/Home.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport ResourceCategory from './Home/ResourceCategory';\r\nimport Loading from './Home/Loading';\r\nimport ErrorMessage from './Home/ErrorMessage';\r\nimport '../css/home.css';\r\n\r\n// Récupère l'URL de base de l'API depuis les variables d'environnement\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst Home = () => {\r\n  // Récupère les données d'authentification de l'utilisateur\r\n  const { authData } = useAuth();\r\n\r\n  // State pour stocker les ressources récupérées\r\n  const [ressources, setRessources] = useState([]);\r\n\r\n  // State pour gérer l'affichage du chargement\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  // State pour gérer les erreurs éventuelles\r\n  const [error, setError] = useState(null);\r\n\r\n  // useEffect pour charger les ressources au montage du composant\r\n  useEffect(() => {\r\n    const fetchRessources = async () => {\r\n      try {\r\n        // Appel à l'API pour récupérer les ressources\r\n        const response = await fetch(`${API_BASE_URL}/ressources`);\r\n        if (!response.ok) throw new Error('Erreur serveur');\r\n        const data = await response.json();\r\n        setRessources(data); // Stocke les ressources dans le state\r\n        setError(null); // Réinitialise l'erreur\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"Impossible de charger les ressources.\"); // Gère l'erreur\r\n      } finally {\r\n        setLoading(false); // Désactive le chargement\r\n      }\r\n    };\r\n\r\n    fetchRessources();\r\n  }, []);\r\n\r\n  // Regroupe les ressources par type pour l'affichage\r\n  const ressourcesByType = ressources.reduce((acc, res) => {\r\n    const type = res.type || 'Autre';\r\n    acc[type] = acc[type] || [];\r\n    acc[type].push(res);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h1>Tableau de bord</h1>\r\n      <div className=\"user-info\">\r\n        {/* Affiche le nom de l'opérateur connecté */}\r\n        <span>Bonjour <strong>{authData.selectedOperateur}</strong></span>\r\n      </div>\r\n\r\n      <main className=\"home-content\">\r\n        {/* Affiche le composant de chargement, d'erreur ou la liste des ressources */}\r\n        {loading ? (\r\n          <Loading />\r\n        ) : error ? (\r\n          <ErrorMessage message={error} />\r\n        ) : (\r\n          <div className=\"resources-container\">\r\n            <h2>Ressources disponibles</h2>\r\n            {/* Affiche un message si aucune ressource n'est disponible */}\r\n            {Object.keys(ressourcesByType).length === 0 ? (\r\n              <p className=\"no-resources\">Aucune ressource disponible.</p>\r\n            ) : (\r\n              // Affiche chaque catégorie de ressources\r\n              Object.entries(ressourcesByType).map(([type, items]) => (\r\n                <ResourceCategory key={type} type={type} items={items} apiUrl={API_BASE_URL} />\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}