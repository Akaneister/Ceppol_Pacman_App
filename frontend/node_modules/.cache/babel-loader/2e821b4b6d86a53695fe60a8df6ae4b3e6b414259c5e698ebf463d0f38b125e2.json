{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\Admin\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Password = () => {\n  _s();\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [visible, setVisible] = useState({\n    admin: false,\n    user: false\n  });\n  const [editMode, setEditMode] = useState({\n    admin: false,\n    user: false\n  });\n  const [editValue, setEditValue] = useState({\n    admin: \"\",\n    user: \"\"\n  });\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    const fetchPasswords = async () => {\n      try {\n        const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\n        const admin = res.data.find(p => p.info === \"Admin\");\n        const user = res.data.find(p => p.info === \"Opérateur\");\n        if (admin) setAdminPassword(admin.mot_de_passe);\n        if (user) setUserPassword(user.mot_de_passe);\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des mots de passe\", err);\n      }\n    };\n    fetchPasswords();\n  }, [API_BASE_URL]);\n  const handleEdit = type => {\n    setEditMode(prev => ({\n      ...prev,\n      [type]: true\n    }));\n    setEditValue(prev => ({\n      ...prev,\n      [type]: type === \"admin\" ? adminPassword : userPassword\n    }));\n  };\n  const handleChange = (type, value) => {\n    setEditValue(prev => ({\n      ...prev,\n      [type]: value\n    }));\n  };\n  const handleSave = async type => {\n    const id = type === \"admin\" ? 1 : 2; // adapte selon ton backend\n    try {\n      await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\n        mot_de_passe: editValue[type]\n      });\n      if (type === \"admin\") setAdminPassword(editValue.admin);\n      if (type === \"user\") setUserPassword(editValue.user);\n      setEditMode(prev => ({\n        ...prev,\n        [type]: false\n      }));\n    } catch (err) {\n      console.error(\"Erreur lors de la mise à jour\", err);\n    }\n  };\n  const renderField = (label, type, password) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), editMode[type] ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-edit-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editValue[type],\n        onChange: e => handleChange(type, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSave(type),\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(p => ({\n          ...p,\n          [type]: false\n        })),\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: visible[type] ? password : \"••••••••\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(prev => ({\n          ...prev,\n          [type]: !prev[type]\n        })),\n        children: visible[type] ? \"Masquer\" : \"Afficher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(type),\n        children: \"\\xC9diter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"passwords-container\",\n    children: [renderField(\"Mot de passe Utilisateur\", \"admin\", adminPassword), renderField(\"Mot de passe Admin  \", \"user\", userPassword)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Password, \"HquVCbUb2U17HBYX+TkLDpFM6ow=\");\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Password","_s","adminPassword","setAdminPassword","userPassword","setUserPassword","visible","setVisible","admin","user","editMode","setEditMode","editValue","setEditValue","API_BASE_URL","process","env","REACT_APP_API_URL","fetchPasswords","res","get","data","find","p","info","mot_de_passe","err","console","error","handleEdit","type","prev","handleChange","value","handleSave","id","put","renderField","label","password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/Admin/Password.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Password = () => {\r\n  const [adminPassword, setAdminPassword] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState({ admin: false, user: false });\r\n  const [editMode, setEditMode] = useState({ admin: false, user: false });\r\n  const [editValue, setEditValue] = useState({ admin: \"\", user: \"\" });\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const fetchPasswords = async () => {\r\n      try {\r\n        const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\r\n        const admin = res.data.find((p) => p.info === \"Admin\");\r\n        const user = res.data.find((p) => p.info === \"Opérateur\");\r\n\r\n        if (admin) setAdminPassword(admin.mot_de_passe);\r\n        if (user) setUserPassword(user.mot_de_passe);\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des mots de passe\", err);\r\n      }\r\n    };\r\n\r\n    fetchPasswords();\r\n  }, [API_BASE_URL]);\r\n\r\n  const handleEdit = (type) => {\r\n    setEditMode((prev) => ({ ...prev, [type]: true }));\r\n    setEditValue((prev) => ({\r\n      ...prev,\r\n      [type]: type === \"admin\" ? adminPassword : userPassword,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (type, value) => {\r\n    setEditValue((prev) => ({ ...prev, [type]: value }));\r\n  };\r\n\r\n  const handleSave = async (type) => {\r\n    const id = type === \"admin\" ? 1 : 2; // adapte selon ton backend\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\r\n        mot_de_passe: editValue[type],\r\n      });\r\n\r\n      if (type === \"admin\") setAdminPassword(editValue.admin);\r\n      if (type === \"user\") setUserPassword(editValue.user);\r\n\r\n      setEditMode((prev) => ({ ...prev, [type]: false }));\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la mise à jour\", err);\r\n    }\r\n  };\r\n\r\n  const renderField = (label, type, password) => (\r\n    <div className=\"password-block\">\r\n      <h2>{label}</h2>\r\n      {editMode[type] ? (\r\n        <div className=\"password-edit-row\">\r\n          <input\r\n            type=\"text\"\r\n            value={editValue[type]}\r\n            onChange={(e) => handleChange(type, e.target.value)}\r\n          />\r\n          <button onClick={() => handleSave(type)}>Enregistrer</button>\r\n          <button onClick={() => setEditMode((p) => ({ ...p, [type]: false }))}>\r\n            Annuler\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"password-row\">\r\n          <span>{visible[type] ? password : \"••••••••\"}</span>\r\n          <button\r\n            onClick={() =>\r\n              setVisible((prev) => ({ ...prev, [type]: !prev[type] }))\r\n            }\r\n          >\r\n            {visible[type] ? \"Masquer\" : \"Afficher\"}\r\n          </button>\r\n          <button onClick={() => handleEdit(type)}>Éditer</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"passwords-container\">\r\n      {renderField(\"Mot de passe Utilisateur\", \"admin\", adminPassword)}\r\n      {renderField(\"Mot de passe Admin  \", \"user\", userPassword)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}