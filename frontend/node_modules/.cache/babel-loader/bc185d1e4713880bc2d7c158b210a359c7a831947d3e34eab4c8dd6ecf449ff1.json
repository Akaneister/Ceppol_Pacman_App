{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\ListeRapport.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport '../css/ListeRapport.css';\nimport { Download } from 'lucide-react';\nimport Filtres from './ListeRapport/Filtres';\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\nimport DetailsRapport from './ListeRapport/DetailsRapport';\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListeRapport = () => {\n  _s();\n  const [rapports, setRapports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [typeEvenements, setTypeEvenements] = useState([]);\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\n  const [origineEvenements, setOrigineEvenements] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [operateurs, setOperateurs] = useState([]); // Liste des opérateurs pour l'attribution d'accès\n  const [filtreActif, setFiltreActif] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtres, setFiltres] = useState({\n    type: '',\n    sousType: '',\n    origine: '',\n    zone: '',\n    dateDebut: '',\n    dateFin: '',\n    archive: '0'\n  });\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\n  const [historiqueData, setHistoriqueData] = useState(null);\n  // Ajout d'un état pour stocker les droits d'accès\n  const [droitsAcces, setDroitsAcces] = useState({});\n  //new\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\n  const [nouvelHistorique, setNouvelHistorique] = useState({\n    type_action: '',\n    detail_action: ''\n  });\n  const {\n    authData\n  } = useAuth();\n  const modalRef = useRef(null);\n  const accessModalRef = useRef(null);\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n\n  // Fonction pour charger tous les rapports\n  const fetchRapports = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\n      setRapports(response.data);\n\n      // Charger les droits d'accès pour tous les rapports\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchHistorique = async idRapport => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\n      return response.data;\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\n      return []; // Retourner un tableau vide en cas d'erreur\n    }\n  };\n\n  // Nouvelle fonction pour charger les droits d'accès\n  const fetchDroitsAcces = async () => {\n    try {\n      // Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\n      const response = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\n\n      // Organiser les droits d'accès par rapport\n      const droits = {};\n      response.data.forEach(droit => {\n        if (!droits[droit.id_rapport]) {\n          droits[droit.id_rapport] = [];\n        }\n        droits[droit.id_rapport].push(droit.id_operateur);\n      });\n      setDroitsAcces(droits);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\n    }\n  };\n  const telechargerHistorique = async rapport => {\n    try {\n      // Charger l'historique du rapport\n      const historique = await fetchHistorique(rapport.id_rapport);\n      if (historique && historique.length > 0) {\n        // Définir l'en-tête du fichier texte\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\n        historique.forEach(action => {\n          const operateurNom = getOperateurNom(action.id_operateur);\n          const dateFormatee = formatDate(action.date_action);\n          const detailAction = action.detail_action ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim() : \"\";\n\n          // Ajuster les longueurs pour aligner le tout (padding à droite)\n          const typeAction = action.type_action.padEnd(20);\n          const details = detailAction.slice(0, 35).padEnd(35);\n          const operateur = operateurNom.padEnd(19);\n          const date = dateFormatee.padEnd(20);\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\n        });\n\n        // Créer un objet Blob avec le contenu texte\n        const blob = new Blob([txtContent], {\n          type: 'text/plain;charset=utf-8;'\n        });\n        const url = URL.createObjectURL(blob);\n\n        // Créer un lien pour télécharger le fichier\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\n        link.style.visibility = 'hidden';\n\n        // Ajouter le lien au DOM, cliquer dessus, puis le supprimer\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // Libérer l'URL\n        URL.revokeObjectURL(url);\n      } else {\n        alert(\"Aucun historique disponible pour ce rapport.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\n    }\n  };\n\n  //new 558\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\n\n  // Fonction pour basculer l'état des filtres\n  const toggleFiltres = () => {\n    setFiltresOuverts(prevState => !prevState);\n  };\n\n  // Charger les données au montage du composant\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Récupérer tous les rapports\n        const rapportsResponse = await axios.get(`${API_BASE_URL}/rapports`);\n\n        // Récupérer les données pour les filtres\n        const typeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/type-evenement`);\n        const sousTypeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);\n        const origineEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);\n        const zonesResponse = await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);\n        const operateursResponse = await axios.get(`${API_BASE_URL}/rapports/operateurs`);\n        setRapports(rapportsResponse.data);\n        setTypeEvenements(typeEvenementsResponse.data);\n        setSousTypeEvenements(sousTypeEvenementsResponse.data);\n        setOrigineEvenements(origineEvenementsResponse.data);\n        setZones(zonesResponse.data);\n        setOperateurs(operateursResponse.data);\n\n        // Charger les droits d'accès\n        await fetchDroitsAcces();\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des données:\", err);\n        setError(\"Une erreur est survenue lors du chargement des données.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [API_BASE_URL, fetchDroitsAcces]);\n\n  // Fonctions utilitaires pour obtenir les libellés\n  const getTypeEvenementLibelle = id => {\n    const type = typeEvenements.find(t => t.id_type_evenement === id);\n    return type ? type.libelle : 'Non défini';\n  };\n  const getSousTypeEvenementLibelle = id => {\n    const sousType = sousTypeEvenements.find(st => st.id_sous_type_evenement === id);\n    return sousType ? sousType.libelle : 'Non défini';\n  };\n  const getOrigineEvenementLibelle = id => {\n    const origine = origineEvenements.find(o => o.id_origine_evenement === id);\n    return origine ? origine.libelle : 'Non défini';\n  };\n  const getZoneNom = id => {\n    const zone = zones.find(z => z.id_zone === id);\n    return zone ? zone.nom_zone : 'Non définie';\n  };\n  const getOperateurNom = id => {\n    const operateur = operateurs.find(o => o.id_operateur === id);\n    return operateur ? `${operateur.prenom} ${operateur.nom}` : `Opérateur ID ${id}`;\n  };\n\n  // Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\n  const userPeutModifier = rapport => {\n    if (!authData || !rapport) return false;\n    const userId = authData.Opid;\n\n    // Vérifie si l'utilisateur est le créateur\n    if (rapport.id_operateur === userId) {\n      return true;\n    }\n\n    // Vérifie s'il a reçu un accès dans acces_rapport\n    const operateursAvecAcces = droitsAcces[rapport.id_rapport] || [];\n    return operateursAvecAcces.includes(userId);\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleFiltreChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFiltres(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleHistoriqueChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNouvelHistorique(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const reinitialiserFiltres = async () => {\n    setFiltres({\n      type: '',\n      sousType: '',\n      origine: '',\n      zone: '',\n      dateDebut: '',\n      dateFin: ''\n    });\n    setSearchTerm('');\n    setFiltreActif(false);\n\n    // Recharger tous les rapports\n    await fetchRapports();\n  };\n  const voirDetails = async rapport => {\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(false);\n\n    // Charger l'historique du rapport sélectionné\n    const historique = await fetchHistorique(rapport.id_rapport);\n    setHistoriqueData(historique);\n\n    // Ouvrir la modal\n    if (modalRef.current) {\n      modalRef.current.classList.add('active');\n    }\n  };\n\n  // Modifier la fonction voirHistorique pour charger immédiatement l'historique\n  const voirHistorique = async rapport => {\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(true);\n    try {\n      // Charger l'historique dès qu'on clique sur le bouton\n      const historique = await fetchHistorique(rapport.id_rapport);\n      setHistoriqueData(historique);\n    } catch (err) {\n      console.error(\"Erreur lors du chargement de l'historique:\", err);\n    }\n\n    // Ouvrir la modal\n    if (modalRef.current) {\n      modalRef.current.classList.add('active');\n    }\n  };\n  const fermerModal = () => {\n    if (modalRef.current) {\n      modalRef.current.classList.remove('active');\n    }\n  };\n\n  // Nouvelles fonctions pour la gestion des accès\n  const ouvrirGestionAcces = async rapport => {\n    setRapportSelectionne(rapport);\n    try {\n      // Récupérer la liste des opérateurs ayant accès au rapport\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n\n      // SUPPRIMER cette ligne :\n      // setAfficherGestionAcces(true);\n\n      // Ouvrir la modal\n      if (accessModalRef.current) {\n        accessModalRef.current.classList.add('active');\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des accès:\", err);\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\n    }\n  };\n  const fermerGestionAcces = () => {\n    if (accessModalRef.current) {\n      accessModalRef.current.classList.remove('active');\n    }\n    setNouvelOperateurAcces('');\n  };\n  const handleNouvelOperateurChange = e => {\n    setNouvelOperateurAcces(e.target.value);\n  };\n  const ajouterAccesOperateur = async () => {\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\n        id_operateur: nouvelOperateurAcces,\n        peut_modifier: true // Définir à true pour permettre la modification\n      });\n\n      // Ajouter une entrée dans l'historique\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: nouvelOperateurAcces,\n        type_action: 'AJOUT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n\n      // Rafraîchir la liste des opérateurs avec accès\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n\n      // Mettre à jour les droits d'accès globaux\n      await fetchDroitsAcces();\n      setNouvelOperateurAcces('');\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\n    }\n  };\n  const ajouterHistoriqueManuel = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: authData.Opid,\n        type_action: nouvelHistorique.type_action,\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: nouvelHistorique.detail_action\n      });\n\n      // Recharger l'historique après l'ajout\n      const historique = await fetchHistorique(rapportSelectionne.id_rapport);\n      setHistoriqueData(historique);\n\n      // Réinitialiser le formulaire\n      setNouvelHistorique({\n        type_action: '',\n        detail_action: ''\n      });\n\n      // Revenir à l'affichage de l'historique\n      setAfficherAjoutHistorique(false);\n      setAfficherHistorique(true);\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\n    }\n  };\n  const retirerAccesOperateur = async idOperateur => {\n    try {\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\n\n      // Rafraîchir la liste des opérateurs avec accès\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n\n      // Ajouter une entrée dans l'historique\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: idOperateur,\n        type_action: 'RETRAIT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n\n      // Mettre à jour les droits d'accès globaux\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors du retrait d'accès:\", err);\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\n    }\n  };\n\n  // Rediriger vers la page de modification du rapport\n  const modifierRapport = idRapport => {\n    window.location.href = `/modifier-rapport/${idRapport}`;\n  };\n\n  // Filtrer les rapports en fonction du terme de recherche\n  const rapportsFiltres = rapports.filter(rapport => {\n    const correspond = (!filtres.type || rapport.id_type_evenement === filtres.type) && (!filtres.sousType || rapport.id_sous_type_evenement === filtres.sousType) && (!filtres.origine || rapport.id_origine_evenement === filtres.origine) && (!filtres.zone || rapport.id_zone === filtres.zone) && (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) && (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) && (!filtres.archive || rapport.archive === filtres.archive);\n    const rechercheTexte = searchTerm ? rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) || rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) || getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase()) : true;\n    return correspond && rechercheTexte;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste-rapport-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des Rapports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher un rapport...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary search-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search-icon\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filtres, {\n      filtres: filtres,\n      handleFiltreChange: handleFiltreChange,\n      toggleFiltres: toggleFiltres,\n      filtresOuverts: filtresOuverts,\n      reinitialiserFiltres: reinitialiserFiltres,\n      filtreActif: filtreActif,\n      typeEvenements: typeEvenements,\n      sousTypeEvenements: sousTypeEvenements,\n      origineEvenements: origineEvenements,\n      zones: zones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RapportsTable, {\n      loading: loading,\n      error: error,\n      rapportsFiltres: rapportsFiltres,\n      getTypeEvenementLibelle: getTypeEvenementLibelle,\n      getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n      getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n      formatDate: formatDate,\n      getOperateurNom: getOperateurNom,\n      voirDetails: voirDetails,\n      voirHistorique: voirHistorique,\n      userPeutModifier: userPeutModifier,\n      modifierRapport: modifierRapport,\n      authData: authData,\n      ouvrirGestionAcces: ouvrirGestionAcces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: afficherHistorique ? \"Historique du rapport\" : afficherAjoutHistorique ? \"Ajouter un historique\" : \"Détails du rapport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: fermerModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: rapportSelectionne && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: afficherHistorique ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"historique-rapport\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Historique des actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), historiqueData ? historiqueData.length > 0 ? historiqueData.map((action, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"historique-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Action:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 32\n                  }, this), \" \", action.type_action]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"D\\xE9tails:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 32\n                  }, this), \" \", action.detail_action]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Op\\xE9rateur:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 32\n                  }, this), \" \", getOperateurNom(action.id_operateur)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 32\n                  }, this), \" \", formatDate(action.date_action)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 27\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Aucun historique disponible.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Chargement de l'historique...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this) : afficherAjoutHistorique ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ajout-historique-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Ajouter un \\xE9l\\xE9ment d'historique\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"type_action\",\n                  children: \"Type d'action:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"type_action\",\n                  name: \"type_action\",\n                  value: nouvelHistorique.type_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  placeholder: \"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"detail_action\",\n                  children: \"D\\xE9tails:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"detail_action\",\n                  name: \"detail_action\",\n                  value: nouvelHistorique.detail_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  rows: \"4\",\n                  placeholder: \"D\\xE9crivez l'action ou l'observation en d\\xE9tail...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(DetailsRapport, {\n              rapportSelectionne: rapportSelectionne,\n              formatDate: formatDate,\n              getOperateurNom: getOperateurNom,\n              getTypeEvenementLibelle: getTypeEvenementLibelle,\n              getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n              getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n              getZoneNom: getZoneNom,\n              historique: historiqueData // <-- Ajout ici\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: async () => {\n              setAfficherHistorique(true);\n              setAfficherAjoutHistorique(false);\n              const historique = await fetchHistorique(rapportSelectionne.id_rapport);\n              setHistoriqueData(historique);\n            },\n            children: \"Voir l'historique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => {\n              setAfficherHistorique(false);\n              setAfficherAjoutHistorique(true);\n            },\n            children: \"Ajouter un historique manuel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-icon text-info\",\n            onClick: () => telechargerHistorique(rapportSelectionne),\n            title: \"T\\xE9l\\xE9charger l'historique\",\n            children: /*#__PURE__*/_jsxDEV(Download, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: ajouterHistoriqueManuel,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => {\n                setAfficherAjoutHistorique(false);\n                setAfficherHistorique(false);\n              },\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => modifierRapport(rapportSelectionne.id_rapport),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: fermerModal,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GestionAccesModal, {\n      accessModalRef: accessModalRef,\n      rapportSelectionne: rapportSelectionne,\n      operateurs: operateurs,\n      operateursAvecAcces: operateursAvecAcces,\n      nouvelOperateurAcces: nouvelOperateurAcces,\n      handleNouvelOperateurChange: handleNouvelOperateurChange,\n      ajouterAccesOperateur: ajouterAccesOperateur,\n      retirerAccesOperateur: retirerAccesOperateur,\n      fermerGestionAcces: fermerGestionAcces,\n      afficherAjoutHistorique: afficherAjoutHistorique,\n      afficherHistorique: afficherHistorique,\n      setAfficherAjoutHistorique: setAfficherAjoutHistorique,\n      setAfficherHistorique: setAfficherHistorique,\n      nouvelHistorique: nouvelHistorique,\n      handleHistoriqueChange: handleHistoriqueChange,\n      ajouterHistoriqueManuel: ajouterHistoriqueManuel,\n      fetchHistorique: fetchHistorique,\n      setHistoriqueData: setHistoriqueData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 488,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeRapport, \"toybqwEMwVVD5bM2ZYsqvC5aD2E=\", false, function () {\n  return [useAuth];\n});\n_c = ListeRapport;\nexport default ListeRapport;\nvar _c;\n$RefreshReg$(_c, \"ListeRapport\");","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","axios","Download","Filtres","RapportsTable","DetailsRapport","GestionAccesModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ListeRapport","_s","rapports","setRapports","loading","setLoading","error","setError","typeEvenements","setTypeEvenements","sousTypeEvenements","setSousTypeEvenements","origineEvenements","setOrigineEvenements","zones","setZones","operateurs","setOperateurs","filtreActif","setFiltreActif","searchTerm","setSearchTerm","filtres","setFiltres","type","sousType","origine","zone","dateDebut","dateFin","archive","rapportSelectionne","setRapportSelectionne","afficherHistorique","setAfficherHistorique","operateursAvecAcces","setOperateursAvecAcces","nouvelOperateurAcces","setNouvelOperateurAcces","historiqueData","setHistoriqueData","droitsAcces","setDroitsAcces","afficherAjoutHistorique","setAfficherAjoutHistorique","nouvelHistorique","setNouvelHistorique","type_action","detail_action","authData","modalRef","accessModalRef","API_BASE_URL","process","env","REACT_APP_API_URL","fetchRapports","response","get","data","fetchDroitsAcces","err","console","fetchHistorique","idRapport","droits","forEach","droit","id_rapport","push","id_operateur","telechargerHistorique","rapport","historique","length","txtContent","action","operateurNom","getOperateurNom","dateFormatee","formatDate","date_action","detailAction","replace","trim","typeAction","padEnd","details","slice","operateur","date","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","alert","filtresOuverts","setFiltresOuverts","toggleFiltres","prevState","fetchData","rapportsResponse","typeEvenementsResponse","sousTypeEvenementsResponse","origineEvenementsResponse","zonesResponse","operateursResponse","getTypeEvenementLibelle","id","find","t","id_type_evenement","libelle","getSousTypeEvenementLibelle","st","id_sous_type_evenement","getOrigineEvenementLibelle","o","id_origine_evenement","getZoneNom","z","id_zone","nom_zone","prenom","nom","userPeutModifier","userId","Opid","includes","dateString","Date","toLocaleDateString","day","month","year","hour","minute","handleSearchChange","e","target","value","handleFiltreChange","name","prev","handleHistoriqueChange","reinitialiserFiltres","voirDetails","current","classList","add","voirHistorique","fermerModal","remove","ouvrirGestionAcces","fermerGestionAcces","handleNouvelOperateurChange","ajouterAccesOperateur","post","peut_modifier","getTime","toISOString","ajouterHistoriqueManuel","retirerAccesOperateur","idOperateur","delete","modifierRapport","window","location","href","rapportsFiltres","filter","correspond","date_evenement","rechercheTexte","titre","toLowerCase","description_globale","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","ref","onClick","map","index","htmlFor","rows","title","size","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/ListeRapport.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport '../css/ListeRapport.css';\r\nimport { Download } from 'lucide-react'\r\n\r\n\r\nimport Filtres from './ListeRapport/Filtres';\r\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\r\nimport DetailsRapport from './ListeRapport/DetailsRapport';\r\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\r\n\r\n\r\nconst ListeRapport = () => {\r\n\r\n  const [rapports, setRapports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [typeEvenements, setTypeEvenements] = useState([]);\r\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\r\n  const [origineEvenements, setOrigineEvenements] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [operateurs, setOperateurs] = useState([]); // Liste des opérateurs pour l'attribution d'accès\r\n  const [filtreActif, setFiltreActif] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filtres, setFiltres] = useState({\r\n    type: '',\r\n    sousType: '',\r\n    origine: '',\r\n    zone: '',\r\n    dateDebut: '',\r\n    dateFin: '',\r\n    archive: '0'\r\n  });\r\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\r\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\r\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\r\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\r\n  const [historiqueData, setHistoriqueData] = useState(null);\r\n  // Ajout d'un état pour stocker les droits d'accès\r\n  const [droitsAcces, setDroitsAcces] = useState({});\r\n  //new\r\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\r\n  const [nouvelHistorique, setNouvelHistorique] = useState({\r\n    type_action: '',\r\n    detail_action: ''\r\n  });\r\n\r\n  const { authData } = useAuth();\r\n\r\n  const modalRef = useRef(null);\r\n  const accessModalRef = useRef(null);\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Fonction pour charger tous les rapports\r\n  const fetchRapports = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\r\n      setRapports(response.data);\r\n\r\n      // Charger les droits d'accès pour tous les rapports\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchHistorique = async (idRapport) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\r\n      return []; // Retourner un tableau vide en cas d'erreur\r\n    }\r\n  };\r\n\r\n  // Nouvelle fonction pour charger les droits d'accès\r\n  const fetchDroitsAcces = async () => {\r\n    try {\r\n      // Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\r\n\r\n      // Organiser les droits d'accès par rapport\r\n      const droits = {};\r\n      response.data.forEach(droit => {\r\n        if (!droits[droit.id_rapport]) {\r\n          droits[droit.id_rapport] = [];\r\n        }\r\n        droits[droit.id_rapport].push(droit.id_operateur);\r\n      });\r\n\r\n      setDroitsAcces(droits);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\r\n    }\r\n  };\r\n\r\n  const telechargerHistorique = async (rapport) => {\r\n    try {\r\n      // Charger l'historique du rapport\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n\r\n      if (historique && historique.length > 0) {\r\n        // Définir l'en-tête du fichier texte\r\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\r\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\r\n\r\n        historique.forEach(action => {\r\n          const operateurNom = getOperateurNom(action.id_operateur);\r\n          const dateFormatee = formatDate(action.date_action);\r\n          const detailAction = action.detail_action\r\n            ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim()\r\n            : \"\";\r\n\r\n          // Ajuster les longueurs pour aligner le tout (padding à droite)\r\n          const typeAction = action.type_action.padEnd(20);\r\n          const details = detailAction.slice(0, 35).padEnd(35);\r\n          const operateur = operateurNom.padEnd(19);\r\n          const date = dateFormatee.padEnd(20);\r\n\r\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\r\n        });\r\n\r\n        // Créer un objet Blob avec le contenu texte\r\n        const blob = new Blob([txtContent], { type: 'text/plain;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Créer un lien pour télécharger le fichier\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\r\n        link.style.visibility = 'hidden';\r\n\r\n        // Ajouter le lien au DOM, cliquer dessus, puis le supprimer\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        // Libérer l'URL\r\n        URL.revokeObjectURL(url);\r\n      } else {\r\n        alert(\"Aucun historique disponible pour ce rapport.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\r\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //new 558\r\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\r\n\r\n  // Fonction pour basculer l'état des filtres\r\n  const toggleFiltres = () => {\r\n    setFiltresOuverts(prevState => !prevState);\r\n  };\r\n\r\n\r\n  // Charger les données au montage du composant\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Récupérer tous les rapports\r\n        const rapportsResponse = await axios.get(`${API_BASE_URL}/rapports`);\r\n\r\n        // Récupérer les données pour les filtres\r\n        const typeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/type-evenement`);\r\n        const sousTypeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);\r\n        const origineEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);\r\n        const zonesResponse = await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);\r\n        const operateursResponse = await axios.get(`${API_BASE_URL}/rapports/operateurs`);\r\n\r\n        setRapports(rapportsResponse.data);\r\n        setTypeEvenements(typeEvenementsResponse.data);\r\n        setSousTypeEvenements(sousTypeEvenementsResponse.data);\r\n        setOrigineEvenements(origineEvenementsResponse.data);\r\n        setZones(zonesResponse.data);\r\n        setOperateurs(operateursResponse.data);\r\n\r\n        // Charger les droits d'accès\r\n        await fetchDroitsAcces();\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des données:\", err);\r\n        setError(\"Une erreur est survenue lors du chargement des données.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [API_BASE_URL, fetchDroitsAcces]);\r\n\r\n  // Fonctions utilitaires pour obtenir les libellés\r\n  const getTypeEvenementLibelle = (id) => {\r\n    const type = typeEvenements.find(t => t.id_type_evenement === id);\r\n    return type ? type.libelle : 'Non défini';\r\n  };\r\n\r\n  const getSousTypeEvenementLibelle = (id) => {\r\n    const sousType = sousTypeEvenements.find(st => st.id_sous_type_evenement === id);\r\n    return sousType ? sousType.libelle : 'Non défini';\r\n  };\r\n\r\n  const getOrigineEvenementLibelle = (id) => {\r\n    const origine = origineEvenements.find(o => o.id_origine_evenement === id);\r\n    return origine ? origine.libelle : 'Non défini';\r\n  };\r\n\r\n  const getZoneNom = (id) => {\r\n    const zone = zones.find(z => z.id_zone === id);\r\n    return zone ? zone.nom_zone : 'Non définie';\r\n  };\r\n\r\n  const getOperateurNom = (id) => {\r\n    const operateur = operateurs.find(o => o.id_operateur === id);\r\n    return operateur ? `${operateur.prenom} ${operateur.nom}` : `Opérateur ID ${id}`;\r\n  };\r\n\r\n  // Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\r\n  const userPeutModifier = (rapport) => {\r\n    if (!authData || !rapport) return false;\r\n\r\n    const userId = authData.Opid;\r\n\r\n    // Vérifie si l'utilisateur est le créateur\r\n    if (rapport.id_operateur === userId) {\r\n      return true;\r\n    }\r\n\r\n    // Vérifie s'il a reçu un accès dans acces_rapport\r\n    const operateursAvecAcces = droitsAcces[rapport.id_rapport] || [];\r\n    return operateursAvecAcces.includes(userId);\r\n  };\r\n\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleFiltreChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltres(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleHistoriqueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNouvelHistorique(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n\r\n\r\n  const reinitialiserFiltres = async () => {\r\n    setFiltres({\r\n      type: '',\r\n      sousType: '',\r\n      origine: '',\r\n      zone: '',\r\n      dateDebut: '',\r\n      dateFin: ''\r\n    });\r\n    setSearchTerm('');\r\n    setFiltreActif(false);\r\n\r\n    // Recharger tous les rapports\r\n    await fetchRapports();\r\n  };\r\n\r\n  const voirDetails = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(false);\r\n\r\n    // Charger l'historique du rapport sélectionné\r\n    const historique = await fetchHistorique(rapport.id_rapport);\r\n    setHistoriqueData(historique);\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  // Modifier la fonction voirHistorique pour charger immédiatement l'historique\r\n  const voirHistorique = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(true);\r\n\r\n    try {\r\n      // Charger l'historique dès qu'on clique sur le bouton\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n      setHistoriqueData(historique);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du chargement de l'historique:\", err);\r\n    }\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const fermerModal = () => {\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.remove('active');\r\n    }\r\n  };\r\n\r\n  // Nouvelles fonctions pour la gestion des accès\r\n  const ouvrirGestionAcces = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n\r\n    try {\r\n      // Récupérer la liste des opérateurs ayant accès au rapport\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // SUPPRIMER cette ligne :\r\n      // setAfficherGestionAcces(true);\r\n\r\n      // Ouvrir la modal\r\n      if (accessModalRef.current) {\r\n        accessModalRef.current.classList.add('active');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des accès:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\r\n    }\r\n  };\r\n\r\n  const fermerGestionAcces = () => {\r\n    if (accessModalRef.current) {\r\n      accessModalRef.current.classList.remove('active');\r\n    }\r\n    setNouvelOperateurAcces('');\r\n  };\r\n\r\n  const handleNouvelOperateurChange = (e) => {\r\n    setNouvelOperateurAcces(e.target.value);\r\n  };\r\n\r\n  const ajouterAccesOperateur = async () => {\r\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\r\n\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\r\n        id_operateur: nouvelOperateurAcces,\r\n        peut_modifier: true  // Définir à true pour permettre la modification\r\n      });\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: nouvelOperateurAcces,\r\n        type_action: 'AJOUT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n\r\n      setNouvelOperateurAcces('');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\r\n    }\r\n  };\r\n\r\n  const ajouterHistoriqueManuel = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: authData.Opid,\r\n        type_action: nouvelHistorique.type_action,\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: nouvelHistorique.detail_action\r\n      });\r\n\r\n      // Recharger l'historique après l'ajout\r\n      const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n      setHistoriqueData(historique);\r\n\r\n      // Réinitialiser le formulaire\r\n      setNouvelHistorique({\r\n        type_action: '',\r\n        detail_action: ''\r\n      });\r\n\r\n      // Revenir à l'affichage de l'historique\r\n      setAfficherAjoutHistorique(false);\r\n      setAfficherHistorique(true);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\r\n    }\r\n  };\r\n\r\n  const retirerAccesOperateur = async (idOperateur) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: idOperateur,\r\n        type_action: 'RETRAIT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du retrait d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\r\n    }\r\n  };\r\n\r\n  // Rediriger vers la page de modification du rapport\r\n  const modifierRapport = (idRapport) => {\r\n    window.location.href = `/modifier-rapport/${idRapport}`;\r\n  };\r\n\r\n  // Filtrer les rapports en fonction du terme de recherche\r\n  const rapportsFiltres = rapports.filter(rapport => {\r\n    const correspond = (\r\n      (!filtres.type || rapport.id_type_evenement === filtres.type) &&\r\n      (!filtres.sousType || rapport.id_sous_type_evenement === filtres.sousType) &&\r\n      (!filtres.origine || rapport.id_origine_evenement === filtres.origine) &&\r\n      (!filtres.zone || rapport.id_zone === filtres.zone) &&\r\n      (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) &&\r\n      (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) &&\r\n      (!filtres.archive || rapport.archive === filtres.archive)\r\n    );\r\n\r\n    const rechercheTexte = searchTerm\r\n      ? (\r\n        rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      : true;\r\n\r\n    return correspond && rechercheTexte;\r\n  });\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"liste-rapport-container\">\r\n      <h1>Liste des Rapports</h1>\r\n\r\n      {/* Barre de recherche */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un rapport...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n        />\r\n        <button className=\"btn btn-primary search-btn\">\r\n          <i className=\"search-icon\">🔍</i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtres */}\r\n      <Filtres\r\n        filtres={filtres}\r\n        handleFiltreChange={handleFiltreChange}\r\n        toggleFiltres={toggleFiltres}\r\n        filtresOuverts={filtresOuverts}\r\n        reinitialiserFiltres={reinitialiserFiltres}\r\n        filtreActif={filtreActif}\r\n        typeEvenements={typeEvenements}\r\n        sousTypeEvenements={sousTypeEvenements}\r\n        origineEvenements={origineEvenements}\r\n        zones={zones}\r\n      />\r\n\r\n      {/* Liste des rapports */}\r\n      <RapportsTable\r\n        loading={loading}\r\n        error={error}\r\n        rapportsFiltres={rapportsFiltres}\r\n        getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n        getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n        getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n        formatDate={formatDate}\r\n        getOperateurNom={getOperateurNom}\r\n        voirDetails={voirDetails}\r\n        voirHistorique={voirHistorique}\r\n        userPeutModifier={userPeutModifier}\r\n        modifierRapport={modifierRapport}\r\n        authData={authData}\r\n        ouvrirGestionAcces={ouvrirGestionAcces}\r\n      />\r\n\r\n      {/* Modal pour détails et historique */}\r\n      <div className=\"modal\" ref={modalRef}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h2>\r\n              {afficherHistorique\r\n                ? \"Historique du rapport\"\r\n                : afficherAjoutHistorique\r\n                  ? \"Ajouter un historique\"\r\n                  : \"Détails du rapport\"}\r\n            </h2>\r\n            <button className=\"close-btn\" onClick={fermerModal}>&times;</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {rapportSelectionne && (\r\n              <>\r\n                {afficherHistorique ? (\r\n                  <div className=\"historique-rapport\">\r\n                    <h3>Historique des actions</h3>\r\n                    {historiqueData ? (\r\n                      historiqueData.length > 0 ? (\r\n                        historiqueData.map((action, index) => (\r\n                          <div key={index} className=\"historique-item\">\r\n                            <p><strong>Action:</strong> {action.type_action}</p>\r\n                            <p><strong>Détails:</strong> {action.detail_action}</p>\r\n                            <p><strong>Opérateur:</strong> {getOperateurNom(action.id_operateur)}</p>\r\n                            <p><strong>Date:</strong> {formatDate(action.date_action)}</p>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p>Aucun historique disponible.</p>\r\n                      )\r\n                    ) : (\r\n                      <p>Chargement de l'historique...</p>\r\n                    )}\r\n                  </div>\r\n                ) : afficherAjoutHistorique ? (\r\n                  <div className=\"ajout-historique-form\">\r\n                    <h3>Ajouter un élément d'historique</h3>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"type_action\">Type d'action:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"type_action\"\r\n                        name=\"type_action\"\r\n                        value={nouvelHistorique.type_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"detail_action\">Détails:</label>\r\n                      <textarea\r\n                        id=\"detail_action\"\r\n                        name=\"detail_action\"\r\n                        value={nouvelHistorique.detail_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Décrivez l'action ou l'observation en détail...\"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <DetailsRapport\r\n                    rapportSelectionne={rapportSelectionne}\r\n                    formatDate={formatDate}\r\n                    getOperateurNom={getOperateurNom}\r\n                    getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n                    getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n                    getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n                    getZoneNom={getZoneNom}\r\n                    historique={historiqueData} // <-- Ajout ici\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                  setAfficherHistorique(true);\r\n                  setAfficherAjoutHistorique(false);\r\n                  const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n                  setHistoriqueData(historique);\r\n                }}\r\n              >\r\n                Voir l'historique\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setAfficherHistorique(false);\r\n                  setAfficherAjoutHistorique(true);\r\n                }}\r\n              >\r\n                Ajouter un historique manuel\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherHistorique && (\r\n              <button\r\n                className=\"btn-icon text-info\"\r\n                onClick={() => telechargerHistorique(rapportSelectionne)}\r\n                title=\"Télécharger l'historique\"\r\n              >\r\n                <Download size={18} />\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherAjoutHistorique && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={ajouterHistoriqueManuel}\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setAfficherAjoutHistorique(false);\r\n                    setAfficherHistorique(false);\r\n                  }}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </>\r\n            )}\r\n            {rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => modifierRapport(rapportSelectionne.id_rapport)}\r\n              >\r\n                Modifier\r\n              </button>\r\n            )}\r\n            <button className=\"btn btn-primary\" onClick={fermerModal}>Fermer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal pour la gestion des accès */}\r\n      <GestionAccesModal\r\n        accessModalRef={accessModalRef}\r\n        rapportSelectionne={rapportSelectionne}\r\n        operateurs={operateurs}\r\n        operateursAvecAcces={operateursAvecAcces}\r\n        nouvelOperateurAcces={nouvelOperateurAcces}\r\n        handleNouvelOperateurChange={handleNouvelOperateurChange}\r\n        ajouterAccesOperateur={ajouterAccesOperateur}\r\n        retirerAccesOperateur={retirerAccesOperateur}\r\n        fermerGestionAcces={fermerGestionAcces}\r\n        afficherAjoutHistorique={afficherAjoutHistorique}\r\n        afficherHistorique={afficherHistorique}\r\n        setAfficherAjoutHistorique={setAfficherAjoutHistorique}\r\n        setAfficherHistorique={setAfficherHistorique}\r\n        nouvelHistorique={nouvelHistorique}\r\n        handleHistoriqueChange={handleHistoriqueChange}\r\n        ajouterHistoriqueManuel={ajouterHistoriqueManuel}\r\n        fetchHistorique={fetchHistorique}\r\n        setHistoriqueData={setHistoriqueData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeRapport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}