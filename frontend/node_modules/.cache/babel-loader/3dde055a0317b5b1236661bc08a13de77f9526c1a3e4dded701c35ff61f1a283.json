{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\ListeRapport.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\nimport '../css/ListeRapport.css';\nimport { Download // Télécharger\n} from 'lucide-react';\nimport Filtres from './ListeRapport/Filtres';\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\nimport DetailsRapport from './ListeRapport/DetailsRapport';\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListeRapport = () => {\n  _s();\n  const [rapports, setRapports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [typeEvenements, setTypeEvenements] = useState([]);\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\n  const [origineEvenements, setOrigineEvenements] = useState([]);\n  const [zones, setZones] = useState([]);\n  const [operateurs, setOperateurs] = useState([]); // Liste des opérateurs pour l'attribution d'accès\n  const [filtreActif, setFiltreActif] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtres, setFiltres] = useState({\n    type: '',\n    sousType: '',\n    origine: '',\n    zone: '',\n    dateDebut: '',\n    dateFin: '',\n    archive: '0'\n  });\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setUploadStatus(\"Veuillez sélectionner un fichier.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"rapport_id\", rapportSelectionne === null || rapportSelectionne === void 0 ? void 0 : rapportSelectionne.id); // si tu veux lier le fichier à un rapport\n\n    try {\n      const res = await fetch(\"http://localhost:3000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      setUploadStatus(\"Fichier envoyé avec succès !\");\n      setFile(null);\n    } catch (error) {\n      setUploadStatus(\"Erreur lors de l'envoi du fichier.\");\n      console.error(error);\n    }\n  };\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\n  const [afficherGestionAcces, setAfficherGestionAcces] = useState(false);\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\n  const [historiqueData, setHistoriqueData] = useState(null);\n  // Ajout d'un état pour stocker les droits d'accès\n  const [droitsAcces, setDroitsAcces] = useState({});\n  //new\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\n  const [nouvelHistorique, setNouvelHistorique] = useState({\n    type_action: '',\n    detail_action: ''\n  });\n  const {\n    authData\n  } = useAuth();\n  const modalRef = useRef(null);\n  const accessModalRef = useRef(null);\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n\n  // Fonction pour charger tous les rapports\n  const fetchRapports = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\n      setRapports(response.data);\n\n      // Charger les droits d'accès pour tous les rapports\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchHistorique = async idRapport => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\n      return response.data;\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\n      return []; // Retourner un tableau vide en cas d'erreur\n    }\n  };\n\n  // Nouvelle fonction pour charger les droits d'accès\n  const fetchDroitsAcces = async () => {\n    try {\n      // Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\n      const response = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\n\n      // Organiser les droits d'accès par rapport\n      const droits = {};\n      response.data.forEach(droit => {\n        if (!droits[droit.id_rapport]) {\n          droits[droit.id_rapport] = [];\n        }\n        droits[droit.id_rapport].push(droit.id_operateur);\n      });\n      setDroitsAcces(droits);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\n    }\n  };\n  const telechargerHistorique = async rapport => {\n    try {\n      // Charger l'historique du rapport\n      const historique = await fetchHistorique(rapport.id_rapport);\n      if (historique && historique.length > 0) {\n        // Définir l'en-tête du fichier texte\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\n        historique.forEach(action => {\n          const operateurNom = getOperateurNom(action.id_operateur);\n          const dateFormatee = formatDate(action.date_action);\n          const detailAction = action.detail_action ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim() : \"\";\n\n          // Ajuster les longueurs pour aligner le tout (padding à droite)\n          const typeAction = action.type_action.padEnd(20);\n          const details = detailAction.slice(0, 35).padEnd(35);\n          const operateur = operateurNom.padEnd(19);\n          const date = dateFormatee.padEnd(20);\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\n        });\n\n        // Créer un objet Blob avec le contenu texte\n        const blob = new Blob([txtContent], {\n          type: 'text/plain;charset=utf-8;'\n        });\n        const url = URL.createObjectURL(blob);\n\n        // Créer un lien pour télécharger le fichier\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\n        link.style.visibility = 'hidden';\n\n        // Ajouter le lien au DOM, cliquer dessus, puis le supprimer\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // Libérer l'URL\n        URL.revokeObjectURL(url);\n      } else {\n        alert(\"Aucun historique disponible pour ce rapport.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\n    }\n  };\n\n  //new 558\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\n\n  // Fonction pour basculer l'état des filtres\n  const toggleFiltres = () => {\n    setFiltresOuverts(prevState => !prevState);\n  };\n\n  // Charger les données au montage du composant\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Récupérer tous les rapports\n        const rapportsResponse = await axios.get(`${API_BASE_URL}/rapports`);\n\n        // Récupérer les données pour les filtres\n        const typeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/type-evenement`);\n        const sousTypeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);\n        const origineEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);\n        const zonesResponse = await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);\n        const operateursResponse = await axios.get(`${API_BASE_URL}/rapports/operateurs`);\n        setRapports(rapportsResponse.data);\n        setTypeEvenements(typeEvenementsResponse.data);\n        setSousTypeEvenements(sousTypeEvenementsResponse.data);\n        setOrigineEvenements(origineEvenementsResponse.data);\n        setZones(zonesResponse.data);\n        setOperateurs(operateursResponse.data);\n\n        // Charger les droits d'accès\n        await fetchDroitsAcces();\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des données:\", err);\n        setError(\"Une erreur est survenue lors du chargement des données.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Fonctions utilitaires pour obtenir les libellés\n  const getTypeEvenementLibelle = id => {\n    const type = typeEvenements.find(t => t.id_type_evenement === id);\n    return type ? type.libelle : 'Non défini';\n  };\n  const getSousTypeEvenementLibelle = id => {\n    const sousType = sousTypeEvenements.find(st => st.id_sous_type_evenement === id);\n    return sousType ? sousType.libelle : 'Non défini';\n  };\n  const getOrigineEvenementLibelle = id => {\n    const origine = origineEvenements.find(o => o.id_origine_evenement === id);\n    return origine ? origine.libelle : 'Non défini';\n  };\n  const getZoneNom = id => {\n    const zone = zones.find(z => z.id_zone === id);\n    return zone ? zone.nom_zone : 'Non définie';\n  };\n  const getOperateurNom = id => {\n    const operateur = operateurs.find(o => o.id_operateur === id);\n    return operateur ? `${operateur.prenom} ${operateur.nom}` : `Opérateur ID ${id}`;\n  };\n\n  // Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\n  const userPeutModifier = rapport => {\n    if (!authData || !rapport) return false;\n    const userId = authData.Opid;\n\n    // Vérifie si l'utilisateur est le créateur\n    if (rapport.id_operateur === userId) {\n      return true;\n    }\n\n    // Vérifie s'il a reçu un accès dans acces_rapport\n    const operateursAvecAcces = droitsAcces[rapport.id_rapport] || [];\n    return operateursAvecAcces.includes(userId);\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleFiltreChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFiltres(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleHistoriqueChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNouvelHistorique(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const reinitialiserFiltres = async () => {\n    setFiltres({\n      type: '',\n      sousType: '',\n      origine: '',\n      zone: '',\n      dateDebut: '',\n      dateFin: ''\n    });\n    setSearchTerm('');\n    setFiltreActif(false);\n\n    // Recharger tous les rapports\n    await fetchRapports();\n  };\n  const voirDetails = async rapport => {\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(false);\n    setAfficherGestionAcces(false);\n\n    // Charger l'historique du rapport sélectionné\n    const historique = await fetchHistorique(rapport.id_rapport);\n    setHistoriqueData(historique);\n\n    // Ouvrir la modal\n    if (modalRef.current) {\n      modalRef.current.classList.add('active');\n    }\n  };\n\n  // Modifier la fonction voirHistorique pour charger immédiatement l'historique\n  const voirHistorique = async rapport => {\n    setRapportSelectionne(rapport);\n    setAfficherHistorique(true);\n    setAfficherGestionAcces(false);\n    try {\n      // Charger l'historique dès qu'on clique sur le bouton\n      const historique = await fetchHistorique(rapport.id_rapport);\n      setHistoriqueData(historique);\n    } catch (err) {\n      console.error(\"Erreur lors du chargement de l'historique:\", err);\n    }\n\n    // Ouvrir la modal\n    if (modalRef.current) {\n      modalRef.current.classList.add('active');\n    }\n  };\n  const fermerModal = () => {\n    if (modalRef.current) {\n      modalRef.current.classList.remove('active');\n    }\n  };\n\n  // Nouvelles fonctions pour la gestion des accès\n  const ouvrirGestionAcces = async rapport => {\n    setRapportSelectionne(rapport);\n    try {\n      // Récupérer la liste des opérateurs ayant accès au rapport\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n      setAfficherGestionAcces(true);\n\n      // Ouvrir la modal\n      if (accessModalRef.current) {\n        accessModalRef.current.classList.add('active');\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des accès:\", err);\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\n    }\n  };\n  const fermerGestionAcces = () => {\n    if (accessModalRef.current) {\n      accessModalRef.current.classList.remove('active');\n    }\n    setNouvelOperateurAcces('');\n  };\n  const handleNouvelOperateurChange = e => {\n    setNouvelOperateurAcces(e.target.value);\n  };\n  const ajouterAccesOperateur = async () => {\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\n        id_operateur: nouvelOperateurAcces,\n        peut_modifier: true // Définir à true pour permettre la modification\n      });\n\n      // Ajouter une entrée dans l'historique\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: nouvelOperateurAcces,\n        type_action: 'AJOUT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n\n      // Rafraîchir la liste des opérateurs avec accès\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n\n      // Mettre à jour les droits d'accès globaux\n      await fetchDroitsAcces();\n      setNouvelOperateurAcces('');\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\n    }\n  };\n  const ajouterHistoriqueManuel = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: authData.Opid,\n        type_action: nouvelHistorique.type_action,\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: nouvelHistorique.detail_action\n      });\n\n      // Recharger l'historique après l'ajout\n      const historique = await fetchHistorique(rapportSelectionne.id_rapport);\n      setHistoriqueData(historique);\n\n      // Réinitialiser le formulaire\n      setNouvelHistorique({\n        type_action: '',\n        detail_action: ''\n      });\n\n      // Revenir à l'affichage de l'historique\n      setAfficherAjoutHistorique(false);\n      setAfficherHistorique(true);\n    } catch (err) {\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\n    }\n  };\n  const retirerAccesOperateur = async idOperateur => {\n    try {\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\n\n      // Rafraîchir la liste des opérateurs avec accès\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\n      setOperateursAvecAcces(response.data);\n\n      // Ajouter une entrée dans l'historique\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\n        id_rapport: rapportSelectionne.id_rapport,\n        id_operateur: idOperateur,\n        type_action: 'RETRAIT_D_ACCES',\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\n        detail_action: ''\n      });\n\n      // Mettre à jour les droits d'accès globaux\n      await fetchDroitsAcces();\n    } catch (err) {\n      console.error(\"Erreur lors du retrait d'accès:\", err);\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\n    }\n  };\n\n  // Rediriger vers la page de modification du rapport\n  const modifierRapport = idRapport => {\n    window.location.href = `/modifier-rapport/${idRapport}`;\n  };\n\n  // Filtrer les rapports en fonction du terme de recherche\n  const rapportsFiltres = rapports.filter(rapport => {\n    const correspond = (!filtres.type || rapport.id_type_evenement === filtres.type) && (!filtres.sousType || rapport.id_sous_type_evenement === filtres.sousType) && (!filtres.origine || rapport.id_origine_evenement === filtres.origine) && (!filtres.zone || rapport.id_zone === filtres.zone) && (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) && (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) && (!filtres.archive || rapport.archive == filtres.archive);\n    const rechercheTexte = searchTerm ? rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) || rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) || getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) || getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase()) : true;\n    return correspond && rechercheTexte;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"liste-rapport-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des Rapports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher un rapport...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary search-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"search-icon\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filtres, {\n      filtres: filtres,\n      handleFiltreChange: handleFiltreChange,\n      toggleFiltres: toggleFiltres,\n      filtresOuverts: filtresOuverts,\n      reinitialiserFiltres: reinitialiserFiltres,\n      filtreActif: filtreActif,\n      typeEvenements: typeEvenements,\n      sousTypeEvenements: sousTypeEvenements,\n      origineEvenements: origineEvenements,\n      zones: zones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RapportsTable, {\n      loading: loading,\n      error: error,\n      rapportsFiltres: rapportsFiltres,\n      getTypeEvenementLibelle: getTypeEvenementLibelle,\n      getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n      getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n      formatDate: formatDate,\n      getOperateurNom: getOperateurNom,\n      voirDetails: voirDetails,\n      voirHistorique: voirHistorique,\n      userPeutModifier: userPeutModifier,\n      modifierRapport: modifierRapport,\n      authData: authData,\n      ouvrirGestionAcces: ouvrirGestionAcces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: afficherHistorique ? \"Historique du rapport\" : afficherAjoutHistorique ? \"Ajouter un historique\" : \"Détails du rapport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: fermerModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: rapportSelectionne && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: afficherHistorique ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"historique-rapport\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Historique des actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this), historiqueData ? historiqueData.length > 0 ? historiqueData.map((action, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"historique-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Action:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 34\n                    }, this), \" \", action.type_action]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"D\\xE9tails:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 34\n                    }, this), \" \", action.detail_action]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Op\\xE9rateur:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 34\n                    }, this), \" \", getOperateurNom(action.id_operateur)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 34\n                    }, this), \" \", formatDate(action.date_action)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 31\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 29\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Aucun historique disponible.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Chargement de l'historique...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-section mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Joindre un document\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleFileSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    onChange: handleFileChange,\n                    className: \"form-control mb-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary\",\n                    children: \"Uploader\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 23\n                }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-2\",\n                  children: uploadStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : afficherAjoutHistorique ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ajout-historique-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Ajouter un \\xE9l\\xE9ment d'historique\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"type_action\",\n                  children: \"Type d'action:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"type_action\",\n                  name: \"type_action\",\n                  value: nouvelHistorique.type_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  placeholder: \"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"detail_action\",\n                  children: \"D\\xE9tails:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"detail_action\",\n                  name: \"detail_action\",\n                  value: nouvelHistorique.detail_action,\n                  onChange: handleHistoriqueChange,\n                  className: \"form-control\",\n                  rows: \"4\",\n                  placeholder: \"D\\xE9crivez l'action ou l'observation en d\\xE9tail...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(DetailsRapport, {\n              rapportSelectionne: rapportSelectionne,\n              formatDate: formatDate,\n              getOperateurNom: getOperateurNom,\n              getTypeEvenementLibelle: getTypeEvenementLibelle,\n              getSousTypeEvenementLibelle: getSousTypeEvenementLibelle,\n              getOrigineEvenementLibelle: getOrigineEvenementLibelle,\n              getZoneNom: getZoneNom,\n              historique: historiqueData // <-- Ajout ici\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: async () => {\n              setAfficherHistorique(true);\n              setAfficherAjoutHistorique(false);\n              const historique = await fetchHistorique(rapportSelectionne.id_rapport);\n              setHistoriqueData(historique);\n            },\n            children: \"Voir l'historique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => {\n              setAfficherHistorique(false);\n              setAfficherAjoutHistorique(true);\n            },\n            children: \"Ajouter un historique manuel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-icon text-info\",\n            onClick: () => telechargerHistorique(rapportSelectionne),\n            title: \"T\\xE9l\\xE9charger l'historique\",\n            children: /*#__PURE__*/_jsxDEV(Download, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), rapportSelectionne && afficherAjoutHistorique && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: ajouterHistoriqueManuel,\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => {\n                setAfficherAjoutHistorique(false);\n                setAfficherHistorique(false);\n              },\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => modifierRapport(rapportSelectionne.id_rapport),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: fermerModal,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GestionAccesModal, {\n      accessModalRef: accessModalRef,\n      rapportSelectionne: rapportSelectionne,\n      operateurs: operateurs,\n      operateursAvecAcces: operateursAvecAcces,\n      nouvelOperateurAcces: nouvelOperateurAcces,\n      handleNouvelOperateurChange: handleNouvelOperateurChange,\n      ajouterAccesOperateur: ajouterAccesOperateur,\n      retirerAccesOperateur: retirerAccesOperateur,\n      fermerGestionAcces: fermerGestionAcces,\n      afficherAjoutHistorique: afficherAjoutHistorique,\n      afficherHistorique: afficherHistorique,\n      setAfficherAjoutHistorique: setAfficherAjoutHistorique,\n      setAfficherHistorique: setAfficherHistorique,\n      nouvelHistorique: nouvelHistorique,\n      handleHistoriqueChange: handleHistoriqueChange,\n      ajouterHistoriqueManuel: ajouterHistoriqueManuel,\n      fetchHistorique: fetchHistorique,\n      setHistoriqueData: setHistoriqueData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 5\n  }, this);\n};\n_s(ListeRapport, \"o4JaBIMm2tuwFeC0hY3puL66xnU=\", false, function () {\n  return [useAuth];\n});\n_c = ListeRapport;\nexport default ListeRapport;\nvar _c;\n$RefreshReg$(_c, \"ListeRapport\");","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","axios","Download","Filtres","RapportsTable","DetailsRapport","GestionAccesModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ListeRapport","_s","rapports","setRapports","loading","setLoading","error","setError","typeEvenements","setTypeEvenements","sousTypeEvenements","setSousTypeEvenements","origineEvenements","setOrigineEvenements","zones","setZones","operateurs","setOperateurs","filtreActif","setFiltreActif","searchTerm","setSearchTerm","filtres","setFiltres","type","sousType","origine","zone","dateDebut","dateFin","archive","uploadStatus","setUploadStatus","file","setFile","handleFileChange","e","target","files","handleFileSubmit","preventDefault","formData","FormData","append","rapportSelectionne","id","res","fetch","method","body","data","json","console","setRapportSelectionne","afficherHistorique","setAfficherHistorique","afficherGestionAcces","setAfficherGestionAcces","operateursAvecAcces","setOperateursAvecAcces","nouvelOperateurAcces","setNouvelOperateurAcces","historiqueData","setHistoriqueData","droitsAcces","setDroitsAcces","afficherAjoutHistorique","setAfficherAjoutHistorique","nouvelHistorique","setNouvelHistorique","type_action","detail_action","authData","modalRef","accessModalRef","API_BASE_URL","process","env","REACT_APP_API_URL","fetchRapports","response","get","fetchDroitsAcces","err","fetchHistorique","idRapport","droits","forEach","droit","id_rapport","push","id_operateur","telechargerHistorique","rapport","historique","length","txtContent","action","operateurNom","getOperateurNom","dateFormatee","formatDate","date_action","detailAction","replace","trim","typeAction","padEnd","details","slice","operateur","date","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","appendChild","click","removeChild","revokeObjectURL","alert","filtresOuverts","setFiltresOuverts","toggleFiltres","prevState","fetchData","rapportsResponse","typeEvenementsResponse","sousTypeEvenementsResponse","origineEvenementsResponse","zonesResponse","operateursResponse","getTypeEvenementLibelle","find","t","id_type_evenement","libelle","getSousTypeEvenementLibelle","st","id_sous_type_evenement","getOrigineEvenementLibelle","o","id_origine_evenement","getZoneNom","z","id_zone","nom_zone","prenom","nom","userPeutModifier","userId","Opid","includes","dateString","Date","toLocaleDateString","day","month","year","hour","minute","handleSearchChange","value","handleFiltreChange","name","prev","handleHistoriqueChange","reinitialiserFiltres","voirDetails","current","classList","add","voirHistorique","fermerModal","remove","ouvrirGestionAcces","fermerGestionAcces","handleNouvelOperateurChange","ajouterAccesOperateur","post","peut_modifier","getTime","toISOString","ajouterHistoriqueManuel","retirerAccesOperateur","idOperateur","delete","modifierRapport","window","location","href","rapportsFiltres","filter","correspond","date_evenement","rechercheTexte","titre","toLowerCase","description_globale","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","ref","onClick","map","index","onSubmit","htmlFor","rows","title","size","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/ListeRapport.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport axios from 'axios';\r\nimport '../css/ListeRapport.css';\r\nimport {\r\n  Download,        // Télécharger\r\n} from 'lucide-react'\r\n\r\n\r\nimport Filtres from './ListeRapport/Filtres';\r\nimport RapportsTable from \"./ListeRapport/RapportsTable\";\r\nimport DetailsRapport from './ListeRapport/DetailsRapport';\r\nimport GestionAccesModal from './ListeRapport/GestionAccessModal';\r\n\r\n\r\nconst ListeRapport = () => {\r\n\r\n  const [rapports, setRapports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [typeEvenements, setTypeEvenements] = useState([]);\r\n  const [sousTypeEvenements, setSousTypeEvenements] = useState([]);\r\n  const [origineEvenements, setOrigineEvenements] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [operateurs, setOperateurs] = useState([]); // Liste des opérateurs pour l'attribution d'accès\r\n  const [filtreActif, setFiltreActif] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filtres, setFiltres] = useState({\r\n    type: '',\r\n    sousType: '',\r\n    origine: '',\r\n    zone: '',\r\n    dateDebut: '',\r\n    dateFin: '',\r\n    archive: '0'\r\n  });\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setUploadStatus(\"Veuillez sélectionner un fichier.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"rapport_id\", rapportSelectionne?.id); // si tu veux lier le fichier à un rapport\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      setUploadStatus(\"Fichier envoyé avec succès !\");\r\n      setFile(null);\r\n    } catch (error) {\r\n      setUploadStatus(\"Erreur lors de l'envoi du fichier.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n  const [rapportSelectionne, setRapportSelectionne] = useState(null);\r\n  const [afficherHistorique, setAfficherHistorique] = useState(false);\r\n  const [afficherGestionAcces, setAfficherGestionAcces] = useState(false);\r\n  const [operateursAvecAcces, setOperateursAvecAcces] = useState([]);\r\n  const [nouvelOperateurAcces, setNouvelOperateurAcces] = useState('');\r\n  const [historiqueData, setHistoriqueData] = useState(null);\r\n  // Ajout d'un état pour stocker les droits d'accès\r\n  const [droitsAcces, setDroitsAcces] = useState({});\r\n  //new\r\n  const [afficherAjoutHistorique, setAfficherAjoutHistorique] = useState(false);\r\n  const [nouvelHistorique, setNouvelHistorique] = useState({\r\n    type_action: '',\r\n    detail_action: ''\r\n  });\r\n\r\n  const { authData } = useAuth();\r\n\r\n  const modalRef = useRef(null);\r\n  const accessModalRef = useRef(null);\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Fonction pour charger tous les rapports\r\n  const fetchRapports = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\r\n      setRapports(response.data);\r\n\r\n      // Charger les droits d'accès pour tous les rapports\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des rapports:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des rapports.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchHistorique = async (idRapport) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/historique/${idRapport}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération de l'historique:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement de l'historique.\");\r\n      return []; // Retourner un tableau vide en cas d'erreur\r\n    }\r\n  };\r\n\r\n  // Nouvelle fonction pour charger les droits d'accès\r\n  const fetchDroitsAcces = async () => {\r\n    try {\r\n      // Récupérer tous les droits d'accès (ou filtrer par utilisateur si nécessaire)\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/acces/all`);\r\n\r\n      // Organiser les droits d'accès par rapport\r\n      const droits = {};\r\n      response.data.forEach(droit => {\r\n        if (!droits[droit.id_rapport]) {\r\n          droits[droit.id_rapport] = [];\r\n        }\r\n        droits[droit.id_rapport].push(droit.id_operateur);\r\n      });\r\n\r\n      setDroitsAcces(droits);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des droits d'accès:\", err);\r\n    }\r\n  };\r\n\r\n  const telechargerHistorique = async (rapport) => {\r\n    try {\r\n      // Charger l'historique du rapport\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n\r\n      if (historique && historique.length > 0) {\r\n        // Définir l'en-tête du fichier texte\r\n        let txtContent = \"Type d'action       | Détails                             | Opérateur         | Date\\n\";\r\n        txtContent += \"--------------------|-------------------------------------|-------------------|---------------------\\n\";\r\n\r\n        historique.forEach(action => {\r\n          const operateurNom = getOperateurNom(action.id_operateur);\r\n          const dateFormatee = formatDate(action.date_action);\r\n          const detailAction = action.detail_action\r\n            ? action.detail_action.replace(/[\\r\\n]+/g, ' ').replace(/\\s+/g, ' ').trim()\r\n            : \"\";\r\n\r\n          // Ajuster les longueurs pour aligner le tout (padding à droite)\r\n          const typeAction = action.type_action.padEnd(20);\r\n          const details = detailAction.slice(0, 35).padEnd(35);\r\n          const operateur = operateurNom.padEnd(19);\r\n          const date = dateFormatee.padEnd(20);\r\n\r\n          txtContent += `${typeAction}| ${details}| ${operateur}| ${date}\\n`;\r\n        });\r\n\r\n        // Créer un objet Blob avec le contenu texte\r\n        const blob = new Blob([txtContent], { type: 'text/plain;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Créer un lien pour télécharger le fichier\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', `historique_rapport_${rapport.id_rapport}.txt`);\r\n        link.style.visibility = 'hidden';\r\n\r\n        // Ajouter le lien au DOM, cliquer dessus, puis le supprimer\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        // Libérer l'URL\r\n        URL.revokeObjectURL(url);\r\n      } else {\r\n        alert(\"Aucun historique disponible pour ce rapport.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du téléchargement de l'historique :\", error);\r\n      alert(\"Une erreur est survenue lors du téléchargement de l'historique.\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //new 558\r\n  const [filtresOuverts, setFiltresOuverts] = useState(false);\r\n\r\n  // Fonction pour basculer l'état des filtres\r\n  const toggleFiltres = () => {\r\n    setFiltresOuverts(prevState => !prevState);\r\n  };\r\n\r\n\r\n  // Charger les données au montage du composant\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Récupérer tous les rapports\r\n        const rapportsResponse = await axios.get(`${API_BASE_URL}/rapports`);\r\n\r\n        // Récupérer les données pour les filtres\r\n        const typeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/type-evenement`);\r\n        const sousTypeEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/sous-type-pollution`);\r\n        const origineEvenementsResponse = await axios.get(`${API_BASE_URL}/rapports/origine-evenement`);\r\n        const zonesResponse = await axios.get(`${API_BASE_URL}/rapports/zone-geographique`);\r\n        const operateursResponse = await axios.get(`${API_BASE_URL}/rapports/operateurs`);\r\n\r\n        setRapports(rapportsResponse.data);\r\n        setTypeEvenements(typeEvenementsResponse.data);\r\n        setSousTypeEvenements(sousTypeEvenementsResponse.data);\r\n        setOrigineEvenements(origineEvenementsResponse.data);\r\n        setZones(zonesResponse.data);\r\n        setOperateurs(operateursResponse.data);\r\n\r\n        // Charger les droits d'accès\r\n        await fetchDroitsAcces();\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des données:\", err);\r\n        setError(\"Une erreur est survenue lors du chargement des données.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fonctions utilitaires pour obtenir les libellés\r\n  const getTypeEvenementLibelle = (id) => {\r\n    const type = typeEvenements.find(t => t.id_type_evenement === id);\r\n    return type ? type.libelle : 'Non défini';\r\n  };\r\n\r\n  const getSousTypeEvenementLibelle = (id) => {\r\n    const sousType = sousTypeEvenements.find(st => st.id_sous_type_evenement === id);\r\n    return sousType ? sousType.libelle : 'Non défini';\r\n  };\r\n\r\n  const getOrigineEvenementLibelle = (id) => {\r\n    const origine = origineEvenements.find(o => o.id_origine_evenement === id);\r\n    return origine ? origine.libelle : 'Non défini';\r\n  };\r\n\r\n  const getZoneNom = (id) => {\r\n    const zone = zones.find(z => z.id_zone === id);\r\n    return zone ? zone.nom_zone : 'Non définie';\r\n  };\r\n\r\n  const getOperateurNom = (id) => {\r\n    const operateur = operateurs.find(o => o.id_operateur === id);\r\n    return operateur ? `${operateur.prenom} ${operateur.nom}` : `Opérateur ID ${id}`;\r\n  };\r\n\r\n  // Vérifier si l'utilisateur actuel a accès à la modification d'un rapport\r\n  const userPeutModifier = (rapport) => {\r\n    if (!authData || !rapport) return false;\r\n\r\n    const userId = authData.Opid;\r\n\r\n    // Vérifie si l'utilisateur est le créateur\r\n    if (rapport.id_operateur === userId) {\r\n      return true;\r\n    }\r\n\r\n    // Vérifie s'il a reçu un accès dans acces_rapport\r\n    const operateursAvecAcces = droitsAcces[rapport.id_rapport] || [];\r\n    return operateursAvecAcces.includes(userId);\r\n  };\r\n\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleFiltreChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFiltres(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleHistoriqueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNouvelHistorique(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n\r\n\r\n  const reinitialiserFiltres = async () => {\r\n    setFiltres({\r\n      type: '',\r\n      sousType: '',\r\n      origine: '',\r\n      zone: '',\r\n      dateDebut: '',\r\n      dateFin: ''\r\n    });\r\n    setSearchTerm('');\r\n    setFiltreActif(false);\r\n\r\n    // Recharger tous les rapports\r\n    await fetchRapports();\r\n  };\r\n\r\n  const voirDetails = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(false);\r\n    setAfficherGestionAcces(false);\r\n\r\n    // Charger l'historique du rapport sélectionné\r\n    const historique = await fetchHistorique(rapport.id_rapport);\r\n    setHistoriqueData(historique);\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  // Modifier la fonction voirHistorique pour charger immédiatement l'historique\r\n  const voirHistorique = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n    setAfficherHistorique(true);\r\n    setAfficherGestionAcces(false);\r\n\r\n    try {\r\n      // Charger l'historique dès qu'on clique sur le bouton\r\n      const historique = await fetchHistorique(rapport.id_rapport);\r\n      setHistoriqueData(historique);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du chargement de l'historique:\", err);\r\n    }\r\n\r\n    // Ouvrir la modal\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.add('active');\r\n    }\r\n  };\r\n\r\n  const fermerModal = () => {\r\n    if (modalRef.current) {\r\n      modalRef.current.classList.remove('active');\r\n    }\r\n  };\r\n\r\n  // Nouvelles fonctions pour la gestion des accès\r\n  const ouvrirGestionAcces = async (rapport) => {\r\n    setRapportSelectionne(rapport);\r\n\r\n    try {\r\n      // Récupérer la liste des opérateurs ayant accès au rapport\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapport.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      setAfficherGestionAcces(true);\r\n\r\n      // Ouvrir la modal\r\n      if (accessModalRef.current) {\r\n        accessModalRef.current.classList.add('active');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des accès:\", err);\r\n      setError(\"Une erreur est survenue lors du chargement des accès.\");\r\n    }\r\n  };\r\n\r\n  const fermerGestionAcces = () => {\r\n    if (accessModalRef.current) {\r\n      accessModalRef.current.classList.remove('active');\r\n    }\r\n    setNouvelOperateurAcces('');\r\n  };\r\n\r\n  const handleNouvelOperateurChange = (e) => {\r\n    setNouvelOperateurAcces(e.target.value);\r\n  };\r\n\r\n  const ajouterAccesOperateur = async () => {\r\n    if (!nouvelOperateurAcces || !rapportSelectionne) return;\r\n\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`, {\r\n        id_operateur: nouvelOperateurAcces,\r\n        peut_modifier: true  // Définir à true pour permettre la modification\r\n      });\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: nouvelOperateurAcces,\r\n        type_action: 'AJOUT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n\r\n      setNouvelOperateurAcces('');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'accès.\");\r\n    }\r\n  };\r\n\r\n  const ajouterHistoriqueManuel = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: authData.Opid,\r\n        type_action: nouvelHistorique.type_action,\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: nouvelHistorique.detail_action\r\n      });\r\n\r\n      // Recharger l'historique après l'ajout\r\n      const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n      setHistoriqueData(historique);\r\n\r\n      // Réinitialiser le formulaire\r\n      setNouvelHistorique({\r\n        type_action: '',\r\n        detail_action: ''\r\n      });\r\n\r\n      // Revenir à l'affichage de l'historique\r\n      setAfficherAjoutHistorique(false);\r\n      setAfficherHistorique(true);\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de l'ajout d'un historique manuel:\", err);\r\n      setError(\"Une erreur est survenue lors de l'ajout d'un historique manuel.\");\r\n    }\r\n  };\r\n\r\n  const retirerAccesOperateur = async (idOperateur) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces/${idOperateur}`);\r\n\r\n      // Rafraîchir la liste des opérateurs avec accès\r\n      const response = await axios.get(`${API_BASE_URL}/rapports/${rapportSelectionne.id_rapport}/acces`);\r\n      setOperateursAvecAcces(response.data);\r\n\r\n      // Ajouter une entrée dans l'historique\r\n      await axios.post(`${API_BASE_URL}/rapports/historique`, {\r\n        id_rapport: rapportSelectionne.id_rapport,\r\n        id_operateur: idOperateur,\r\n        type_action: 'RETRAIT_D_ACCES',\r\n        date_action: new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(),\r\n        detail_action: ''\r\n      });\r\n\r\n\r\n      // Mettre à jour les droits d'accès globaux\r\n      await fetchDroitsAcces();\r\n    } catch (err) {\r\n      console.error(\"Erreur lors du retrait d'accès:\", err);\r\n      setError(\"Une erreur est survenue lors du retrait d'accès.\");\r\n    }\r\n  };\r\n\r\n  // Rediriger vers la page de modification du rapport\r\n  const modifierRapport = (idRapport) => {\r\n    window.location.href = `/modifier-rapport/${idRapport}`;\r\n  };\r\n\r\n  // Filtrer les rapports en fonction du terme de recherche\r\n  const rapportsFiltres = rapports.filter(rapport => {\r\n    const correspond = (\r\n      (!filtres.type || rapport.id_type_evenement === filtres.type) &&\r\n      (!filtres.sousType || rapport.id_sous_type_evenement === filtres.sousType) &&\r\n      (!filtres.origine || rapport.id_origine_evenement === filtres.origine) &&\r\n      (!filtres.zone || rapport.id_zone === filtres.zone) &&\r\n      (!filtres.dateDebut || new Date(rapport.date_evenement) >= new Date(filtres.dateDebut)) &&\r\n      (!filtres.dateFin || new Date(rapport.date_evenement) <= new Date(filtres.dateFin)) &&\r\n      (!filtres.archive || rapport.archive == filtres.archive)\r\n    );\r\n\r\n    const rechercheTexte = searchTerm\r\n      ? (\r\n        rapport.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        rapport.description_globale.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getTypeEvenementLibelle(rapport.id_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getSousTypeEvenementLibelle(rapport.id_sous_type_evenement).toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        getOrigineEvenementLibelle(rapport.id_origine_evenement).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n      : true;\r\n\r\n    return correspond && rechercheTexte;\r\n  });\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"liste-rapport-container\">\r\n      <h1>Liste des Rapports</h1>\r\n\r\n      {/* Barre de recherche */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un rapport...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"search-input\"\r\n        />\r\n        <button className=\"btn btn-primary search-btn\">\r\n          <i className=\"search-icon\">🔍</i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtres */}\r\n      <Filtres\r\n        filtres={filtres}\r\n        handleFiltreChange={handleFiltreChange}\r\n        toggleFiltres={toggleFiltres}\r\n        filtresOuverts={filtresOuverts}\r\n        reinitialiserFiltres={reinitialiserFiltres}\r\n        filtreActif={filtreActif}\r\n        typeEvenements={typeEvenements}\r\n        sousTypeEvenements={sousTypeEvenements}\r\n        origineEvenements={origineEvenements}\r\n        zones={zones}\r\n      />\r\n\r\n      {/* Liste des rapports */}\r\n      <RapportsTable\r\n        loading={loading}\r\n        error={error}\r\n        rapportsFiltres={rapportsFiltres}\r\n        getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n        getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n        getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n        formatDate={formatDate}\r\n        getOperateurNom={getOperateurNom}\r\n        voirDetails={voirDetails}\r\n        voirHistorique={voirHistorique}\r\n        userPeutModifier={userPeutModifier}\r\n        modifierRapport={modifierRapport}\r\n        authData={authData}\r\n        ouvrirGestionAcces={ouvrirGestionAcces}\r\n      />\r\n\r\n      {/* Modal pour détails et historique */}\r\n      <div className=\"modal\" ref={modalRef}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h2>\r\n              {afficherHistorique\r\n                ? \"Historique du rapport\"\r\n                : afficherAjoutHistorique\r\n                  ? \"Ajouter un historique\"\r\n                  : \"Détails du rapport\"}\r\n            </h2>\r\n            <button className=\"close-btn\" onClick={fermerModal}>&times;</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            {rapportSelectionne && (\r\n              <>\r\n                {afficherHistorique ? (\r\n                  <>\r\n                    <div className=\"historique-rapport\">\r\n                      <h3>Historique des actions</h3>\r\n                      {historiqueData ? (\r\n                        historiqueData.length > 0 ? (\r\n                          historiqueData.map((action, index) => (\r\n                            <div key={index} className=\"historique-item\">\r\n                              <p><strong>Action:</strong> {action.type_action}</p>\r\n                              <p><strong>Détails:</strong> {action.detail_action}</p>\r\n                              <p><strong>Opérateur:</strong> {getOperateurNom(action.id_operateur)}</p>\r\n                              <p><strong>Date:</strong> {formatDate(action.date_action)}</p>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <p>Aucun historique disponible.</p>\r\n                        )\r\n                      ) : (\r\n                        <p>Chargement de l'historique...</p>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"upload-section mt-4\">\r\n                      <h4>Joindre un document</h4>\r\n                      <form onSubmit={handleFileSubmit}>\r\n                        <input type=\"file\" onChange={handleFileChange} className=\"form-control mb-2\" />\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Uploader</button>\r\n                      </form>\r\n                      {uploadStatus && <p className=\"mt-2\">{uploadStatus}</p>}\r\n                    </div>\r\n                  </>\r\n                ) : afficherAjoutHistorique ? (\r\n                  <div className=\"ajout-historique-form\">\r\n                    <h3>Ajouter un élément d'historique</h3>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"type_action\">Type d'action:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"type_action\"\r\n                        name=\"type_action\"\r\n                        value={nouvelHistorique.type_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Ex: OBSERVATION, INTERVENTION, SUIVI...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"detail_action\">Détails:</label>\r\n                      <textarea\r\n                        id=\"detail_action\"\r\n                        name=\"detail_action\"\r\n                        value={nouvelHistorique.detail_action}\r\n                        onChange={handleHistoriqueChange}\r\n                        className=\"form-control\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Décrivez l'action ou l'observation en détail...\"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <DetailsRapport\r\n                    rapportSelectionne={rapportSelectionne}\r\n                    formatDate={formatDate}\r\n                    getOperateurNom={getOperateurNom}\r\n                    getTypeEvenementLibelle={getTypeEvenementLibelle}\r\n                    getSousTypeEvenementLibelle={getSousTypeEvenementLibelle}\r\n                    getOrigineEvenementLibelle={getOrigineEvenementLibelle}\r\n                    getZoneNom={getZoneNom}\r\n                    historique={historiqueData} // <-- Ajout ici\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {rapportSelectionne && !afficherHistorique && !afficherAjoutHistorique && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={async () => {\r\n                  setAfficherHistorique(true);\r\n                  setAfficherAjoutHistorique(false);\r\n                  const historique = await fetchHistorique(rapportSelectionne.id_rapport);\r\n                  setHistoriqueData(historique);\r\n                }}\r\n              >\r\n                Voir l'historique\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && !afficherAjoutHistorique && userPeutModifier(rapportSelectionne) && (\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => {\r\n                  setAfficherHistorique(false);\r\n                  setAfficherAjoutHistorique(true);\r\n                }}\r\n              >\r\n                Ajouter un historique manuel\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherHistorique && (\r\n              <button\r\n                className=\"btn-icon text-info\"\r\n                onClick={() => telechargerHistorique(rapportSelectionne)}\r\n                title=\"Télécharger l'historique\"\r\n              >\r\n                <Download size={18} />\r\n              </button>\r\n            )}\r\n            {rapportSelectionne && afficherAjoutHistorique && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={ajouterHistoriqueManuel}\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setAfficherAjoutHistorique(false);\r\n                    setAfficherHistorique(false);\r\n                  }}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </>\r\n            )}\r\n            {rapportSelectionne && userPeutModifier(rapportSelectionne) && !afficherAjoutHistorique && !afficherHistorique && (\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => modifierRapport(rapportSelectionne.id_rapport)}\r\n              >\r\n                Modifier\r\n              </button>\r\n            )}\r\n            <button className=\"btn btn-primary\" onClick={fermerModal}>Fermer</button>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal pour la gestion des accès */}\r\n      <GestionAccesModal\r\n        accessModalRef={accessModalRef}\r\n        rapportSelectionne={rapportSelectionne}\r\n        operateurs={operateurs}\r\n        operateursAvecAcces={operateursAvecAcces}\r\n        nouvelOperateurAcces={nouvelOperateurAcces}\r\n        handleNouvelOperateurChange={handleNouvelOperateurChange}\r\n        ajouterAccesOperateur={ajouterAccesOperateur}\r\n        retirerAccesOperateur={retirerAccesOperateur}\r\n        fermerGestionAcces={fermerGestionAcces}\r\n        afficherAjoutHistorique={afficherAjoutHistorique}\r\n        afficherHistorique={afficherHistorique}\r\n        setAfficherAjoutHistorique={setAfficherAjoutHistorique}\r\n        setAfficherHistorique={setAfficherHistorique}\r\n        nouvelHistorique={nouvelHistorique}\r\n        handleHistoriqueChange={handleHistoriqueChange}\r\n        ajouterHistoriqueManuel={ajouterHistoriqueManuel}\r\n        fetchHistorique={fetchHistorique}\r\n        setHistoriqueData={setHistoriqueData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListeRapport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}