{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import axios from'axios';import'leaflet/dist/leaflet.css';import L from'leaflet';import'../css/carte.css';// Fix Leaflet marker icon issue\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'});const Carte=()=>{const[lieux,setLieux]=useState([]);// Liste des lieux à afficher\nconst[rapportTitres,setRapportTitres]=useState({});// Titres des rapports indexés par id_rapport\nconst mapRef=useRef(null);// Référence pour la carte\nconst mapContainerRef=useRef(null);// Référence pour le container de la carte\nconst[pointActuel,setPointActuel]=useState(null);const API_BASE_URL=process.env.REACT_APP_API_URL;// Fonction pour récupérer les lieux depuis l'API\nconst fetchLieux=async()=>{try{const response=await axios.get(`${API_BASE_URL}/lieu`);setLieux(response.data);console.log('Lieux récupérés:',response.data);}catch(error){console.error('Erreur lors de la récupération des lieux:',error);}};// Fonction pour récupérer les titres des rapports\nconst fetchRapportTitres=async()=>{try{const response=await axios.get(`${API_BASE_URL}/rapports`);// Créer un objet avec les id_rapport comme clés et les titres comme valeurs\nconst titres={};response.data.forEach(rapport=>{titres[rapport.id_rapport]=rapport.titre||'Rapport sans titre';});setRapportTitres(titres);console.log('Titres des rapports récupérés:',titres);}catch(error){console.error('Erreur lors de la récupération des titres de rapports:',error);}};// Initialiser la carte et charger les données\nuseEffect(()=>{// Initialiser la carte uniquement si le container existe et que la carte n'est pas encore initialisée\nif(!mapRef.current&&mapContainerRef.current){mapRef.current=L.map(mapContainerRef.current).setView([43.3,5.4],10);// Centrer la carte\n// Ajouter la couche de tuiles OpenStreetMap\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'}).addTo(mapRef.current);}// Effectuer la récupération des données au montage du composant\nfetchLieux();fetchRapportTitres();return()=>{// Cleanup de la carte lorsque le composant est démonté\nif(mapRef.current){mapRef.current.remove();mapRef.current=null;}};},[API_BASE_URL]);// Ajouter les marqueurs une fois que les lieux et les titres des rapports sont disponibles\nuseEffect(()=>{if(mapRef.current&&lieux.length>0){// Nettoyer les marqueurs existants\nif(mapRef.current.eachLayer){mapRef.current.eachLayer(layer=>{if(layer instanceof L.Marker){mapRef.current.removeLayer(layer);}});}// Créer un dictionnaire pour regrouper les lieux par coordonnées\nconst coordsMap={};lieux.forEach(lieu=>{const coordKey=`${lieu.latitude},${lieu.longitude}`;if(!coordsMap[coordKey]){coordsMap[coordKey]=[];}coordsMap[coordKey].push(lieu);});// Ajouter un marqueur pour chaque coordonnée unique\nObject.entries(coordsMap).forEach(_ref=>{let[coords,lieuxAtCoord]=_ref;const[lat,lng]=coords.split(',');// Ne pas ajouter de marqueur si les coordonnées sont invalides\nif(isNaN(parseFloat(lat))||isNaN(parseFloat(lng))){console.warn('Coordonnées invalides:',coords);return;}const marker=L.marker([parseFloat(lat),parseFloat(lng)]).addTo(mapRef.current);// Créer le contenu du popup avec les détails des lieux et les titres des rapports\nlet popupContent='<b>Détails du lieu:</b><br/>';// Ajouter les détails du lieu et le titre du rapport associé pour chaque lieu à cette coordonnée\nlieuxAtCoord.forEach(lieu=>{popupContent+=`<div style=\"margin-bottom: 10px;\">`;popupContent+=`<b>${lieu.details_lieu||'Sans détails'}</b><br/>`;// Ajouter le titre du rapport si disponible\nconst rapportTitre=rapportTitres[lieu.id_rapport];if(rapportTitre){popupContent+=`Rapport: ${rapportTitre}<br/>`;}else{popupContent+=`Rapport ID: ${lieu.id_rapport}<br/>`;}popupContent+=`ID Lieu: ${lieu.id_lieu}<br/>`;popupContent+=`</div>`;});popupContent+=`<br/>Latitude: ${lat}<br/>Longitude: ${lng}`;marker.bindPopup(popupContent);// Ouvrir le popup si c'est le point actuel\nif(pointActuel&&lieuxAtCoord.some(lieu=>lieu.id_lieu===pointActuel.id_lieu)){marker.openPopup();}});}},[lieux,rapportTitres,pointActuel]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Carte des lieux\"}),/*#__PURE__*/_jsx(\"div\",{ref:mapContainerRef,style:{height:'600px',width:'100%',marginBottom:'10px'}})]});};export default Carte;","map":{"version":3,"names":["useState","useEffect","useRef","axios","L","jsx","_jsx","jsxs","_jsxs","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Carte","lieux","setLieux","rapportTitres","setRapportTitres","mapRef","mapContainerRef","pointActuel","setPointActuel","API_BASE_URL","process","env","REACT_APP_API_URL","fetchLieux","response","get","data","console","log","error","fetchRapportTitres","titres","forEach","rapport","id_rapport","titre","current","map","setView","tileLayer","attribution","addTo","remove","length","eachLayer","layer","Marker","removeLayer","coordsMap","lieu","coordKey","latitude","longitude","push","Object","entries","_ref","coords","lieuxAtCoord","lat","lng","split","isNaN","parseFloat","warn","marker","popupContent","details_lieu","rapportTitre","id_lieu","bindPopup","some","openPopup","children","ref","style","height","width","marginBottom"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/carte.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport '../css/carte.css';\r\n\r\n// Fix Leaflet marker icon issue\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst Carte = () => {\r\n  const [lieux, setLieux] = useState([]); // Liste des lieux à afficher\r\n  const [rapportTitres, setRapportTitres] = useState({}); // Titres des rapports indexés par id_rapport\r\n  const mapRef = useRef(null); // Référence pour la carte\r\n  const mapContainerRef = useRef(null); // Référence pour le container de la carte\r\n  const [pointActuel, setPointActuel] = useState(null);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Fonction pour récupérer les lieux depuis l'API\r\n  const fetchLieux = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/lieu`);\r\n      setLieux(response.data);\r\n      console.log('Lieux récupérés:', response.data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des lieux:', error);\r\n    }\r\n  };\r\n\r\n  // Fonction pour récupérer les titres des rapports\r\n  const fetchRapportTitres = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\r\n      // Créer un objet avec les id_rapport comme clés et les titres comme valeurs\r\n      const titres = {};\r\n      response.data.forEach(rapport => {\r\n        titres[rapport.id_rapport] = rapport.titre || 'Rapport sans titre';\r\n      });\r\n      setRapportTitres(titres);\r\n      console.log('Titres des rapports récupérés:', titres);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des titres de rapports:', error);\r\n    }\r\n  };\r\n\r\n  // Initialiser la carte et charger les données\r\n  useEffect(() => {\r\n    // Initialiser la carte uniquement si le container existe et que la carte n'est pas encore initialisée\r\n    if (!mapRef.current && mapContainerRef.current) {\r\n      mapRef.current = L.map(mapContainerRef.current).setView([43.3, 5.4], 10); // Centrer la carte\r\n\r\n      // Ajouter la couche de tuiles OpenStreetMap\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(mapRef.current);\r\n    }\r\n\r\n    // Effectuer la récupération des données au montage du composant\r\n    fetchLieux();\r\n    fetchRapportTitres();\r\n\r\n    return () => {\r\n      // Cleanup de la carte lorsque le composant est démonté\r\n      if (mapRef.current) {\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n    };\r\n  }, [API_BASE_URL]);\r\n\r\n  // Ajouter les marqueurs une fois que les lieux et les titres des rapports sont disponibles\r\n  useEffect(() => {\r\n    if (mapRef.current && lieux.length > 0) {\r\n      // Nettoyer les marqueurs existants\r\n      if (mapRef.current.eachLayer) {\r\n        mapRef.current.eachLayer(layer => {\r\n          if (layer instanceof L.Marker) {\r\n            mapRef.current.removeLayer(layer);\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Créer un dictionnaire pour regrouper les lieux par coordonnées\r\n      const coordsMap = {};\r\n      \r\n      lieux.forEach(lieu => {\r\n        const coordKey = `${lieu.latitude},${lieu.longitude}`;\r\n        if (!coordsMap[coordKey]) {\r\n          coordsMap[coordKey] = [];\r\n        }\r\n        coordsMap[coordKey].push(lieu);\r\n      });\r\n      \r\n      // Ajouter un marqueur pour chaque coordonnée unique\r\n      Object.entries(coordsMap).forEach(([coords, lieuxAtCoord]) => {\r\n        const [lat, lng] = coords.split(',');\r\n        \r\n        // Ne pas ajouter de marqueur si les coordonnées sont invalides\r\n        if (isNaN(parseFloat(lat)) || isNaN(parseFloat(lng))) {\r\n          console.warn('Coordonnées invalides:', coords);\r\n          return;\r\n        }\r\n        \r\n        const marker = L.marker([parseFloat(lat), parseFloat(lng)]).addTo(mapRef.current);\r\n        \r\n        // Créer le contenu du popup avec les détails des lieux et les titres des rapports\r\n        let popupContent = '<b>Détails du lieu:</b><br/>';\r\n        \r\n        // Ajouter les détails du lieu et le titre du rapport associé pour chaque lieu à cette coordonnée\r\n        lieuxAtCoord.forEach(lieu => {\r\n          popupContent += `<div style=\"margin-bottom: 10px;\">`;\r\n          popupContent += `<b>${lieu.details_lieu || 'Sans détails'}</b><br/>`;\r\n          \r\n          // Ajouter le titre du rapport si disponible\r\n          const rapportTitre = rapportTitres[lieu.id_rapport];\r\n          if (rapportTitre) {\r\n            popupContent += `Rapport: ${rapportTitre}<br/>`;\r\n          } else {\r\n            popupContent += `Rapport ID: ${lieu.id_rapport}<br/>`;\r\n          }\r\n          \r\n          popupContent += `ID Lieu: ${lieu.id_lieu}<br/>`;\r\n          popupContent += `</div>`;\r\n        });\r\n        \r\n        popupContent += `<br/>Latitude: ${lat}<br/>Longitude: ${lng}`;\r\n        \r\n        marker.bindPopup(popupContent);\r\n        \r\n        // Ouvrir le popup si c'est le point actuel\r\n        if (pointActuel && lieuxAtCoord.some(lieu => lieu.id_lieu === pointActuel.id_lieu)) {\r\n          marker.openPopup();\r\n        }\r\n      });\r\n    }\r\n  }, [lieux, rapportTitres, pointActuel]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Carte des lieux</h2>\r\n      <div \r\n        ref={mapContainerRef} \r\n        style={{ height: '600px', width: '100%', marginBottom: '10px' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carte;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}