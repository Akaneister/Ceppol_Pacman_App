{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\Admin\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Password = () => {\n  _s();\n  const [passwords, setPasswords] = useState([]);\n  const [visibleIds, setVisibleIds] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const [editValue, setEditValue] = useState(\"\");\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    const fetchPasswords = async () => {\n      try {\n        const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\n        setPasswords(res.data);\n      } catch (err) {\n        console.error(\"Erreur lors de la récupération des mots de passe\", err);\n      }\n    };\n    fetchPasswords();\n  }, []);\n  const toggleVisibility = id => {\n    setVisibleIds(prev => prev.includes(id) ? prev.filter(v => v !== id) : [...prev, id]);\n  };\n  const handleEdit = (id, currentValue) => {\n    setEditId(id);\n    setEditValue(currentValue);\n  };\n  const handleChange = e => {\n    setEditValue(e.target.value);\n  };\n  const saveEdit = async id => {\n    try {\n      await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\n        mot_de_passe: editValue\n      });\n      setPasswords(prev => prev.map(item => item.id === id ? {\n        ...item,\n        mot_de_passe: editValue\n      } : item));\n      setEditId(null);\n      setEditValue(\"\");\n    } catch (err) {\n      console.error(\"Erreur lors de la modification du mot de passe\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"passwords-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"passwords-list\",\n      children: passwords.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"password-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), editId === item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-edit-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"password-input\",\n            type: \"text\",\n            value: editValue,\n            onChange: handleChange,\n            placeholder: \"Nouveau mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"password-btn password-btn-save\",\n            onClick: () => saveEdit(item.id),\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"password-btn password-btn-cancel\",\n            onClick: () => setEditId(null),\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"password-value\",\n            children: visibleIds.includes(item.id) ? item.mot_de_passe : \"••••••••\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"password-btn password-btn-toggle\",\n            onClick: () => toggleVisibility(item.id),\n            children: visibleIds.includes(item.id) ? \"Masquer\" : \"Afficher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"password-btn password-btn-edit\",\n            onClick: () => handleEdit(item.id, item.mot_de_passe),\n            children: \"\\xC9diter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Password, \"IycuJMqz8/DZq370arcEXm2Vbl0=\");\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Password","_s","passwords","setPasswords","visibleIds","setVisibleIds","editId","setEditId","editValue","setEditValue","API_BASE_URL","process","env","REACT_APP_API_URL","fetchPasswords","res","get","data","err","console","error","toggleVisibility","id","prev","includes","filter","v","handleEdit","currentValue","handleChange","e","target","value","saveEdit","put","mot_de_passe","map","item","className","children","info","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/Admin/Password.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Password = () => {\r\n  const [passwords, setPasswords] = useState([]);\r\n  const [visibleIds, setVisibleIds] = useState([]);\r\n  const [editId, setEditId] = useState(null);\r\n  const [editValue, setEditValue] = useState(\"\");\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const fetchPasswords = async () => {\r\n      try {\r\n        const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\r\n        setPasswords(res.data);\r\n      } catch (err) {\r\n        console.error(\"Erreur lors de la récupération des mots de passe\", err);\r\n      }\r\n    };\r\n\r\n    fetchPasswords();\r\n  }, []);\r\n\r\n  const toggleVisibility = (id) => {\r\n    setVisibleIds((prev) =>\r\n      prev.includes(id) ? prev.filter((v) => v !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleEdit = (id, currentValue) => {\r\n    setEditId(id);\r\n    setEditValue(currentValue);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setEditValue(e.target.value);\r\n  };\r\n\r\n  const saveEdit = async (id) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\r\n        mot_de_passe: editValue,\r\n      });\r\n\r\n      setPasswords((prev) =>\r\n        prev.map((item) =>\r\n          item.id === id ? { ...item, mot_de_passe: editValue } : item\r\n        )\r\n      );\r\n\r\n      setEditId(null);\r\n      setEditValue(\"\");\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la modification du mot de passe\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"passwords-container\">\r\n      <ul className=\"passwords-list\">\r\n        {passwords.map((item) => (\r\n          <li key={item.id} className=\"password-item\">\r\n            <h2>{item.info}</h2>\r\n            {editId === item.id ? (\r\n              <div className=\"password-edit-row\">\r\n                <input\r\n                  className=\"password-input\"\r\n                  type=\"text\"\r\n                  value={editValue}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Nouveau mot de passe\"\r\n                />\r\n                <button\r\n                  className=\"password-btn password-btn-save\"\r\n                  onClick={() => saveEdit(item.id)}\r\n                >\r\n                  Enregistrer\r\n                </button>\r\n                <button\r\n                  className=\"password-btn password-btn-cancel\"\r\n                  onClick={() => setEditId(null)}\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"password-row\">\r\n                <span className=\"password-value\">\r\n                  {visibleIds.includes(item.id)\r\n                    ? item.mot_de_passe\r\n                    : \"••••••••\"}\r\n                </span>\r\n                <button\r\n                  className=\"password-btn password-btn-toggle\"\r\n                  onClick={() => toggleVisibility(item.id)}\r\n                >\r\n                  {visibleIds.includes(item.id) ? \"Masquer\" : \"Afficher\"}\r\n                </button>\r\n                <button\r\n                  className=\"password-btn password-btn-edit\"\r\n                  onClick={() => handleEdit(item.id, item.mot_de_passe)}\r\n                >\r\n                  Éditer\r\n                </button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAElDlB,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGN,YAAY,mBAAmB,CAAC;QAC/DP,YAAY,CAACY,GAAG,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kDAAkD,EAAEF,GAAG,CAAC;MACxE;IACF,CAAC;IAEDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAIC,EAAE,IAAK;IAC/BjB,aAAa,CAAEkB,IAAI,IACjBA,IAAI,CAACC,QAAQ,CAACF,EAAE,CAAC,GAAGC,IAAI,CAACE,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,EAAE,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,EAAE,CACjE,CAAC;EACH,CAAC;EAED,MAAMK,UAAU,GAAGA,CAACL,EAAE,EAAEM,YAAY,KAAK;IACvCrB,SAAS,CAACe,EAAE,CAAC;IACbb,YAAY,CAACmB,YAAY,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOX,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMzB,KAAK,CAACqC,GAAG,CAAC,GAAGxB,YAAY,qBAAqBY,EAAE,EAAE,EAAE;QACxDa,YAAY,EAAE3B;MAChB,CAAC,CAAC;MAEFL,YAAY,CAAEoB,IAAI,IAChBA,IAAI,CAACa,GAAG,CAAEC,IAAI,IACZA,IAAI,CAACf,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGe,IAAI;QAAEF,YAAY,EAAE3B;MAAU,CAAC,GAAG6B,IAC1D,CACF,CAAC;MAED9B,SAAS,CAAC,IAAI,CAAC;MACfE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gDAAgD,EAAEF,GAAG,CAAC;IACtE;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKuC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCxC,OAAA;MAAIuC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC3BrC,SAAS,CAACkC,GAAG,CAAEC,IAAI,iBAClBtC,OAAA;QAAkBuC,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACzCxC,OAAA;UAAAwC,QAAA,EAAKF,IAAI,CAACG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACnBtC,MAAM,KAAK+B,IAAI,CAACf,EAAE,gBACjBvB,OAAA;UAAKuC,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCxC,OAAA;YACEuC,SAAS,EAAC,gBAAgB;YAC1BO,IAAI,EAAC,MAAM;YACXb,KAAK,EAAExB,SAAU;YACjBsC,QAAQ,EAAEjB,YAAa;YACvBkB,WAAW,EAAC;UAAsB;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACF7C,OAAA;YACEuC,SAAS,EAAC,gCAAgC;YAC1CU,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACI,IAAI,CAACf,EAAE,CAAE;YAAAiB,QAAA,EAClC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7C,OAAA;YACEuC,SAAS,EAAC,kCAAkC;YAC5CU,OAAO,EAAEA,CAAA,KAAMzC,SAAS,CAAC,IAAI,CAAE;YAAAgC,QAAA,EAChC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAEN7C,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BxC,OAAA;YAAMuC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC7BnC,UAAU,CAACoB,QAAQ,CAACa,IAAI,CAACf,EAAE,CAAC,GACzBe,IAAI,CAACF,YAAY,GACjB;UAAU;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACP7C,OAAA;YACEuC,SAAS,EAAC,kCAAkC;YAC5CU,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACgB,IAAI,CAACf,EAAE,CAAE;YAAAiB,QAAA,EAExCnC,UAAU,CAACoB,QAAQ,CAACa,IAAI,CAACf,EAAE,CAAC,GAAG,SAAS,GAAG;UAAU;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACT7C,OAAA;YACEuC,SAAS,EAAC,gCAAgC;YAC1CU,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACU,IAAI,CAACf,EAAE,EAAEe,IAAI,CAACF,YAAY,CAAE;YAAAI,QAAA,EACvD;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA,GA5CMP,IAAI,CAACf,EAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6CZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA7GID,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AA+Gd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}