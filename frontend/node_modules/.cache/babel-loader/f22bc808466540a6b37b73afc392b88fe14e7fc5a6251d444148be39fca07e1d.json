{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.jsx\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authData, setAuthData] = useState({\n    isAuthenticated: false,\n    motdepasse: null,\n    selectedOperateur: null,\n    // Nom de l'opérateur pour l'affichage\n    Opid: null // ID de l'opérateur\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    try {\n      const storedAuth = localStorage.getItem('authData');\n      if (storedAuth) {\n        const parsedAuth = JSON.parse(storedAuth);\n        console.log(\"Données d'authentification récupérées du localStorage:\", parsedAuth);\n        setAuthData(parsedAuth);\n      } else {\n        console.log(\"Aucune donnée d'authentification trouvée dans le localStorage\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des données d'authentification:\", error);\n      // Réinitialiser le localStorage en cas d'erreur de parsing\n      localStorage.removeItem('authData');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const login = (motdepasse, operateur) => {\n    console.log(\"Fonction login appelée avec les paramètres:\", {\n      motdepasse: \"***\",\n      operateur\n    });\n    if (!operateur || !operateur.id_operateur) {\n      console.error(\"Paramètres d'opérateur invalides:\", operateur);\n      return;\n    }\n    const auth = {\n      motdepasse,\n      selectedOperateur: operateur.nom,\n      // Nom pour l'affichage\n      Opid: operateur.id_operateur,\n      // ID de l'opérateur\n      isAuthenticated: true\n    };\n    console.log(\"Nouvelles données d'authentification:\", {\n      ...auth,\n      motdepasse: \"***\"\n    });\n\n    // Mettre à jour l'état local\n    setAuthData(auth);\n\n    // Mettre à jour le localStorage\n    try {\n      localStorage.setItem('authData', JSON.stringify(auth));\n      console.log(\"Données d'authentification sauvegardées dans le localStorage\");\n    } catch (error) {\n      console.error(\"Erreur lors de la sauvegarde des données d'authentification:\", error);\n    }\n  };\n  const logout = () => {\n    console.log(\"Déconnexion de l'utilisateur\");\n\n    // Réinitialiser l'état\n    setAuthData({\n      isAuthenticated: false,\n      motdepasse: null,\n      selectedOperateur: null,\n      Opid: null\n    });\n\n    // Supprimer du localStorage\n    try {\n      localStorage.removeItem('authData');\n      console.log(\"Données d'authentification supprimées du localStorage\");\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression des données d'authentification:\", error);\n    }\n  };\n\n  // Valeurs exposées par le contexte\n  const contextValue = {\n    authData,\n    login,\n    logout,\n    loading,\n    // Ajouter des getters pratiques\n    isAuthenticated: authData.isAuthenticated,\n    operateurNom: authData.selectedOperateur,\n    operateurId: authData.Opid\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"m11evAuGadL6gt+ZR/EwCY+HnZk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authData","setAuthData","isAuthenticated","motdepasse","selectedOperateur","Opid","loading","setLoading","storedAuth","localStorage","getItem","parsedAuth","JSON","parse","console","log","error","removeItem","login","operateur","id_operateur","auth","nom","setItem","stringify","logout","contextValue","operateurNom","operateurId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/context/AuthContext.js"],"sourcesContent":["// AuthContext.jsx\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authData, setAuthData] = useState({\r\n    isAuthenticated: false,\r\n    motdepasse: null,\r\n    selectedOperateur: null, // Nom de l'opérateur pour l'affichage\r\n    Opid: null,              // ID de l'opérateur\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const storedAuth = localStorage.getItem('authData');\r\n      if (storedAuth) {\r\n        const parsedAuth = JSON.parse(storedAuth);\r\n        console.log(\"Données d'authentification récupérées du localStorage:\", parsedAuth);\r\n        setAuthData(parsedAuth);\r\n      } else {\r\n        console.log(\"Aucune donnée d'authentification trouvée dans le localStorage\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la récupération des données d'authentification:\", error);\r\n      // Réinitialiser le localStorage en cas d'erreur de parsing\r\n      localStorage.removeItem('authData');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = (motdepasse, operateur) => {\r\n    console.log(\"Fonction login appelée avec les paramètres:\", { motdepasse: \"***\", operateur });\r\n    \r\n    if (!operateur || !operateur.id_operateur) {\r\n      console.error(\"Paramètres d'opérateur invalides:\", operateur);\r\n      return;\r\n    }\r\n    \r\n    const auth = {\r\n      motdepasse,\r\n      selectedOperateur: operateur.nom,  // Nom pour l'affichage\r\n      Opid: operateur.id_operateur,      // ID de l'opérateur\r\n      isAuthenticated: true,\r\n    };\r\n  \r\n    console.log(\"Nouvelles données d'authentification:\", { ...auth, motdepasse: \"***\" });\r\n    \r\n    // Mettre à jour l'état local\r\n    setAuthData(auth);\r\n    \r\n    // Mettre à jour le localStorage\r\n    try {\r\n      localStorage.setItem('authData', JSON.stringify(auth));\r\n      console.log(\"Données d'authentification sauvegardées dans le localStorage\");\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la sauvegarde des données d'authentification:\", error);\r\n    }\r\n  };\r\n  \r\n  const logout = () => {\r\n    console.log(\"Déconnexion de l'utilisateur\");\r\n    \r\n    // Réinitialiser l'état\r\n    setAuthData({\r\n      isAuthenticated: false,\r\n      motdepasse: null,\r\n      selectedOperateur: null,\r\n      Opid: null,\r\n    });\r\n    \r\n    // Supprimer du localStorage\r\n    try {\r\n      localStorage.removeItem('authData');\r\n      console.log(\"Données d'authentification supprimées du localStorage\");\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression des données d'authentification:\", error);\r\n    }\r\n  };\r\n\r\n  // Valeurs exposées par le contexte\r\n  const contextValue = {\r\n    authData,\r\n    login,\r\n    logout,\r\n    loading,\r\n    // Ajouter des getters pratiques\r\n    isAuthenticated: authData.isAuthenticated,\r\n    operateurNom: authData.selectedOperateur,\r\n    operateurId: authData.Opid\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}