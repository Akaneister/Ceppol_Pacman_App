{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\carte.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport '../css/carte.css';\n\n// Fix Leaflet marker icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst Carte = () => {\n  _s();\n  const [lieux, setLieux] = useState([]); // Liste des lieux à afficher\n  const [rapportTitres, setRapportTitres] = useState({}); // Titres des rapports indexés par id_rapport\n  const mapRef = useRef(null); // Référence pour la carte\n  const mapContainerRef = useRef(null); // Référence pour le container de la carte\n  const [pointActuel, setPointActuel] = useState(null);\n  const markerRefs = useRef([]); // Ajoutez ceci en haut du composant Carte\n\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n\n  // Fonction pour récupérer les lieux depuis l'API\n  const fetchLieux = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/lieu`);\n      setLieux(response.data);\n      console.log('Lieux récupérés:', response.data);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des lieux:', error);\n    }\n  };\n\n  // Fonction pour récupérer les titres des rapports\n  const fetchRapportTitres = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\n      // Créer un objet avec les id_rapport comme clés et les titres comme valeurs\n      const titres = {};\n      response.data.forEach(rapport => {\n        titres[rapport.id_rapport] = rapport.titre || 'Rapport sans titre';\n      });\n      setRapportTitres(titres);\n      console.log('Titres des rapports récupérés:', titres);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des titres de rapports:', error);\n    }\n  };\n\n  // Initialiser la carte et charger les données\n  useEffect(() => {\n    // Initialiser la carte uniquement si le container existe et que la carte n'est pas encore initialisée\n    if (!mapRef.current && mapContainerRef.current) {\n      mapRef.current = L.map(mapContainerRef.current).setView([43.3, 5.4], 10); // Centrer la carte\n\n      // Ajouter la couche de tuiles OpenStreetMap\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapRef.current);\n    }\n\n    // Effectuer la récupération des données au montage du composant\n    fetchLieux();\n    fetchRapportTitres();\n    return () => {\n      // Cleanup de la carte lorsque le composant est démonté\n      if (mapRef.current) {\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, [API_BASE_URL]);\n\n  // Ajouter les marqueurs une fois que les lieux et les titres des rapports sont disponibles\n  useEffect(() => {\n    if (mapRef.current && lieux.length > 0) {\n      // Supprimer uniquement les anciens marqueurs\n      markerRefs.current.forEach(marker => {\n        mapRef.current.removeLayer(marker);\n      });\n      markerRefs.current = [];\n\n      // Créer un dictionnaire pour regrouper les lieux par coordonnées\n      const coordsMap = {};\n      lieux.forEach(lieu => {\n        const coordKey = `${lieu.latitude},${lieu.longitude}`;\n        if (!coordsMap[coordKey]) {\n          coordsMap[coordKey] = [];\n        }\n        coordsMap[coordKey].push(lieu);\n      });\n\n      // Ajouter un marqueur pour chaque coordonnée unique\n      Object.entries(coordsMap).forEach(([coords, lieuxAtCoord]) => {\n        const [lat, lng] = coords.split(',');\n\n        // Ne pas ajouter de marqueur si les coordonnées sont invalides\n        if (isNaN(parseFloat(lat)) || isNaN(parseFloat(lng))) {\n          console.warn('Coordonnées invalides:', coords);\n          return;\n        }\n        const marker = L.marker([parseFloat(lat), parseFloat(lng)]).addTo(mapRef.current);\n\n        // Créer le contenu du popup avec les détails des lieux et les titres des rapports\n        let popupContent = `<div style=\"font-size: 14px; min-width: 220px;\">\n          <div style=\"font-weight: bold; margin-bottom: 8px;\">Détails du lieu</div>\n          <ul style=\"padding-left: 18px; margin: 0;\">`;\n        lieuxAtCoord.forEach(lieu => {\n          const rapportTitre = rapportTitres[lieu.id_rapport];\n          popupContent += `\n            <li style=\"margin-bottom: 8px;\">\n              <div><b>${lieu.details_lieu || 'Sans détails'}</b></div>\n              <div>Rapport : ${rapportTitre || `ID ${lieu.id_rapport}`}</div>\n              <div>ID Lieu : ${lieu.id_lieu}</div>\n            </li>`;\n        });\n        popupContent += `</ul>\n          <div style=\"margin-top: 10px; color: #555;\">\n            <span>Latitude : <b>${lat}</b></span><br/>\n            <span>Longitude : <b>${lng}</b></span>\n          </div>\n        </div>`;\n        marker.bindPopup(popupContent);\n\n        // Ouvrir le popup si c'est le point actuel\n        if (pointActuel && lieuxAtCoord.some(lieu => lieu.id_lieu === pointActuel.id_lieu)) {\n          marker.openPopup();\n        }\n        markerRefs.current.push(marker); // Stocker le marqueur pour le nettoyage futur\n      });\n    }\n  }, [lieux, rapportTitres, pointActuel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-carte\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carte-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carte des lieux\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Carte, \"VZLuN9kk9j84zZmd/cVimztAWvI=\");\n_c = Carte;\nexport default Carte;\nvar _c;\n$RefreshReg$(_c, \"Carte\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Carte","_s","lieux","setLieux","rapportTitres","setRapportTitres","mapRef","mapContainerRef","pointActuel","setPointActuel","markerRefs","API_BASE_URL","process","env","REACT_APP_API_URL","fetchLieux","response","get","data","console","log","error","fetchRapportTitres","titres","forEach","rapport","id_rapport","titre","current","map","setView","tileLayer","attribution","addTo","remove","length","marker","removeLayer","coordsMap","lieu","coordKey","latitude","longitude","push","Object","entries","coords","lieuxAtCoord","lat","lng","split","isNaN","parseFloat","warn","popupContent","rapportTitre","details_lieu","id_lieu","bindPopup","some","openPopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/carte.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport '../css/carte.css';\r\n\r\n// Fix Leaflet marker icon issue\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst Carte = () => {\r\n  const [lieux, setLieux] = useState([]); // Liste des lieux à afficher\r\n  const [rapportTitres, setRapportTitres] = useState({}); // Titres des rapports indexés par id_rapport\r\n  const mapRef = useRef(null); // Référence pour la carte\r\n  const mapContainerRef = useRef(null); // Référence pour le container de la carte\r\n  const [pointActuel, setPointActuel] = useState(null);\r\n  const markerRefs = useRef([]); // Ajoutez ceci en haut du composant Carte\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n  // Fonction pour récupérer les lieux depuis l'API\r\n  const fetchLieux = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/lieu`);\r\n      setLieux(response.data);\r\n      console.log('Lieux récupérés:', response.data);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des lieux:', error);\r\n    }\r\n  };\r\n\r\n  // Fonction pour récupérer les titres des rapports\r\n  const fetchRapportTitres = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/rapports`);\r\n      // Créer un objet avec les id_rapport comme clés et les titres comme valeurs\r\n      const titres = {};\r\n      response.data.forEach(rapport => {\r\n        titres[rapport.id_rapport] = rapport.titre || 'Rapport sans titre';\r\n      });\r\n      setRapportTitres(titres);\r\n      console.log('Titres des rapports récupérés:', titres);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des titres de rapports:', error);\r\n    }\r\n  };\r\n\r\n  // Initialiser la carte et charger les données\r\n  useEffect(() => {\r\n    // Initialiser la carte uniquement si le container existe et que la carte n'est pas encore initialisée\r\n    if (!mapRef.current && mapContainerRef.current) {\r\n      mapRef.current = L.map(mapContainerRef.current).setView([43.3, 5.4], 10); // Centrer la carte\r\n\r\n      // Ajouter la couche de tuiles OpenStreetMap\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(mapRef.current);\r\n    }\r\n\r\n    // Effectuer la récupération des données au montage du composant\r\n    fetchLieux();\r\n    fetchRapportTitres();\r\n\r\n    return () => {\r\n      // Cleanup de la carte lorsque le composant est démonté\r\n      if (mapRef.current) {\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n    };\r\n  }, [API_BASE_URL]);\r\n\r\n  // Ajouter les marqueurs une fois que les lieux et les titres des rapports sont disponibles\r\n  useEffect(() => {\r\n    if (mapRef.current && lieux.length > 0) {\r\n      // Supprimer uniquement les anciens marqueurs\r\n      markerRefs.current.forEach(marker => {\r\n        mapRef.current.removeLayer(marker);\r\n      });\r\n      markerRefs.current = [];\r\n\r\n      // Créer un dictionnaire pour regrouper les lieux par coordonnées\r\n      const coordsMap = {};\r\n\r\n      lieux.forEach(lieu => {\r\n        const coordKey = `${lieu.latitude},${lieu.longitude}`;\r\n        if (!coordsMap[coordKey]) {\r\n          coordsMap[coordKey] = [];\r\n        }\r\n        coordsMap[coordKey].push(lieu);\r\n      });\r\n\r\n      // Ajouter un marqueur pour chaque coordonnée unique\r\n      Object.entries(coordsMap).forEach(([coords, lieuxAtCoord]) => {\r\n        const [lat, lng] = coords.split(',');\r\n\r\n        // Ne pas ajouter de marqueur si les coordonnées sont invalides\r\n        if (isNaN(parseFloat(lat)) || isNaN(parseFloat(lng))) {\r\n          console.warn('Coordonnées invalides:', coords);\r\n          return;\r\n        }\r\n\r\n        const marker = L.marker([parseFloat(lat), parseFloat(lng)]).addTo(mapRef.current);\r\n\r\n        // Créer le contenu du popup avec les détails des lieux et les titres des rapports\r\n        let popupContent = `<div style=\"font-size: 14px; min-width: 220px;\">\r\n          <div style=\"font-weight: bold; margin-bottom: 8px;\">Détails du lieu</div>\r\n          <ul style=\"padding-left: 18px; margin: 0;\">`;\r\n\r\n        lieuxAtCoord.forEach(lieu => {\r\n          const rapportTitre = rapportTitres[lieu.id_rapport];\r\n          popupContent += `\r\n            <li style=\"margin-bottom: 8px;\">\r\n              <div><b>${lieu.details_lieu || 'Sans détails'}</b></div>\r\n              <div>Rapport : ${rapportTitre || `ID ${lieu.id_rapport}`}</div>\r\n              <div>ID Lieu : ${lieu.id_lieu}</div>\r\n            </li>`;\r\n        });\r\n\r\n        popupContent += `</ul>\r\n          <div style=\"margin-top: 10px; color: #555;\">\r\n            <span>Latitude : <b>${lat}</b></span><br/>\r\n            <span>Longitude : <b>${lng}</b></span>\r\n          </div>\r\n        </div>`;\r\n\r\n        marker.bindPopup(popupContent);\r\n\r\n        // Ouvrir le popup si c'est le point actuel\r\n        if (pointActuel && lieuxAtCoord.some(lieu => lieu.id_lieu === pointActuel.id_lieu)) {\r\n          marker.openPopup();\r\n        }\r\n\r\n        markerRefs.current.push(marker); // Stocker le marqueur pour le nettoyage futur\r\n      });\r\n    }\r\n  }, [lieux, rapportTitres, pointActuel]);\r\n\r\n  return (\r\n    <div className=\"page-carte\">\r\n      <div className=\"carte-header\">\r\n        <h2>Carte des lieux</h2>\r\n      </div>\r\n      <div\r\n        ref={mapContainerRef}\r\n        className=\"map-container\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carte;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}