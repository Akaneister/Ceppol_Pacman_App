{"ast":null,"code":"var _jsxFileName = \"D:\\\\Stage\\\\MarineV3\\\\frontend\\\\src\\\\components\\\\pages\\\\Admin\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SHA256 from \"crypto-js/sha256\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Password = () => {\n  _s();\n  const [passwords, setPasswords] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [editValue, setEditValue] = useState(\"\");\n  const API_BASE_URL = process.env.REACT_APP_API_URL;\n  const fetchPasswords = async () => {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\n      setPasswords(res.data);\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des mots de passe\", err);\n    }\n  };\n  useEffect(() => {\n    fetchPasswords();\n  }, []);\n  const toggleVisibility = () => {\n    setVisible(prev => !prev);\n  };\n  const handleEdit = (id, value) => {\n    setEditId(id);\n    setEditValue(\"\");\n  };\n  const handleEditChange = e => {\n    setEditValue(e.target.value);\n  };\n  const saveEdit = async id => {\n    if (!editValue.trim()) {\n      alert(\"Le champ mot de passe ne peut pas être vide.\");\n      return;\n    }\n    const hashedPassword = SHA256(editValue).toString();\n    try {\n      await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\n        mot_de_passe: hashedPassword\n      });\n      setPasswords(prev => prev.map(item => item.id === id ? {\n        ...item,\n        mot_de_passe: hashedPassword\n      } : item));\n      setEditId(null);\n      setEditValue(\"\");\n    } catch (err) {\n      console.error(\"Erreur lors de la modification du mot de passe\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"passwords-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"password-btn password-btn-toggle\",\n      onClick: toggleVisibility,\n      style: {\n        marginBottom: 16\n      },\n      children: visible ? \"Masquer tous\" : \"Afficher tous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"passwords-list\",\n      children: passwords.map((item, idx) => {\n        var _item$id;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"password-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), editId === item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-edit-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"password-input\",\n              type: \"text\",\n              value: editValue,\n              onChange: handleEditChange,\n              placeholder: \"Nouveau mot de passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"password-btn password-btn-save\",\n              onClick: () => saveEdit(item.id),\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"password-btn password-btn-cancel\",\n              onClick: () => {\n                setEditId(null);\n                setEditValue(\"\");\n              },\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"password-value\",\n              children: visible ? item.mot_de_passe : \"••••••••\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"password-btn password-btn-edit\",\n              style: {\n                marginLeft: 8\n              },\n              onClick: () => handleEdit(item.id, item.mot_de_passe),\n              children: \"\\xC9diter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, (_item$id = item.id) !== null && _item$id !== void 0 ? _item$id : idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Password, \"9ITc9ERrxlTtZ1UKmko8vfQOUnA=\");\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["React","useEffect","useState","axios","SHA256","jsxDEV","_jsxDEV","Password","_s","passwords","setPasswords","visible","setVisible","editId","setEditId","editValue","setEditValue","API_BASE_URL","process","env","REACT_APP_API_URL","fetchPasswords","res","get","data","err","console","error","toggleVisibility","prev","handleEdit","id","value","handleEditChange","e","target","saveEdit","trim","alert","hashedPassword","toString","put","mot_de_passe","map","item","className","children","onClick","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","idx","_item$id","info","type","onChange","placeholder","marginLeft","_c","$RefreshReg$"],"sources":["D:/Stage/MarineV3/frontend/src/components/pages/Admin/Password.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport SHA256 from \"crypto-js/sha256\";\r\n\r\nconst Password = () => {\r\n    const [passwords, setPasswords] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [editId, setEditId] = useState(null);\r\n    const [editValue, setEditValue] = useState(\"\");\r\n\r\n    const API_BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\n    const fetchPasswords = async () => {\r\n        try {\r\n            const res = await axios.get(`${API_BASE_URL}/admin/motdepasse`);\r\n            setPasswords(res.data);\r\n        } catch (err) {\r\n            console.error(\"Erreur lors de la récupération des mots de passe\", err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPasswords();\r\n    }, []);\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible((prev) => !prev);\r\n    };\r\n\r\n    const handleEdit = (id, value) => {\r\n        setEditId(id);\r\n        setEditValue(\"\");\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        setEditValue(e.target.value);\r\n    };\r\n\r\n    const saveEdit = async (id) => {\r\n        if (!editValue.trim()) {\r\n            alert(\"Le champ mot de passe ne peut pas être vide.\");\r\n            return;\r\n        }\r\n\r\n        const hashedPassword = SHA256(editValue).toString();\r\n\r\n        try {\r\n            await axios.put(`${API_BASE_URL}/admin/motdepasse/${id}`, {\r\n                mot_de_passe: hashedPassword,\r\n            });\r\n\r\n            setPasswords((prev) =>\r\n                prev.map((item) =>\r\n                    item.id === id\r\n                        ? { ...item, mot_de_passe: hashedPassword }\r\n                        : item\r\n                )\r\n            );\r\n\r\n            setEditId(null);\r\n            setEditValue(\"\");\r\n        } catch (err) {\r\n            console.error(\"Erreur lors de la modification du mot de passe\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"passwords-container\">\r\n            <button\r\n                className=\"password-btn password-btn-toggle\"\r\n                onClick={toggleVisibility}\r\n                style={{ marginBottom: 16 }}\r\n            >\r\n                {visible ? \"Masquer tous\" : \"Afficher tous\"}\r\n            </button>\r\n            <ul className=\"passwords-list\">\r\n                {passwords.map((item, idx) => (\r\n                    <li key={item.id ?? idx} className=\"password-item\">\r\n                        <h2>{item.info}</h2>\r\n                        {editId === item.id ? (\r\n                            <div className=\"password-edit-row\">\r\n                                <input\r\n                                    className=\"password-input\"\r\n                                    type=\"text\"\r\n                                    value={editValue}\r\n                                    onChange={handleEditChange}\r\n                                    placeholder=\"Nouveau mot de passe\"\r\n                                />\r\n                                <button\r\n                                    className=\"password-btn password-btn-save\"\r\n                                    onClick={() => saveEdit(item.id)}\r\n                                >\r\n                                    Enregistrer\r\n                                </button>\r\n                                <button\r\n                                    className=\"password-btn password-btn-cancel\"\r\n                                    onClick={() => {\r\n                                        setEditId(null);\r\n                                        setEditValue(\"\");\r\n                                    }}\r\n                                >\r\n                                    Annuler\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"password-row\">\r\n                                <span className=\"password-value\">\r\n                                    {visible ? item.mot_de_passe : \"••••••••\"}\r\n                                </span>\r\n                                <button\r\n                                    className=\"password-btn password-btn-edit\"\r\n                                    style={{ marginLeft: 8 }}\r\n                                    onClick={() =>\r\n                                        handleEdit(item.id, item.mot_de_passe)\r\n                                    }\r\n                                >\r\n                                    Éditer\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Password;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}